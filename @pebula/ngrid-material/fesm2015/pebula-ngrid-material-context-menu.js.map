{"version":3,"file":"pebula-ngrid-material-context-menu.js","sources":["ng://@pebula/ngrid-material/context-menu/lib/header-context/header-context-menu.directive.ts","ng://@pebula/ngrid-material/context-menu/lib/header-context/header-context-menu-trigger.ts","ng://@pebula/ngrid-material/context-menu/lib/header-context/header-context-menu-extension.ts","ng://@pebula/ngrid-material/context-menu/lib/header-context/styles/excel-style-header-menu.ts","ng://@pebula/ngrid-material/context-menu/lib/context-menu.module.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { PblNgridPluginController, TablePlugin } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelFactory, PblNgridOverlayPanel, PblNgridOverlayPanelConfig } from '@pebula/ngrid/overlay-panel';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    matHeaderContextMenu?: PblNgridMatHeaderContextMenuPlugin;\n  }\n}\n\nconst PLUGIN_KEY: 'matHeaderContextMenu' = 'matHeaderContextMenu';\n\n@Directive({ selector: 'pbl-ngrid[matHeaderContextMenu]' })\n@TablePlugin({ id: PLUGIN_KEY })\nexport class PblNgridMatHeaderContextMenuPlugin {\n\n  @Input('matHeaderContextMenu') style: any;\n  @Input() config: PblNgridOverlayPanelConfig;\n\n  readonly overlayPanel: PblNgridOverlayPanel;\n\n  constructor(overlayPanelFactory: PblNgridOverlayPanelFactory,\n              public readonly pluginCtrl: PblNgridPluginController) {\n    this.overlayPanel = overlayPanelFactory.create(pluginCtrl.extApi.table);\n  }\n\n}\n","import { Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelConfig } from '@pebula/ngrid/overlay-panel';\n\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context-menu.directive';\n\nconst DEFAULT_CONFIG: PblNgridOverlayPanelConfig = { hasBackdrop: true, xPos: 'after', yPos: 'below' };\n\n@Component({\n  selector: 'div[mat-header-context-menu-trigger]',\n  host: {\n    '(click)': 'openOverlayPanel()',\n  },\n  templateUrl: `./header-context-menu-trigger.html`,\n  styleUrls: [ `./header-context-menu-trigger.scss` ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatHeaderContextMenuTrigger {\n\n  context: PblNgridDataHeaderExtensionContext;\n\n  constructor(private plugin: PblNgridMatHeaderContextMenuPlugin, private elRef: ElementRef<HTMLElement>) { }\n\n  openOverlayPanel() {\n    const config = this.plugin.config || DEFAULT_CONFIG;\n    this.plugin.overlayPanel.open(this.plugin.style, this.elRef, config, this.context);\n  }\n}\n","import { ComponentFactory, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { PblNgridMultiComponentRegistry, PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\n\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context-menu.directive';\nimport { MatHeaderContextMenuTrigger } from './header-context-menu-trigger';\n\nexport class MatHeaderContextMenuExtension extends PblNgridMultiComponentRegistry<MatHeaderContextMenuTrigger, 'dataHeaderExtensions'> {\n  readonly name: 'matHeaderContextMenuTrigger' = 'matHeaderContextMenuTrigger';\n  readonly kind: 'dataHeaderExtensions' = 'dataHeaderExtensions';\n  readonly projectContent = false;\n\n  constructor(private cfr: ComponentFactoryResolver) { super(); }\n\n  shouldRender(context: PblNgridDataHeaderExtensionContext): boolean {\n    return !!context.injector.get(PblNgridMatHeaderContextMenuPlugin, false);\n  }\n\n  getFactory(context: PblNgridDataHeaderExtensionContext): ComponentFactory<MatHeaderContextMenuTrigger> {\n    return this.cfr.resolveComponentFactory(MatHeaderContextMenuTrigger);\n  }\n\n  onCreated(context: PblNgridDataHeaderExtensionContext, cmpRef: ComponentRef<MatHeaderContextMenuTrigger>): void {\n    cmpRef.instance.context = context;\n    cmpRef.changeDetectorRef.markForCheck();\n  }\n}\n","import { Component, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\n\nimport { PblNgridComponent, PblColumn, PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelRef } from '@pebula/ngrid/overlay-panel';\n\n@Component({\n  selector: 'mat-excel-style-header-menu',\n  templateUrl: `./excel-style-header-menu.html`,\n  styleUrls: [ `./excel-style-header-menu.scss` ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatExcelStyleHeaderMenu {\n  column: PblColumn;\n  grid: PblNgridComponent\n\n  @ViewChild('columnMenu', { read: MatMenu, static: true }) matMenu: MatMenu;\n\n  currentSort: 'asc' | 'desc' | undefined;\n  currentPin: 'start' | 'end' | undefined;\n  currentFilter: any = '';\n\n  constructor(private ref: PblNgridOverlayPanelRef<PblNgridDataHeaderExtensionContext>, private vcRef: ViewContainerRef) {\n    this.column = ref.data.col;\n    this.grid = ref.data.table;\n\n    if (this.grid.ds.sort.column === this.column) {\n      this.currentSort = this.grid.ds.sort.sort.order;\n    }\n    this.currentPin = this.column.columnDef.sticky ? 'start' : this.column.columnDef.stickyEnd ? 'end' : undefined;\n    const dsFilter = this.grid.ds.filter;\n    if (dsFilter && dsFilter.type === 'value' && dsFilter.columns && dsFilter.columns.indexOf(this.column) >= 0) {\n      this.currentFilter = dsFilter.filter;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.matMenu.closed.subscribe( reason => {\n      this.ref.close();\n    });\n\n    const view = this.vcRef.createEmbeddedView(this.matMenu.templateRef);\n    this.matMenu.setElevation(0);\n    this.matMenu.focusFirstItem('program');\n    this.matMenu._resetAnimation();\n    view.markForCheck();\n    view.detectChanges();\n    this.matMenu._startAnimation();\n  }\n\n  hide(): void {\n    const hidden: string[] = [this.column.id];\n\n    for (const col of this.grid.columnApi.columns) {\n      if (col.hidden) {\n        hidden.push(col.id);\n      }\n    }\n\n    this.grid.hideColumns = hidden;\n  }\n\n  onSortToggle(sort: 'asc' | 'desc'): void {\n    if (this.currentSort === sort) {\n      this.grid.ds.setSort();\n    } else {\n      this.grid.ds.setSort(this.column, { order: sort });\n    }\n  }\n\n  onPinToggle(pin: 'start' | 'end'): void {\n    if (this.currentPin === pin) {\n      this.column.columnDef.updatePin()\n    } else {\n      this.column.columnDef.updatePin(pin)\n    }\n  }\n\n\n  filterColumn(filterValue: string) {\n    this.currentFilter = filterValue;\n    if (!filterValue) {\n      this.grid.setFilter();\n    } else {\n      this.grid.setFilter(filterValue.trim(), [ this.column ]);\n    }\n  }\n\n  clickTrap(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { NgModule, Optional, SkipSelf, ComponentFactoryResolver } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { PblNgridModule, PblNgridConfigService, PblNgridRegistryService } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelModule, PblNgridOverlayPanelComponentExtension } from '@pebula/ngrid/overlay-panel';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { MatHeaderContextMenuTrigger } from './header-context/header-context-menu-trigger';\nimport { MatHeaderContextMenuExtension } from './header-context/header-context-menu-extension';\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context/header-context-menu.directive';\nimport { MatExcelStyleHeaderMenu } from './header-context/styles/excel-style-header-menu';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    PblNgridModule,\n    PblNgridOverlayPanelModule\n  ],\n  declarations: [\n    MatHeaderContextMenuTrigger,\n    PblNgridMatHeaderContextMenuPlugin,\n    MatExcelStyleHeaderMenu,\n  ],\n  exports: [\n    PblNgridMatHeaderContextMenuPlugin,\n  ],\n  entryComponents: [\n    MatHeaderContextMenuTrigger,\n    MatExcelStyleHeaderMenu,\n  ],\n})\nexport class PblNgridContextMenuModule {\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridContextMenuModule,\n              registry: PblNgridRegistryService,\n              cfr: ComponentFactoryResolver,\n              configService: PblNgridConfigService) {\n    if (parentModule) {\n      return;\n    }\n    registry.addMulti('dataHeaderExtensions', new MatHeaderContextMenuExtension(cfr));\n    registry.addMulti('overlayPanels', new PblNgridOverlayPanelComponentExtension('excelMenu', MatExcelStyleHeaderMenu, cfr));\n  }\n}\n"],"names":[],"mappings":"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"}