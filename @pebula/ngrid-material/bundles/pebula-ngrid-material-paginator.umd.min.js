!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("@angular/core"),require("@angular/common"),require("@angular/material/paginator"),require("@angular/material/select"),require("@angular/material/tooltip"),require("@angular/material/button"),require("@pebula/ngrid"),require("@angular/cdk/coercion")):"function"==typeof define&&define.amd?define("@pebula/ngrid-material/paginator",["exports","@angular/core","@angular/common","@angular/material/paginator","@angular/material/select","@angular/material/tooltip","@angular/material/button","@pebula/ngrid","@angular/cdk/coercion"],a):a(((e=e||self).pebula=e.pebula||{},e.pebula["ngrid-material"]=e.pebula["ngrid-material"]||{},e.pebula["ngrid-material"].paginator={}),e.ng.core,e.ng.common,e.ng.material.paginator,e.ng.material.select,e.ng.material.tooltip,e.ng.material.button,e.pebula.ngrid,e.ng.cdk.coercion)}(this,(function(e,a,t,n,i,o,r,g,p){"use strict";var l=[5,10,20,50,100],s=function(){function e(e,a,t){var n=this;this._intl=a,this.cdr=t,this.pages=[],this.pageSizes=l.slice(),this._hidePageSize=!1,this._hideRangeSelect=!1,e&&(this.table=e),a.changes.pipe(g.utils.unrx(this)).subscribe((function(){return n.cdr.markForCheck()}))}return Object.defineProperty(e.prototype,"pageSizeOptions",{get:function(){return this._pageSizeOptions},set:function(e){this._pageSizeOptions=e,this.pageSizes=(e||l).slice(),this.updatePageSizes()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"paginator",{get:function(){return this._paginator},set:function(e){var a=this;this._paginator!==e&&(this._paginator&&g.utils.unrx.kill(this,this._paginator),this._paginator=e,e&&(e.onChange.pipe(g.utils.unrx(this,e)).subscribe((function(e){return a.handlePageChange(e)})),this.updatePageSizes()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hidePageSize",{get:function(){return this._hidePageSize},set:function(e){this._hidePageSize=p.coerceBooleanProperty(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hideRangeSelect",{get:function(){return this._hideRangeSelect},set:function(e){this._hideRangeSelect=p.coerceBooleanProperty(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnDestroy=function(){g.utils.unrx.kill(this)},e.prototype.updatePageSizes=function(){this.paginator&&-1===this.pageSizes.indexOf(this.paginator.perPage)&&this.pageSizes.push(this.paginator.perPage),this.pageSizes.sort((function(e,a){return e-a}))},e.prototype.handlePageChange=function(e){if(this.pages.length!==this.paginator.totalPages)for(var a=this.pages=[],t=1,n=this.paginator.totalPages+1;t<n;t++)a.push(t);this.cdr.detectChanges(),this.cdr.markForCheck()},e.decorators=[{type:a.Component,args:[{selector:"pbl-ngrid-paginator",template:'<div class="mat-paginator-outer-container">\n  <div class="mat-paginator-container">\n    <div *ngIf="!hidePageSize" class="mat-paginator-page-size">\n      <div class="mat-paginator-page-size-label">\n        {{_intl.itemsPerPageLabel}}\n      </div>\n\n      <mat-form-field *ngIf="pageSizes.length > 1"\n                      class="mat-paginator-page-size-select">\n        <mat-select\n          [value]="paginator.perPage"\n          [aria-label]="_intl.itemsPerPageLabel"\n          [disabled]="pageSizes[0] >= paginator.total && (!paginator.hasPrev() && !paginator.hasNext())"\n          (selectionChange)="paginator.perPage = $event.value">\n          <mat-option *ngFor="let pageSizeOption of pageSizes" [value]="pageSizeOption">\n            {{pageSizeOption}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div *ngIf="pageSizes.length <= 1">{{paginator?.perPage}}</div>\n    </div>\n\n    <div class="mat-paginator-range-actions">\n      <div *ngIf="paginator.kind ===\'pageNumber\'" class="mat-paginator-range-label">\n        {{_intl.getRangeLabel(paginator.page - 1, paginator.perPage, paginator.total)}}\n      </div>\n\n      <button mat-icon-button type="button"\n              class="mat-paginator-navigation-previous"\n              (click)="paginator.prevPage()"\n              [attr.aria-label]="_intl.previousPageLabel"\n              [matTooltip]="_intl.previousPageLabel"\n              [matTooltipPosition]="\'above\'"\n              [disabled]="!paginator.hasPrev()">\n        <svg class="mat-paginator-icon" viewBox="0 0 24 24" focusable="false">\n          <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>\n        </svg>\n      </button>\n\n      <mat-form-field *ngIf="!hideRangeSelect && paginator.kind ===\'pageNumber\' && pageSizes.length >= 1"\n                      class="mat-paginator-page-size-select">\n        <mat-select\n          [value]="paginator.page"\n          [disabled]="paginator.totalPages === 1"\n          (selectionChange)="paginator.page = $event.value">\n          <mat-option *ngFor="let p of pages" [value]="p">{{p}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <button mat-icon-button type="button"\n              class="mat-paginator-navigation-next"\n              (click)="paginator.nextPage()"\n              [attr.aria-label]="_intl.nextPageLabel"\n              [matTooltip]="_intl.nextPageLabel"\n              [matTooltipPosition]="\'above\'"\n              [disabled]="!paginator.hasNext()">\n        <svg class="mat-paginator-icon" viewBox="0 0 24 24" focusable="false">\n          <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/>\n        </svg>\n      </button>\n    </div>\n  </div>\n</div>\n',host:{class:"mat-paginator"},changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:[".mat-paginator-range-label{flex-grow:1}.mat-paginator-container{box-sizing:border-box}"]}]}],e.ctorParameters=function(){return[{type:g.PblNgridComponent,decorators:[{type:a.Optional}]},{type:n.MatPaginatorIntl},{type:a.ChangeDetectorRef}]},e.propDecorators={pageSizeOptions:[{type:a.Input}],paginator:[{type:a.Input}],table:[{type:a.Input}],hidePageSize:[{type:a.Input}],hideRangeSelect:[{type:a.Input}]},e}();var u=function(){function e(e,a){e.resolveComponentFactory(n.MatPaginator).create(a)}return e.decorators=[{type:a.NgModule,args:[{imports:[t.CommonModule,n.MatPaginatorModule,i.MatSelectModule,o.MatTooltipModule,r.MatButtonModule,g.PblNgridModule],declarations:[s],exports:[s],entryComponents:[s,n.MatPaginator]}]}],e.ctorParameters=function(){return[{type:a.ComponentFactoryResolver},{type:a.Injector}]},e}();e.PblNgridPaginatorModule=u,e.Éµa=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=pebula-ngrid-material-paginator.umd.min.js.map