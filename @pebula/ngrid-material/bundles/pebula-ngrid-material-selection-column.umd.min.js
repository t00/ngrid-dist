!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/material/checkbox"),require("@pebula/ngrid"),require("@pebula/utils"),require("@angular/cdk/collections")):"function"==typeof define&&define.amd?define("@pebula/ngrid-material/selection-column",["exports","@angular/core","@angular/common","@angular/material/checkbox","@pebula/ngrid","@pebula/utils","@angular/cdk/collections"],t):t(((e=e||self).pebula=e.pebula||{},e.pebula["ngrid-material"]=e.pebula["ngrid-material"]||{},e.pebula["ngrid-material"]["selection-column"]={}),e.ng.core,e.ng.common,e.ng.material.checkbox,e.pebula.ngrid,e.pebula.utils)}(this,function(e,t,o,n,i,l){"use strict";function c(e,t,o,n){var i,l=arguments.length,c=l<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,o,n);else for(var r=e.length-1;r>=0;r--)(i=e[r])&&(c=(l<3?i(c):l>3?i(t,o,c):i(t,o))||c);return l>3&&c&&Object.defineProperty(t,o,c),c}function r(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function s(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var n,i,l=o.call(e),c=[];try{for(;(void 0===t||t-- >0)&&!(n=l.next()).done;)c.push(n.value)}catch(e){i={error:e}}finally{try{n&&!n.done&&(o=l.return)&&o.call(l)}finally{if(i)throw i.error}}return c}var a=function(){return!1},h=function(){function e(e,t){this.table=e,this.cdr=t,this.allSelected=!1,this._isCheckboxDisabled=a}return Object.defineProperty(e.prototype,"bulkSelectMode",{get:function(){return this._bulkSelectMode},set:function(e){e!==this._bulkSelectMode&&(this._bulkSelectMode=e,this.cdr.markForCheck(),this.cdr.detectChanges())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selection",{get:function(){return this._selection},set:function(e){e!==this._selection&&(this._selection=e,this.setupSelection())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isCheckboxDisabled",{get:function(){return this._isCheckboxDisabled},set:function(e){e!==this._isCheckboxDisabled&&(this._isCheckboxDisabled=e,this._isCheckboxDisabled&&"function"==typeof this._isCheckboxDisabled||(this._isCheckboxDisabled=a))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(e){e!==this._color&&(this._color=e,this.cdr.markForCheck(),this.cdr.detectChanges())},enumerable:!0,configurable:!0}),e.prototype.ngAfterViewInit=function(){this.selection||(this.selection=this.table.ds.selection);var e=this.table.registry;e.addMulti("headerCell",this.headerDef),e.addMulti("tableCell",this.cellDef),e.addMulti("footerCell",this.footerDef)},e.prototype.masterToggle=function(){var e,t=this;if(this.allSelected)this.selection.clear();else{var o=this.getCollection().filter(function(e){return!t._isCheckboxDisabled(e)});(e=this.selection).select.apply(e,function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e}(o))}},e.prototype.rowItemChange=function(e){this.selection.toggle(e)},e.prototype.getCollection=function(){var e=this.table.ds;return"view"===this.bulkSelectMode?e.renderedData:e.source},e.prototype.setupSelection=function(){var e=this;l.UnRx.kill(this,this.table),this._selection?(this.length=this.selection.selected.length,this.selection.changed.pipe(l.UnRx(this,this.table)).subscribe(function(){var t=e.getCollection().length;e.allSelected=!e.selection.isEmpty()&&e.selection.selected.length===t,e.length=e.selection.selected.length,e.cdr.markForCheck(),e.cdr.detectChanges()})):this.length=0},e.decorators=[{type:t.Component,args:[{selector:"pbl-ngrid-checkbox",template:'<ng-container *pblNgridHeaderCellDef="name; col as col;">\n  <mat-checkbox *ngIf="bulkSelectMode !== \'none\'"\n                style="overflow: initial"\n                [color]="color"\n                (click)="$event.stopPropagation()"\n                (change)="$event ? masterToggle() : null"\n                [checked]="allSelected"\n                [indeterminate]="length > 0 && !allSelected">\n  </mat-checkbox>\n</ng-container>\n<mat-checkbox *pblNgridCellDef="name; row as row;"\n              style="overflow: initial"\n              [color]="color"\n              [disabled]=isCheckboxDisabled(row)\n              (click)="$event.stopPropagation()"\n              (change)="rowItemChange(row)"\n              [checked]="selection.isSelected(row)">\n</mat-checkbox>\n<span *pblNgridFooterCellDef="name; col as col;">{{ length ? length : \'\' }}</span>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None,styles:[".mat-cell.pbl-ngrid-checkbox,.mat-header-cell.pbl-ngrid-checkbox{box-sizing:content-box;flex:0 0 24px;overflow:visible}"]}]}],e.ctorParameters=function(){return[{type:i.PblNgridComponent,decorators:[{type:t.Optional}]},{type:t.ChangeDetectorRef}]},e.propDecorators={name:[{type:t.Input}],bulkSelectMode:[{type:t.Input}],selection:[{type:t.Input}],isCheckboxDisabled:[{type:t.Input}],color:[{type:t.Input}],headerDef:[{type:t.ViewChild,args:[i.PblNgridHeaderCellDefDirective,{static:!0}]}],cellDef:[{type:t.ViewChild,args:[i.PblNgridCellDefDirective,{static:!0}]}],footerDef:[{type:t.ViewChild,args:[i.PblNgridFooterCellDefDirective,{static:!0}]}]},e=c([l.UnRx(),r("design:paramtypes",[i.PblNgridComponent,t.ChangeDetectorRef])],e)}();var u="matCheckboxSelection",p=function(){function e(e,t,o,n){this.table=e,this.cfr=t,this.injector=o,this._removePlugin=n.setPlugin(u,this)}return Object.defineProperty(e.prototype,"isCheckboxDisabled",{get:function(){return this._isCheckboxDisabled},set:function(e){e!==this._isCheckboxDisabled&&(this._isCheckboxDisabled=e,this.cmpRef&&e&&(this.cmpRef.instance.isCheckboxDisabled=e,this.cmpRef.changeDetectorRef.detectChanges()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"matCheckboxSelection",{get:function(){return this._name},set:function(e){e!==this._name&&(this._name=e,e?(this.cmpRef||(this.cmpRef=this.cfr.resolveComponentFactory(h).create(this.injector),this.cmpRef.instance.table=this.table,this._bulkSelectMode&&(this.cmpRef.instance.bulkSelectMode=this._bulkSelectMode),this.cmpRef.instance.color=this._color),this.isCheckboxDisabled&&(this.cmpRef.instance.isCheckboxDisabled=this.isCheckboxDisabled),this.cmpRef.instance.name=e,this.cmpRef.changeDetectorRef.detectChanges()):this.cmpRef&&(this.cmpRef.destroy(),this.cmpRef=void 0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bulkSelectMode",{get:function(){return this._bulkSelectMode},set:function(e){e!==this._bulkSelectMode&&(this._bulkSelectMode=e,this.cmpRef&&(this.cmpRef.instance.bulkSelectMode=e))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"matCheckboxSelectionColor",{get:function(){return this._color},set:function(e){e!==this._color&&(this._color=e,this.cmpRef&&(this.cmpRef.instance.color=e))},enumerable:!0,configurable:!0}),e.prototype.ngOnDestroy=function(){this.cmpRef&&this.cmpRef.destroy(),this._removePlugin(this.table)},e.decorators=[{type:t.Directive,args:[{selector:"pbl-ngrid[matCheckboxSelection]"}]}],e.ctorParameters=function(){return[{type:i.PblNgridComponent},{type:t.ComponentFactoryResolver},{type:t.Injector},{type:i.PblNgridPluginController}]},e.propDecorators={isCheckboxDisabled:[{type:t.Input}],matCheckboxSelection:[{type:t.Input}],bulkSelectMode:[{type:t.Input}],matCheckboxSelectionColor:[{type:t.Input}]},e=c([i.TablePlugin({id:u}),l.UnRx(),r("design:paramtypes",[i.PblNgridComponent,t.ComponentFactoryResolver,t.Injector,i.PblNgridPluginController])],e)}();var b=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,n.MatCheckboxModule,i.PblNgridModule],declarations:[p,h],exports:[p,h],entryComponents:[h]}]}],e}();e.PblNgridCheckboxModule=b,e.ɵa=p,e.ɵb=h,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=pebula-ngrid-material-selection-column.umd.min.js.map