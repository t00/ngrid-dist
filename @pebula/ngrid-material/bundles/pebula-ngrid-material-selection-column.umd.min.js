!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/material/checkbox"),require("@pebula/ngrid"),require("@angular/cdk/collections")):"function"==typeof define&&define.amd?define("@pebula/ngrid-material/selection-column",["exports","@angular/core","@angular/common","@angular/material/checkbox","@pebula/ngrid","@angular/cdk/collections"],t):t(((e=e||self).pebula=e.pebula||{},e.pebula["ngrid-material"]=e.pebula["ngrid-material"]||{},e.pebula["ngrid-material"]["selection-column"]={}),e.ng.core,e.ng.common,e.ng.material.checkbox,e.pebula.ngrid)}(this,(function(e,t,i,o,n){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function l(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var o,n,l=i.call(e),c=[];try{for(;(void 0===t||t-- >0)&&!(o=l.next()).done;)c.push(o.value)}catch(e){n={error:e}}finally{try{o&&!o.done&&(i=l.return)&&i.call(l)}finally{if(n)throw n.error}}return c}var c=function(){return!1},r=function(){function e(e,t){var i=this;this.table=e,this.cdr=t,this.allSelected=!1,this._isCheckboxDisabled=c,n.PblNgridPluginController.find(e).events.pipe(n.utils.unrx(this)).subscribe((function(e){"onDataSource"===e.kind&&(i.selection=e.curr.selection)}))}return Object.defineProperty(e.prototype,"bulkSelectMode",{get:function(){return this._bulkSelectMode},set:function(e){e!==this._bulkSelectMode&&(this._bulkSelectMode=e,this.cdr.markForCheck(),this.cdr.detectChanges())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selection",{get:function(){return this._selection},set:function(e){e!==this._selection&&(this._selection=e,this.setupSelection())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isCheckboxDisabled",{get:function(){return this._isCheckboxDisabled},set:function(e){e!==this._isCheckboxDisabled&&(this._isCheckboxDisabled=e,this._isCheckboxDisabled&&"function"==typeof this._isCheckboxDisabled||(this._isCheckboxDisabled=c))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(e){e!==this._color&&(this._color=e,this.table.isInit&&(this.cdr.markForCheck(),this.cdr.detectChanges()))},enumerable:!0,configurable:!0}),e.prototype.ngAfterViewInit=function(){!this.selection&&this.table.ds&&(this.selection=this.table.ds.selection);var e=this.table.registry;e.addMulti("headerCell",this.headerDef),e.addMulti("tableCell",this.cellDef),e.addMulti("footerCell",this.footerDef)},e.prototype.ngOnDestroy=function(){n.utils.unrx.kill(this)},e.prototype.masterToggle=function(){var e,t=this;if(this.allSelected)this.selection.clear();else{var i=this.getCollection().filter((function(e){return!t._isCheckboxDisabled(e)}));(e=this.selection).select.apply(e,function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(l(arguments[t]));return e}(i))}},e.prototype.rowItemChange=function(e){this.selection.toggle(e),this.cdr.markForCheck(),this.cdr.detectChanges()},e.prototype.getCollection=function(){var e=this.table.ds;return"view"===this.bulkSelectMode?e.renderedData:e.source},e.prototype.setupSelection=function(){var e=this;(n.utils.unrx.kill(this,this.table),this._selection)?(this.length=this.selection.selected.length,this.selection.changed.pipe(n.utils.unrx(this,this.table)).subscribe((function(){e.handleSelectionChanged()})),("view"===this.bulkSelectMode?this.table.ds.onRenderedDataChanged:this.table.ds.onSourceChanged).pipe(n.utils.unrx(this,this.table)).subscribe((function(){e.handleSelectionChanged()}))):this.length=0},e.prototype.handleSelectionChanged=function(){var e=this,t=this.getCollection().filter((function(t){return!e._isCheckboxDisabled(t)})).length;this.allSelected=!this.selection.isEmpty()&&this.selection.selected.length===t,this.length=this.selection.selected.length,this.cdr.markForCheck(),this.cdr.detectChanges()},e.decorators=[{type:t.Component,args:[{selector:"pbl-ngrid-checkbox",template:'<ng-container *pblNgridHeaderCellDef="name; col as col;">\n  <mat-checkbox *ngIf="bulkSelectMode !== \'none\'"\n                style="overflow: initial"\n                [color]="color"\n                (click)="$event.stopPropagation()"\n                (change)="$event ? masterToggle() : null"\n                [checked]="allSelected"\n                [indeterminate]="length > 0 && !allSelected">\n  </mat-checkbox>\n</ng-container>\n<mat-checkbox *pblNgridCellDef="name; row as row;"\n              style="overflow: initial"\n              [color]="color"\n              [disabled]=isCheckboxDisabled(row)\n              (click)="$event.stopPropagation()"\n              (change)="rowItemChange(row)"\n              [checked]="selection.isSelected(row)">\n</mat-checkbox>\n<span *pblNgridFooterCellDef="name; col as col;">{{ length ? length : \'\' }}</span>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,encapsulation:t.ViewEncapsulation.None,styles:[".mat-cell.pbl-ngrid-checkbox,.mat-header-cell.pbl-ngrid-checkbox{box-sizing:content-box;flex:0 0 24px;overflow:visible}"]}]}],e.ctorParameters=function(){return[{type:n.PblNgridComponent},{type:t.ChangeDetectorRef}]},e.propDecorators={name:[{type:t.Input}],bulkSelectMode:[{type:t.Input}],selection:[{type:t.Input}],isCheckboxDisabled:[{type:t.Input}],color:[{type:t.Input}],headerDef:[{type:t.ViewChild,args:[n.PblNgridHeaderCellDefDirective,{static:!0}]}],cellDef:[{type:t.ViewChild,args:[n.PblNgridCellDefDirective,{static:!0}]}],footerDef:[{type:t.ViewChild,args:[n.PblNgridFooterCellDefDirective,{static:!0}]}]},e}();var s="matCheckboxSelection",a=function(){function e(e,t,i,o){this.table=e,this.cfr=t,this.injector=i,this._color="primary",this._removePlugin=o.setPlugin(s,this)}return Object.defineProperty(e.prototype,"isCheckboxDisabled",{get:function(){return this._isCheckboxDisabled},set:function(e){e!==this._isCheckboxDisabled&&(this._isCheckboxDisabled=e,this.cmpRef&&e&&(this.cmpRef.instance.isCheckboxDisabled=e,this.cmpRef.changeDetectorRef.detectChanges()))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"matCheckboxSelection",{get:function(){return this._name},set:function(e){e!==this._name&&(this._name=e,e?(this.cmpRef||(this.cmpRef=this.cfr.resolveComponentFactory(r).create(this.injector),this.cmpRef.instance.table=this.table,this._bulkSelectMode&&(this.cmpRef.instance.bulkSelectMode=this._bulkSelectMode),this.cmpRef.instance.color=this._color),this.isCheckboxDisabled&&(this.cmpRef.instance.isCheckboxDisabled=this.isCheckboxDisabled),this.cmpRef.instance.name=e,this.cmpRef.changeDetectorRef.detectChanges()):this.cmpRef&&(this.cmpRef.destroy(),this.cmpRef=void 0))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"bulkSelectMode",{get:function(){return this._bulkSelectMode},set:function(e){e!==this._bulkSelectMode&&(this._bulkSelectMode=e,this.cmpRef&&(this.cmpRef.instance.bulkSelectMode=e))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"matCheckboxSelectionColor",{get:function(){return this._color},set:function(e){e!==this._color&&(this._color=e,this.cmpRef&&(this.cmpRef.instance.color=e))},enumerable:!0,configurable:!0}),e.prototype.ngOnDestroy=function(){this.cmpRef&&this.cmpRef.destroy(),this._removePlugin(this.table)},e.decorators=[{type:t.Directive,args:[{selector:"pbl-ngrid[matCheckboxSelection]"}]}],e.ctorParameters=function(){return[{type:n.PblNgridComponent},{type:t.ComponentFactoryResolver},{type:t.Injector},{type:n.PblNgridPluginController}]},e.propDecorators={isCheckboxDisabled:[{type:t.Input}],matCheckboxSelection:[{type:t.Input}],bulkSelectMode:[{type:t.Input}],matCheckboxSelectionColor:[{type:t.Input}]},e}();var h=function(){function e(){}return e.NGRID_PLUGIN=n.ngridPlugin({id:s},a),e.decorators=[{type:t.NgModule,args:[{imports:[i.CommonModule,o.MatCheckboxModule,n.PblNgridModule],declarations:[a,r],exports:[a,r],entryComponents:[r]}]}],e}();e.PblNgridCheckboxModule=h,e.ɵa=s,e.ɵb=a,e.ɵc=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=pebula-ngrid-material-selection-column.umd.min.js.map