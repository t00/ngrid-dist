{"version":3,"sources":["ng://@pebula/ngrid-material/paginator/lib/table-paginator.component.ts","ng://@pebula/ngrid-material/paginator/lib/table-paginator.module.ts"],"names":["DEFAULT_PAGE_SIZE_OPTIONS","PblPaginatorComponent","table","_intl","cdr","_this","this","pages","pageSizes","slice","_hidePageSize","_hideRangeSelect","changes","pipe","utils","unrx","subscribe","markForCheck","Object","defineProperty","prototype","_pageSizeOptions","value","updatePageSizes","_paginator","kill","onChange","event","handlePageChange","coerceBooleanProperty","ngOnDestroy","paginator","indexOf","perPage","push","sort","a","b","length","totalPages","i","len","detectChanges","Component","args","selector","template","host","class","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","PblNgridComponent","decorators","type","Optional","MatPaginatorIntl","ChangeDetectorRef","Input","PblNgridPaginatorModule","cf","injector","resolveComponentFactory","MatPaginator","create","NgModule","imports","CommonModule","MatPaginatorModule","MatSelectModule","MatTooltipModule","MatButtonModule","PblNgridModule","declarations","exports","entryComponents","ComponentFactoryResolver","Injector"],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\n\nimport { PblPagingPaginator, PblPaginatorChangeEvent, PblNgridComponent, utils } from '@pebula/ngrid';\n\nconst DEFAULT_PAGE_SIZE_OPTIONS = [5, 10, 20, 50, 100];\n\n@Component({\n  selector: 'pbl-ngrid-paginator',\n  templateUrl: './table-paginator.component.html',\n  styleUrls: ['./table-paginator.component.scss'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class PblPaginatorComponent implements OnDestroy {\n  pages: number[] = [];\n  pageSizes: number[] = DEFAULT_PAGE_SIZE_OPTIONS.slice();\n\n  @Input() get pageSizeOptions(): number[] { return this._pageSizeOptions; }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = value;\n    this.pageSizes = (value || DEFAULT_PAGE_SIZE_OPTIONS).slice();\n    this.updatePageSizes();\n  }\n\n  @Input() get paginator(): PblPagingPaginator { return this._paginator; }\n  set paginator(value: PblPagingPaginator) {\n    if (this._paginator === value) {\n      return;\n    }\n    if (this._paginator) {\n      utils.unrx.kill(this, this._paginator);\n    }\n    this._paginator = value;\n    if (value) {\n      // pagination.onChange is BehaviorSubject so handlePageChange will trigger\n      value.onChange\n        .pipe(utils.unrx(this, value))\n        .subscribe( event => this.handlePageChange(event) );\n      this.updatePageSizes();\n    }\n  }\n\n  @Input() table: PblNgridComponent<any>;\n\n  @Input() get hidePageSize(): boolean { return this._hidePageSize; }\n  set hidePageSize(value: boolean) { this._hidePageSize = coerceBooleanProperty(value); }\n\n  @Input() get hideRangeSelect(): boolean { return this._hideRangeSelect; }\n  set hideRangeSelect(value: boolean) { this._hideRangeSelect = coerceBooleanProperty(value); }\n\n  private _pageSizeOptions: number[];\n  private _paginator: PblPagingPaginator;\n  private _hidePageSize = false;\n  private _hideRangeSelect = false;\n\n  constructor(@Optional() table: PblNgridComponent<any>,\n              public _intl: MatPaginatorIntl,\n              private cdr: ChangeDetectorRef) {\n    if (table) {\n      this.table = table;\n    }\n    _intl.changes\n      .pipe(utils.unrx(this))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnDestroy(): void {\n    utils.unrx.kill(this);\n  }\n\n  private updatePageSizes(): void {\n    if (this.paginator && this.pageSizes.indexOf(this.paginator.perPage) === -1) {\n      this.pageSizes.push(this.paginator.perPage);\n    }\n    this.pageSizes.sort((a, b) => a - b);\n  }\n\n  private handlePageChange(event: PblPaginatorChangeEvent): void {\n    if (this.pages.length !== this.paginator.totalPages) {\n      const pages = this.pages = [];\n      for (let i = 1, len = this.paginator.totalPages+1; i<len; i++) { pages.push(i); }\n    }\n    // this is required here to prevent `ExpressionChangedAfterItHasBeenCheckedError` when the component has or wrapped\n    // by an ngIf\n    this.cdr.detectChanges();\n    this.cdr.markForCheck();\n  }\n}\n","import { NgModule, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { PblNgridModule } from '@pebula/ngrid';\nimport { PblPaginatorComponent } from './table-paginator.component';\n// TODO: Remove MatPaginatorModule and the initial code in the constructor\n// set the styles in the SCSS.\n\n@NgModule({\n  imports: [ CommonModule, MatPaginatorModule, MatSelectModule, MatTooltipModule, MatButtonModule, PblNgridModule ],\n  declarations: [ PblPaginatorComponent ],\n  exports: [ PblPaginatorComponent ],\n  // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n  entryComponents: [ PblPaginatorComponent, MatPaginator ]\n})\nexport class PblNgridPaginatorModule {\n  constructor(cf: ComponentFactoryResolver, injector: Injector) {\n    // this is a workaround to ensure CSS from mat slider is loaded, otherwise it is omitted.\n    cf.resolveComponentFactory(MatPaginator).create(injector);\n  }\n}\n"]}