{"version":3,"file":"pebula-ngrid-material-cell-tooltip.js","sources":["ng://@pebula/ngrid-material/cell-tooltip/lib/cell-tooltip.directive.ts","ng://@pebula/ngrid-material/cell-tooltip/lib/cell-tooltip.module.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Injector,\n  OnDestroy,\n  Input,\n  NgZone,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Platform} from '@angular/cdk/platform';\nimport { TooltipPosition, MatTooltipDefaultOptions, MatTooltip, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridComponent, PblNgridPluginController, NgridPlugin, PblNgridConfigService } from '@pebula/ngrid';\nimport { PblNgridCellEvent } from '@pebula/ngrid/target-events';\n\ndeclare module '@pebula/ngrid/lib/grid/services/config' {\n  interface PblNgridConfig {\n    cellTooltip?: CellTooltipOptions & {\n      /** When set to true will apply the default cell tooltip to ALL tables */\n      autoSetAll?: boolean;\n    };\n  }\n}\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    cellTooltip?: PblNgridCellTooltipDirective<any>;\n  }\n  interface PblNgridPluginExtensionFactories {\n    cellTooltip: keyof typeof PblNgridCellTooltipDirective;\n  }\n}\n\nconst PLUGIN_KEY: 'cellTooltip' = 'cellTooltip';\n\nconst DEFAULT_OPTIONS: CellTooltipOptions = {\n  canShow: (event: PblNgridCellEvent<any>): boolean => {\n    const element = (event.cellTarget.firstElementChild || event.cellTarget) as HTMLElement;\n    return element.scrollWidth > element.offsetWidth;\n  },\n  message: (event: PblNgridCellEvent<any>): string => {\n    return event.cellTarget.innerText;\n  }\n};\n\nexport interface CellTooltipOptions {\n  canShow?: boolean | ( (event: PblNgridCellEvent<any>) => boolean );\n  message?: (event: PblNgridCellEvent<any>) => string;\n}\n\n@NgridPlugin({ id: PLUGIN_KEY, factory: 'create' })\n@Directive({ selector: '[cellTooltip]', exportAs: 'pblOverflowTooltip' })\n@UnRx()\nexport class PblNgridCellTooltipDirective<T> implements CellTooltipOptions, OnDestroy {\n  static readonly PLUGIN_KEY: 'cellTooltip' = PLUGIN_KEY;\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('cellTooltip') set canShow(value: boolean | ( (event: PblNgridCellEvent<T>) => boolean )) {\n    if (typeof value === 'function') {\n      this._canShow = value;\n    } else if ( (value as any) === '') {\n      this._canShow = undefined;\n    } else {\n      this._canShow = coerceBooleanProperty(value) ? e => true : e => false;\n    }\n  }\n\n  @Input() message: (event: PblNgridCellEvent<T>) => string;\n\n  /** See Material docs for MatTooltip */\n  @Input() position: TooltipPosition;\n  /** See Material docs for MatTooltip */\n  @Input() tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n  /** See Material docs for MatTooltip */\n  @Input() showDelay: number;\n  /** See Material docs for MatTooltip */\n  @Input() hideDelay: number;\n\n  private initArgs: [ Overlay, ElementRef<any>, ScrollDispatcher, ViewContainerRef, NgZone, Platform, AriaDescriber, FocusMonitor, any, Directionality, MatTooltipDefaultOptions ];\n\n  private toolTip: MatTooltip;\n  private lastConfig: CellTooltipOptions;\n  private _removePlugin: (table: PblNgridComponent<any>) => void;\n  private _canShow: (event: PblNgridCellEvent<T>) => boolean;\n\n  constructor(private table: PblNgridComponent<any>, private injector: Injector, pluginCtrl: PblNgridPluginController) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    const configService = injector.get(PblNgridConfigService);\n\n    this.initArgs = [\n      injector.get(Overlay),\n      null,\n      injector.get(ScrollDispatcher),\n      injector.get(ViewContainerRef),\n      injector.get(NgZone),\n      injector.get(Platform),\n      injector.get(AriaDescriber),\n      injector.get(FocusMonitor),\n      injector.get(MAT_TOOLTIP_SCROLL_STRATEGY),\n      injector.get(Directionality),\n      injector.get(MAT_TOOLTIP_DEFAULT_OPTIONS),\n    ];\n\n    configService.onUpdate('cellTooltip')\n      .pipe(UnRx(this))\n      .subscribe( cfg => this.lastConfig = cfg.curr );\n\n    if (table.isInit) {\n      this.init(pluginCtrl);\n    } else {\n      let subscription = pluginCtrl.events\n        .subscribe( event => {\n          if (event.kind === 'onInit') {\n            this.init(pluginCtrl);\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        });\n    }\n  }\n\n  static create<T = any>(table: PblNgridComponent<any>, injector: Injector): PblNgridCellTooltipDirective<T> {\n    return new PblNgridCellTooltipDirective<T>(table, injector, PblNgridPluginController.find(table));\n  }\n\n  ngOnDestroy(): void {\n    this._removePlugin(this.table);\n    this.killTooltip();\n  }\n\n  private init(pluginCtrl: PblNgridPluginController): void {\n    // Depends on target-events plugin\n    // if it's not set, create it.\n    const targetEventsPlugin = pluginCtrl.getPlugin('targetEvents') || pluginCtrl.createPlugin('targetEvents');\n    targetEventsPlugin.cellEnter\n      .pipe(UnRx(this))\n      .subscribe( event => this.cellEnter(event) );\n\n    targetEventsPlugin.cellLeave\n      .pipe(UnRx(this))\n      .subscribe( event => this.cellLeave(event) );\n  }\n\n  private cellEnter(event: PblNgridCellEvent<T>): void {\n    this.killTooltip();\n\n    if (!this._canShow) {\n      // TODO: this will set lastConfig / default option once\n      // but if user changes lastConfig it will never update again...\n      this.canShow = (this.lastConfig && this.lastConfig.canShow) || DEFAULT_OPTIONS.canShow;\n    }\n\n    if (this._canShow(event)) {\n      const params = this.initArgs.slice() as PblNgridCellTooltipDirective<any>['initArgs'];\n      params[1] = new ElementRef<any>(event.cellTarget);\n\n      this.toolTip = new MatTooltip(...params);\n\n      const message = this.message || (this.lastConfig && this.lastConfig.message) || DEFAULT_OPTIONS.message;\n      this.toolTip.message = message(event);\n\n      if (this.position) {\n        this.toolTip.position = this.position;\n      }\n      if (this.tooltipClass) {\n        this.toolTip.tooltipClass = this.tooltipClass;\n      }\n      if (this.showDelay >= 0) {\n        this.toolTip.showDelay = this.showDelay;\n      }\n      if (this.hideDelay >= 0) {\n        this.toolTip.hideDelay = this.hideDelay;\n      }\n      this.toolTip.show();\n    }\n  }\n\n  private cellLeave(event: PblNgridCellEvent<T>): void {\n    this.killTooltip();\n  }\n\n  private killTooltip(): void {\n    if (this.toolTip) {\n      this.toolTip.hide();\n      this.toolTip.ngOnDestroy();\n      this.toolTip = undefined;\n    }\n  }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { PblNgridModule, PblNgridPluginController, PblNgridConfigService } from '@pebula/ngrid';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { PblNgridCellTooltipDirective } from './cell-tooltip.directive';\n\n@NgModule({\n  imports: [ CommonModule, MatTooltipModule, OverlayModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ PblNgridCellTooltipDirective ],\n  exports: [ PblNgridCellTooltipDirective, MatTooltipModule ],\n})\nexport class PblNgridCellTooltipModule {\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridCellTooltipModule,\n              configService: PblNgridConfigService) {\n    if (parentModule) {\n      return;\n    }\n\n    PblNgridPluginController.created\n      .subscribe( event => {\n        // Do not remove the explicit reference to `PblNgridCellTooltipDirective`\n        // We use `PblNgridCellTooltipDirective.PLUGIN_KEY` to create a direct reference to `PblNgridCellTooltipDirective`\n        // which will disable dead code elimination for the `PblNgridCellTooltipDirective` plugin.\n        // If it is not set, using the plugin will only work when it is used in templates, other wise, if used programmatically (`autoSetAll`)\n        // CLI prod builds will remove the plugin's code.\n        const cellTooltipConfig = configService.get(PblNgridCellTooltipDirective.PLUGIN_KEY);\n        if (cellTooltipConfig && cellTooltipConfig.autoSetAll === true) {\n          const pluginCtrl = event.controller;\n          let subscription = pluginCtrl.events\n            .subscribe( evt => {\n              if (evt.kind === 'onInit') {\n                if (!pluginCtrl.hasPlugin(PblNgridCellTooltipDirective.PLUGIN_KEY)) {\n                  pluginCtrl.createPlugin(PblNgridCellTooltipDirective.PLUGIN_KEY);\n                }\n                subscription.unsubscribe();\n                subscription = undefined;\n              }\n            });\n        }\n      });\n  }\n}\n"],"names":[],"mappings":"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"}