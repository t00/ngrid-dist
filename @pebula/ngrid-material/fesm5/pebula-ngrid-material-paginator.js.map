{"version":3,"file":"pebula-ngrid-material-paginator.js","sources":["ng://@pebula/ngrid-material/paginator/lib/table-paginator.component.ts","ng://@pebula/ngrid-material/paginator/lib/table-paginator.module.ts"],"sourcesContent":["import {\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblPagingPaginator, PblPaginatorChangeEvent, PblNgridComponent } from '@pebula/ngrid';\n\nconst DEFAULT_PAGE_SIZE_OPTIONS = [5, 10, 20, 50, 100];\n\n@Component({\n  selector: 'pbl-ngrid-paginator',\n  templateUrl: './table-paginator.component.html',\n  styleUrls: ['./table-paginator.component.scss'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\n@UnRx()\nexport class PblPaginatorComponent {\n  pages: number[] = [];\n  pageSizes: number[] = DEFAULT_PAGE_SIZE_OPTIONS.slice();\n\n  @Input() get pageSizeOptions(): number[] { return this._pageSizeOptions; }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = value;\n    this.pageSizes = (value || DEFAULT_PAGE_SIZE_OPTIONS).slice();\n    this.updatePageSizes();\n  }\n\n  @Input() get paginator(): PblPagingPaginator { return this._paginator; }\n  set paginator(value: PblPagingPaginator) {\n    if (this._paginator === value) {\n      return;\n    }\n    if (this._paginator) {\n      UnRx.kill(this, this._paginator);\n    }\n    this._paginator = value;\n    if (value) {\n      // pagination.onChange is BehaviorSubject so handlePageChange will trigger\n      value.onChange\n        .pipe(UnRx(this, value))\n        .subscribe( event => this.handlePageChange(event) );\n      this.updatePageSizes();\n    }\n  }\n\n  @Input() table: PblNgridComponent<any>;\n\n  @Input() get hidePageSize(): boolean { return this._hidePageSize; }\n  set hidePageSize(value: boolean) { this._hidePageSize = coerceBooleanProperty(value); }\n\n  @Input() get hideRangeSelect(): boolean { return this._hideRangeSelect; }\n  set hideRangeSelect(value: boolean) { this._hideRangeSelect = coerceBooleanProperty(value); }\n\n  private _pageSizeOptions: number[];\n  private _paginator: PblPagingPaginator;\n  private _hidePageSize = false;\n  private _hideRangeSelect = false;\n\n  constructor(@Optional() table: PblNgridComponent<any>,\n              public _intl: MatPaginatorIntl,\n              private cdr: ChangeDetectorRef) {\n    if (table) {\n      this.table = table;\n    }\n    _intl.changes\n      .pipe(UnRx(this))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  private updatePageSizes(): void {\n    if (this.paginator && this.pageSizes.indexOf(this.paginator.perPage) === -1) {\n      this.pageSizes.push(this.paginator.perPage);\n    }\n    this.pageSizes.sort((a, b) => a - b);\n  }\n\n  private handlePageChange(event: PblPaginatorChangeEvent): void {\n    if (this.pages.length !== this.paginator.totalPages) {\n      const pages = this.pages = [];\n      for (let i = 1, len = this.paginator.totalPages+1; i<len; i++) { pages.push(i); }\n    }\n    // this is required here to prevent `ExpressionChangedAfterItHasBeenCheckedError` when the component has or wrapped\n    // by an ngIf\n    this.cdr.detectChanges();\n    this.cdr.markForCheck();\n  }\n}\n","import { NgModule, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { PblNgridModule } from '@pebula/ngrid';\nimport { PblPaginatorComponent } from './table-paginator.component';\n// TODO: Remove MatPaginatorModule and the initial code in the constructor\n// set the styles in the SCSS.\n\n@NgModule({\n  imports: [ CommonModule, MatPaginatorModule, MatSelectModule, MatTooltipModule, MatButtonModule, PblNgridModule ],\n  declarations: [ PblPaginatorComponent ],\n  exports: [ PblPaginatorComponent ],\n  entryComponents: [ PblPaginatorComponent, MatPaginator ]\n})\nexport class PblNgridPaginatorModule {\n  constructor(cf: ComponentFactoryResolver, injector: Injector) {\n    // this is a workaround to ensure CSS from mat slider is loaded, otherwise it is omitted.\n    cf.resolveComponentFactory(MatPaginator).create(injector);\n  }\n}\n"],"names":[],"mappings":"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"}