{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@pebula/utils/lib/unrx.ts","ng://@pebula/utils/lib/array.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","unrx","killGroup","subKillGroup","pipe","UnRx","component","handler","decorateComponent","_removeFromArray","arr","idx","indexOf","splice","ALL_HANDLERS_TOKEN","notifierStore","WeakMap","getNotifier","create","notifier","get","set","Subject","kill","_i","arguments","obj","complete","delete","killAll","subKillGroup_1","tslib_1.__values","subKillGroup_1_1","h","source","takeUntil","filter","originalOnDestroyFunctionStore","Map","ngOnDestroy","oldNgOnDestroy","this","constructor","apply","target","proto","prototype","tokens","concat","__spread","Array","isArray","map","v","findIndex"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n/**\n * Emits the values emitted by the source observable until a kill signal is sent to the group.\n * You can also specify a `subKillGroup` which can be used to kill specific subscriptions within a group.\n *\n * When a `killGroup` is \"killed\" all `subKillGroup` are killed as well. When a `subKillGroup` is \"killed\" the group remains\n * as well as other \"subKillGroup\" registered for that group.\n *\n * > WARNING: Do not apply operators that subscribe internally (e.g. combineLatest, switchMap) after the `killOnDestroy` operator.\n * Internal subscriptions will not unsubscribe automatically.\n * For more information see {@link https://blog.angularindepth.com/rxjs-avoiding-takeuntil-leaks-fb5182d047ef | this blog post}\n */\nexport function unrx<T>(killGroup: any, subKillGroup?: any): (source: Observable<T>) => Observable<T> {\n  return unrx.pipe<T>(killGroup, subKillGroup);\n}\n\nexport namespace unrx {\n  const ALL_HANDLERS_TOKEN = {};\n  const notifierStore = new WeakMap<any, Subject<any>>();\n\n  function getNotifier(component: any, create = false): Subject<any> | undefined {\n    let notifier = notifierStore.get(component);\n    if (!notifier && create === true) {\n      notifierStore.set(component, notifier = new Subject<any>());\n    }\n    return notifier;\n  }\n\n  /**\n   * Send a \"kill\" signal to the specified `killGroup`.\n   * This will immediately unsubscribe all subscriptions with the `unrx` pipe registered under the specified `killGroup`.\n   *\n   * Note that the entire `killGroup` is destroyed.\n   */\n  export function kill(killGroup: any): void;\n  /**\n   * Send a \"kill\" signal to a specific `subKillGroup` in the specified `killGroup`.\n   * This will immediately unsubscribe all subscriptions with the `unrx` pipe registered under the specified `killGroup` and `subKillGroup`.\n   *\n   */\n  export function kill(killGroup: any, ...subKillGroup: any[]): void;\n  export function kill(killGroup: any, ...subKillGroup: any[]): void {\n    if (subKillGroup.length === 0) {\n      killAll(killGroup);\n    } else {\n      const notifier = getNotifier(killGroup);\n      if (notifier) {\n        for (const h of subKillGroup) {\n          notifier.next(h);\n        }\n      }\n    }\n  }\n\n  /** {@inheritdoc unrx} */\n  export function pipe<T>(killGroup: any, subKillGroup?: any): (source: Observable<T>) => Observable<T> {\n    return (source: Observable<T>) => source.pipe(\n      takeUntil(getNotifier(killGroup, true).pipe(filter( h => h === ALL_HANDLERS_TOKEN || (subKillGroup && h === subKillGroup ) )))\n    );\n  }\n\n  function killAll(obj: any): void {\n    const notifier = getNotifier(obj);\n    if (notifier) {\n      notifier.next(ALL_HANDLERS_TOKEN);\n      notifier.complete();\n      notifierStore.delete(obj);\n    }\n  }\n}\n\n/**\n * Emits the values emitted by the source Observable until the angular component instance is destroyed. (`ngOnDestroy` is called).\n * If the component already implements `ngOnDestroy` it will wrap it.\n *\n * You can also destroy on-demand by providing a handler and use `UnRx.kill` to unsubscribe.\n * Note that using the same handler id for multiple subscriptions will kill all of them together, i.e. the handler is also a group.\n *\n * > WARNING: Do not apply operators that subscribe internally (e.g. combineLatest, switchMap) after the `killOnDestroy` operator.\n * Internal subscriptions will not unsubscribe automatically. For more information see https://blog.angularindepth.com/rxjs-avoiding-takeuntil-leaks-fb5182d047ef\n */\nexport function UnRx<T>(component: any, handler?: any): (source: Observable<T>) => Observable<T>;\n/**\n * A Decorator that add support for automatic unsubscription in angular components.\n *\n * When applied on a component, `UnRx` will wrap the `ngOnDestroy` life-cycle` hook (or create if doesn't exist) and automatically\n * destroy all open subscriptions that contain the `UnRx` pipe in their emission stream.\n *\n * @remarks\n *\n * The following example demonstrate a component using the HTTP client to call a server.\n * We add the `UnRx` pipe to the response observable (`pipe(UnRx(this))`) so when the component is destroyed the subscription is closed as well.\n *\n * This might seem redundant because the `HttpClient` will automatically close the subscription after the response but what happen when\n * the response arrived AFTER the component is destroyed (user left the page)?\n *\n * In this case the subscription will emit the response and the handler will run, we don't want that!\n *\n * By applying the pipe we ensure that nothing will run once the component is destroyed.\n *\n * The BIG BONUS here is http cancellation, once destroyed `UnRx` will close the subscription which will cancel the HTTP request!\n * ```ts\n * import { Component } from '@angular/core';\n * import { HttpClient } from '@angular/common/http';\n *\n * @Component({\n *  selector: 'my-cmp',\n *  template: ``\n * })\n * @UnRx() // Will un-subscribe all open subscriptions when component is destroyed\n * export class MyComponent {\n *   static URL = '/some-endpoint';\n *\n *   constructor(private http: HttpClient) { }\n *\n *   getData() {\n *     this.http.get(MyComponent.URL)\n *       .pipe(UnRx(this))             // Register the stream for auto-kill on destroy\n *       .subscribe( response => {\n *         console.log(response);\n *       });\n *   }\n * }\n * ```\n *\n * The following example is an improved version of the previous one.\n * All pending request will be cancelled when the component is destroyed but we will also cancel all pending requests\n * when a new request is fired.\n *\n * With this we ensure state and flow integrity (no race condition between 2 requests).\n * We also make sure that resources are not wasted (multiple redundant requests.)\n * ```ts\n * import { Component } from '@angular/core';\n * import { HttpClient } from '@angular/common/http';\n *\n * @Component({\n *  selector: 'my-cmp',\n *  template: ``\n * })\n * @UnRx() // Will un-subscribe all open subscriptions when component is destroyed\n * export class MyComponent {\n *   static URL = '/some-endpoint';\n *\n *   constructor(private http: HttpClient) { }\n *\n *   getData() {\n *     UnRx.kill(this, MyComponent.URL); // Kill (cancel) pending HTTP requests\n *     this.http.get(MyComponent.URL)\n *       .pipe(UnRx(this, MyComponent.URL)) // Register the stream for auto-kill on destroy and add a handler for ad-hoc unsubscribe\n *       .subscribe( response => {\n *         console.log(response);\n *       });\n *   }\n * }\n * ```\n *\n * @internalremarks\n * Based on work from:\n *   - https://github.com/w11k/ng2-rx-componentdestroyed/blob/master/src/index.ts\n *   - https://stackoverflow.com/questions/38008334/angular-rxjs-when-should-i-unsubscribe-from-subscription/41177163#41177163\n */\nexport function UnRx<T = any>(): ClassDecorator;\nexport function UnRx<T>(component?: any, handler?: any): ClassDecorator | ( (source: Observable<T>) => Observable<T> ) {\n  return component\n    ? unrx<T>(component, handler)\n    : UnRx.decorateComponent\n  ;\n}\n\nexport namespace UnRx {\n  const originalOnDestroyFunctionStore = new Map<any, () => void>();\n\n  function ngOnDestroy(): void {\n    const oldNgOnDestroy = originalOnDestroyFunctionStore.get(this.constructor);\n    if (oldNgOnDestroy) {\n      oldNgOnDestroy.apply(this);\n    }\n    unrx.kill(this);\n  }\n\n  export function decorateComponent(target: any): any {\n    const proto = target.prototype;\n    if (proto.ngOnDestroy) {\n      originalOnDestroyFunctionStore.set(target, proto.ngOnDestroy);\n    }\n    proto.ngOnDestroy = ngOnDestroy;\n    return target;\n  }\n\n  /**\n   * Send a \"kill\" signal to the specified `component` instance.\n   * This will immediately unsubscribe all subscriptions with the `UnRx` pipe registered under the specified component instance.\n   */\n  export function kill(killGroup: any): void;\n  /**\n   * Send a \"kill\" signal to a specific `token` in the specified `component` instance.\n   * This will immediately unsubscribe all subscriptions with the `UnRx` pipe registered under the specified `component` instance and `token`.\n   *\n   */\n  export function kill(component: any, ...tokens: any[]): void;\n  export function kill(component: any, ...tokens: any[]): void {\n    unrx.kill(component, ...tokens);\n  }\n\n}\n","export function removeFromArray<T = any>(arr: T[], predicate: (value: T, index?: number) => boolean): boolean;\nexport function removeFromArray<T = any>(arr: T[], value: T): boolean;\nexport function removeFromArray<T = any>(arr: T[], values: T[]): boolean[];\nexport function removeFromArray<T = any>(arr: T[], value: T | T[] | ((value: T, index?: number) => boolean)): boolean | boolean[] {\n  if (Array.isArray(value)) {\n    return value.map( v => _removeFromArray(arr, v) );\n  } else if (typeof value === 'function') {\n    const idx = arr.findIndex(value as any);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return _removeFromArray<T>(arr, value);\n  }\n}\n\nfunction _removeFromArray<T = any>(arr: T[], value: T): boolean {\n  const idx = arr.indexOf(value);\n  if (idx > -1) {\n    arr.splice(idx, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n"]}