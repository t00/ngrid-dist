{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@pebula/ngrid/detail-row/lib/detail-row/directives.ts","ng://@pebula/ngrid/detail-row/lib/detail-row/detail-row-plugin.ts","ng://@pebula/ngrid/detail-row/lib/detail-row/row.ts","ng://@pebula/ngrid/detail-row/lib/table-detail-row.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","PblNgridDetailRowDefDirective","tRef","registry","_this","_super","kind","Directive","args","selector","TemplateRef","PblNgridRegistryService","PblNgridSingleTemplateRegistry","PblNgridDetailRowParentRefDirective","template","_differs","clone","_columnsDiffer","columns","undefined","ngOnInit","setSingle","ngOnDestroy","inputs","IterableDiffers","CdkRowDef","PblNgridDefaultDetailRowParentComponent","Component","ROW_WHEN_TRUE","ROW_WHEN_FALSE","PblNgridDetailRowPluginDirective","grid","pluginCtrl","injector","whenContextChange","toggleChange","EventEmitter","toggledRowContextChange","_isSimpleRow","_isDetailRow","_detailRowRows","Map","_removePlugin","setPlugin","subscription","events","subscribe","event","unsubscribe","hasPlugin","createPlugin","changes","changes_1","changes_1_1","c","type","op","_cdkTable","removeRowDef","_detailRowDef","setupDetailRowParent","_detailRow","updateTable","defineProperty","index","rowData","coerceBooleanProperty","isInit","_forceSingle","_openedRow","expended","forEach","r","row","toggle","addDetailRow","detailRow","set","removeDetailRow","delete","toggleDetailRow","forceState","get","_defaultParentRef","destroy","detailRowToggled","isSelf","emit","cdkTable","getSingle","enumerable","columnApi","visibleColumnIds","ngOnChanges","isFirstChange","firstChange","currentValue","previousValue","ComponentFactoryResolver","resolveComponentFactory","changeDetectorRef","detectChanges","resetTableRowDefs","addRowDef","_tableRowDef","when","updateRowDefCache","multiTemplateDataRows","exportAs","PblNgridComponent","PblNgridPluginController","Injector","Input","Output","PblNgridDetailRowComponent","extApi","el","vcRef","opened","updateRow","nativeElement","controller","find","plugin","getPlugin","tradeEvents","cellClick","pipe","utils","unrx","context","$implicit","excludeToggleFrom","some","column","id","rowClick","root","kill","prevIdentity","currIdentity","render","createEvent","clear","_element","classList","remove","add","handleKeydown","target","keyCode","ENTER","SPACE","preventDefault","detailRowDef","createEmbeddedView","host","class","role","[attr.tabindex]","(keydown)","CDK_ROW_TEMPLATE","providers","provide","CdkRow","useExisting","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Optional","Inject","EXT_API_TOKEN","ElementRef","ViewContainerRef","PblNgridRowComponent","DETAIL_ROW","PblNgridDetailRowModule","NGRID_PLUGIN","ngridPlugin","NgModule","imports","CommonModule","CdkTableModule","PblNgridModule","PblNgridTargetEventsModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:use-host-property-decorator\nimport {\n  Component,\n  Directive,\n  IterableDiffers,\n  OnInit,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { CdkRowDef } from '@angular/cdk/table';\n\nimport { PblNgridRegistryService, PblNgridSingleTemplateRegistry, PblNgridRowContext } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/lib/grid/services/grid-registry.service' {\n  interface PblNgridSingleRegistryMap {\n    detailRowParent?: PblNgridDetailRowParentRefDirective<any>;\n    detailRow?: PblNgridDetailRowDefDirective;\n  }\n}\n\n/**\n * Marks the element as the display element for the detail row itself.\n */\n@Directive({ selector: '[pblNgridDetailRowDef]' })\nexport class PblNgridDetailRowDefDirective extends PblNgridSingleTemplateRegistry<PblNgridRowContext<any>, 'detailRow'> {\n  readonly kind: 'detailRow' = 'detailRow';\n  constructor(tRef: TemplateRef<PblNgridRowContext<any>>, registry: PblNgridRegistryService) { super(tRef, registry); }\n}\n\n@Directive({\n  selector: '[pblNgridDetailRowParentRef]',\n  inputs: ['columns: pblNgridDetailRowParentRef', 'when: pblNgridDetailRowParentRefWhen'],\n})\nexport class PblNgridDetailRowParentRefDirective<T> extends CdkRowDef<T> implements OnInit, OnDestroy {\n\n  constructor(template: TemplateRef<PblNgridRowContext<T>>, _differs: IterableDiffers, protected registry: PblNgridRegistryService) {\n    super(template, _differs);\n  }\n\n  clone(): PblNgridDetailRowParentRefDirective<T> {\n    const clone = Object.create(this);\n    this._columnsDiffer = this.columns = undefined;\n    return clone;\n  }\n\n  ngOnInit(): void {\n    this.registry.setSingle('detailRowParent', this as any);\n  }\n\n  ngOnDestroy(): void {\n    this.registry.setSingle('detailRowParent',  undefined);\n  }\n}\n\n/**\n * Use to set the a default `pblNgridDetailRowParentRef` if the user did not set one.\n * @internal\n */\n@Component({\n  selector: 'pbl-ngrid-default-detail-row-parent',\n  template: `<pbl-ngrid-row *pblNgridDetailRowParentRef=\"let row; gridInstance as gridInstance\" [grid]=\"gridInstance\" [detailRow]=\"row\"></pbl-ngrid-row>`,\n})\nexport class PblNgridDefaultDetailRowParentComponent { }\n","import { Directive, EventEmitter, Injector, Input, OnDestroy, Output, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { PblNgridComponent, PblNgridPluginController } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowComponent } from './row';\nimport { PblNgridDetailRowParentRefDirective, PblNgridDefaultDetailRowParentComponent } from './directives';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    detailRow?: PblNgridDetailRowPluginDirective<any>;\n  }\n}\n\nexport const PLUGIN_KEY: 'detailRow' = 'detailRow';\n\nexport const ROW_WHEN_TRUE = () => true;\nexport const ROW_WHEN_FALSE = () => false;\n\nexport function toggleDetailRow<T = any>(grid: PblNgridComponent<T>, row: T, forceState?: boolean): boolean | void {\n  const controller = PblNgridPluginController.find(grid);\n  if (controller) {\n    const plugin = controller.getPlugin(PLUGIN_KEY);\n    if (plugin) {\n      return plugin.toggleDetailRow(row, forceState);\n    }\n  }\n}\n\nexport interface PblDetailsRowToggleEvent<T = any> {\n  row: T;\n  expended: boolean;\n  toggle(): void;\n}\n\n@Directive({ selector: 'pbl-ngrid[detailRow]', exportAs: 'pblNgridDetailRow' })\nexport class PblNgridDetailRowPluginDirective<T> implements OnDestroy {\n  /**\n   * Detail row control (none / all rows / selective rows)\n   *\n   * A detail row is an additional row added below a row rendered with the context of the row above it.\n   *\n   * You can enable/disable detail row for the entire grid by setting `detailRow` to true/false respectively.\n   * To control detail row per row, provide a predicate.\n   */\n  @Input() get detailRow(): ( (index: number, rowData: T) => boolean ) | boolean { return this._detailRow; }\n  set detailRow(value: ( (index: number, rowData: T) => boolean ) | boolean ) {\n    if (this._detailRow !== value) {\n      const grid = this.grid;\n\n      if (typeof value === 'function') {\n        this._isSimpleRow = (index: number, rowData: T) => !(value as any)(index, rowData);\n        this._isDetailRow = value;\n      } else {\n        value = coerceBooleanProperty(value);\n        this._isDetailRow = value ? ROW_WHEN_TRUE : ROW_WHEN_FALSE;\n        this._isSimpleRow = value ? ROW_WHEN_FALSE : ROW_WHEN_TRUE;\n      }\n      this._detailRow = value;\n\n      if (grid.isInit) {\n        this.updateTable();\n      }\n    }\n  }\n\n  @Input() set singleDetailRow(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._forceSingle !== value) {\n      this._forceSingle = value;\n      if (value && this._openedRow && this._openedRow.expended) {\n        this._detailRowRows.forEach( r => {\n          if (r.row !== this._openedRow.row) {\n            r.toggle(false);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * A list of columns that will not trigger a detail row toggle when clicked.\n   */\n  @Input() excludeToggleFrom: string[];\n\n  /**\n   * Set the behavior when the row's context is changed while the detail row is opened (another row is displayed in place of the current row).\n   *\n   * - ignore: don't do anything, leave as is (for manual intervention)\n   * - close: close the detail row\n   * - render: re-render the row with the new context\n   *\n   * The default behavior is `render`\n   *\n   * This scenario will pop-up when using pagination and the user move between pages or change the page size.\n   * It might also happen when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * The `ignore` phase, when used, will not trigger an update, leaving the detail row opened and showing data from the previous row.\n   * The `ignore` is intended for use with `toggledRowContextChange`, which will emit when the row context has changed, this will allow the developer to\n   * toggle the row (mimic `close`) or update the context manually. For example, if toggling open the detail row invokes a \"fetch\" operation that retrieves data for the detail row\n   * this will allow updates on context change.\n   *\n   * > Note that `toggledRowContextChange` fires regardless of the value set in `whenContextChange`\n   */\n  @Input() whenContextChange: 'ignore' | 'close' | 'render' = 'render';\n\n  /**\n   * Emits whenever a detail row instance is toggled on/off\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggleChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n  /**\n   * Emits whenever the row context has changed while the row is toggled open.\n   * This scenario is unique and will occur only when a detail row is opened AND the parent row has changed.\n   *\n   * For example, when using pagination and the user navigates to the next/previous set or when the rows per page size is changed.\n   * It might also occur when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggledRowContextChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n\n  private _openedRow?: PblDetailsRowToggleEvent<T>;\n  private _forceSingle: boolean;\n  private _isSimpleRow: (index: number, rowData: T) => boolean = ROW_WHEN_TRUE;\n  private _isDetailRow: (index: number, rowData: T) => boolean = ROW_WHEN_FALSE;\n  private _detailRowRows = new Map<any, PblNgridDetailRowComponent>();\n  private _detailRow: ( (index: number, rowData: T) => boolean ) | boolean;\n  private _detailRowDef: PblNgridDetailRowParentRefDirective<T>;\n  private _defaultParentRef: ComponentRef<PblNgridDefaultDetailRowParentComponent>;\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n\n  constructor(private grid: PblNgridComponent<any>, pluginCtrl: PblNgridPluginController<T>, private injector: Injector) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    let subscription = pluginCtrl.events.subscribe( event => {\n      if (event.kind === 'onInit') {\n        subscription.unsubscribe();\n        subscription = undefined;\n\n        // Depends on target-events plugin\n        // if it's not set, create it.\n        if (!pluginCtrl.hasPlugin('targetEvents')) {\n          pluginCtrl.createPlugin('targetEvents');\n        }\n\n        grid.registry.changes\n          .subscribe( changes => {\n            for (const c of changes) {\n              switch (c.type) {\n                case 'detailRowParent':\n                  if (c.op === 'remove') {\n                    grid._cdkTable.removeRowDef(c.value);\n                    this._detailRowDef = undefined;\n                  }\n                  this.setupDetailRowParent();\n                  // grid._cdkTable.syncRows('data');\n                  break;\n              }\n            }\n          });\n\n        // if we start with an initial value, then update the grid cause we didn't do that\n        // when it was set (we cant cause we're not init)\n        // otherwise just setup the parent.\n        if (this._detailRow) {\n          this.updateTable();\n        } else {\n          this.setupDetailRowParent();\n        }\n      }\n    });\n  }\n\n  addDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.set(detailRow.row, detailRow);\n  }\n\n  removeDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.delete(detailRow.row);\n  }\n\n  toggleDetailRow(row: any, forceState?: boolean): boolean | void {\n    const detailRow = this._detailRowRows.get(row);\n    if (detailRow) {\n      detailRow.toggle(forceState);\n      return detailRow.expended;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._defaultParentRef) {\n      this._defaultParentRef.destroy();\n    }\n    this._removePlugin(this.grid);\n  }\n\n  /** @internal */\n  detailRowToggled(event: PblDetailsRowToggleEvent<T>): void {\n    // logic for closing previous row\n    const isSelf = this._openedRow && this._openedRow.row === event.row;\n    if (event.expended) {\n      if (this._forceSingle && this._openedRow && this._openedRow.expended && !isSelf) {\n        this._openedRow.toggle();\n      }\n      this._openedRow = event;\n    } else if (isSelf) {\n      this._openedRow = undefined;\n    }\n    this.toggleChange.emit(event);\n  }\n\n  private setupDetailRowParent(): void {\n    const grid = this.grid;\n    const cdkTable = grid._cdkTable;\n    if (this._detailRowDef) {\n      cdkTable.removeRowDef(this._detailRowDef);\n      this._detailRowDef = undefined;\n    }\n    if (this.detailRow) {\n      let detailRow = grid.registry.getSingle('detailRowParent');\n      if (detailRow) {\n        this._detailRowDef = detailRow = detailRow.clone();\n        Object.defineProperty(detailRow, 'columns', { enumerable: true,  get: () => grid.columnApi.visibleColumnIds });\n        Object.defineProperty(detailRow, 'when', { enumerable: true,  get: () => this._isDetailRow });\n        detailRow.ngOnChanges({ columns: { isFirstChange: () => true, firstChange: true, currentValue: detailRow.columns, previousValue: null }});\n      } else if (!this._defaultParentRef) {\n        // TODO: move to module? set in root registry? put elsewhere to avoid grid sync (see event of registry change)...\n        this._defaultParentRef = this.injector.get(ComponentFactoryResolver)\n          .resolveComponentFactory(PblNgridDefaultDetailRowParentComponent)\n          .create(this.injector);\n        this._defaultParentRef.changeDetectorRef.detectChanges();\n        return;\n      }\n    }\n    this.resetTableRowDefs();\n  }\n\n  private resetTableRowDefs(): void {\n    const grid = this.grid;\n    if (this._detailRowDef) {\n      this._detailRow === false\n        ? grid._cdkTable.removeRowDef(this._detailRowDef)\n        : grid._cdkTable.addRowDef(this._detailRowDef)\n      ;\n    }\n  }\n\n  /**\n   * Update the grid with detail row infor.\n   * Instead of calling for a change detection cycle we can assign the new predicates directly to the cdkRowDef instances.\n   */\n  private updateTable(): void {\n    this.grid._tableRowDef.when = this._isSimpleRow;\n    this.setupDetailRowParent();\n    // Once we changed the `when` predicate on the `CdkRowDef` we must:\n    //   1. Update the row cache (property `rowDefs`) to reflect the new change\n    this.grid._cdkTable.updateRowDefCache();\n\n    //   2. re-render all rows.\n    // The logic for re-rendering all rows is handled in `CdkTable._forceRenderDataRows()` which is a private method.\n    // This is a workaround, assigning to `multiTemplateDataRows` will invoke the setter which\n    // also calls `CdkTable._forceRenderDataRows()`\n    // TODO: This is risky, the setter logic might change.\n    // for example, if material will chack for change in `multiTemplateDataRows` setter from previous value...\n    this.grid._cdkTable.multiTemplateDataRows = !!this._detailRow;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Inject,\n  ElementRef,\n  OnInit,\n  OnDestroy, Optional,\n  ViewEncapsulation,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CDK_ROW_TEMPLATE, CdkRow } from '@angular/cdk/table';\n\nimport { PblNgridPluginController, PblNgridRowComponent, PblNgridExtensionApi, EXT_API_TOKEN, utils } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowPluginDirective, PblDetailsRowToggleEvent, PLUGIN_KEY } from './detail-row-plugin';\n\n@Component({\n  selector: 'pbl-ngrid-row[detailRow]',\n  exportAs: 'pblNgridDetailRow',\n  host: { // tslint:disable-line:use-host-property-decorator\n    class: 'pbl-ngrid-row pbl-row-detail-parent',\n    role: 'row',\n    '[attr.tabindex]': 'grid?.rowFocus',\n    '(keydown)': 'handleKeydown($event)'\n  },\n  template: CDK_ROW_TEMPLATE,\n  styles: [ `.pbl-row-detail-parent { position: relative; cursor: pointer; }` ],\n  providers: [\n    { provide: CdkRow, useExisting: PblNgridDetailRowComponent }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PblNgridDetailRowComponent extends PblNgridRowComponent implements OnInit, OnDestroy {\n\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input('detailRow') set row(value: any) { this.updateRow(); }\n\n  private get _element(): HTMLElement { return this.el.nativeElement; }\n  private opened = false;\n  private plugin: PblNgridDetailRowPluginDirective<any>;\n\n  constructor(@Optional() @Inject(EXT_API_TOKEN) extApi: PblNgridExtensionApi<any>,\n              el: ElementRef<HTMLElement>,\n              private vcRef: ViewContainerRef) {\n    super(extApi, el);\n  }\n\n  ngOnInit(): void {\n    const controller = PblNgridPluginController.find(this.extApi.grid);\n    this.plugin = controller.getPlugin(PLUGIN_KEY); // TODO: THROW IF NO PLUGIN...\n    this.plugin.addDetailRow(this);\n    const tradeEvents = controller.getPlugin('targetEvents');\n    tradeEvents.cellClick\n      .pipe(utils.unrx(this))\n      .subscribe( event => {\n        if (event.type === 'data' && event.row === this.context.$implicit) {\n          const { excludeToggleFrom } = this.plugin;\n          if (!excludeToggleFrom || !excludeToggleFrom.some( c => event.column.id === c )) {\n            this.toggle();\n          }\n        }\n      });\n\n    tradeEvents.rowClick\n      .pipe(utils.unrx(this))\n      .subscribe( event => {\n        if (!event.root && event.type === 'data' && event.row === this.context.$implicit) {\n          this.toggle();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    utils.unrx.kill(this);\n    this.plugin.removeDetailRow(this);\n  }\n\n  updateRow(): void {\n    const prevIdentity = this.context && this.context.$implicit;\n    super.updateRow();\n    if (this.opened) {\n      const currIdentity = this.context && this.context.$implicit;\n      if (currIdentity !== prevIdentity && currIdentity) {\n        switch (this.plugin.whenContextChange) {\n          case 'render':\n              this.render();\n            break;\n          case 'close':\n            this.toggle(false);\n            break;\n        }\n        this.plugin.toggledRowContextChange.next(this.createEvent());\n      }\n    }\n  }\n\n  toggle(forceState?: boolean): void {\n    if (this.opened !== forceState) {\n      if ( this.opened ) {\n        this.vcRef.clear();\n        this._element.classList.remove('pbl-row-detail-opened');\n      } else {\n        this.render();\n      }\n      this.opened = this.vcRef.length > 0;\n\n      if (this.opened) {\n        this._element.classList.add('pbl-row-detail-opened');\n      }\n\n      this.plugin.detailRowToggled(this.createEvent());\n    }\n  }\n\n  /**\n   * @internal\n   */\n  handleKeydown(event: KeyboardEvent): void {\n    if ( event.target === this._element ) {\n      const keyCode = event.keyCode;\n      const isToggleKey = keyCode === ENTER || keyCode === SPACE;\n      if ( isToggleKey ) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.toggle();\n      }\n    }\n  }\n\n  private createEvent(): PblDetailsRowToggleEvent<any> {\n    const event = Object.create(this);\n    Object.defineProperty(event, 'row', { value: this.context.$implicit });\n    return event;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.context.$implicit) {\n      const detailRowDef = this.context.grid.registry.getSingle('detailRow');\n      if ( detailRowDef ) {\n        this.vcRef.createEmbeddedView(detailRowDef.tRef, this.context);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridModule, ngridPlugin } from '@pebula/ngrid';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { PblNgridDetailRowParentRefDirective, PblNgridDetailRowDefDirective, PblNgridDefaultDetailRowParentComponent } from './detail-row/directives';\nimport { PblNgridDetailRowPluginDirective, PLUGIN_KEY } from './detail-row/detail-row-plugin';\nimport { PblNgridDetailRowComponent } from './detail-row/row';\n\nconst DETAIL_ROW = [\n  PblNgridDetailRowPluginDirective,\n  PblNgridDetailRowComponent,\n  PblNgridDetailRowParentRefDirective,\n  PblNgridDetailRowDefDirective,\n];\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ DETAIL_ROW, PblNgridDefaultDetailRowParentComponent ],\n  exports: [ DETAIL_ROW ],\n  // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n  entryComponents: [ PblNgridDetailRowComponent, PblNgridDefaultDetailRowParentComponent ],\n})\nexport class PblNgridDetailRowModule {\n  static readonly NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY }, PblNgridDetailRowPluginDirective);\n}\n"]}