{"version":3,"file":"pebula-ngrid-state.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@pebula/ngrid/state/lib/core/state-visor.ts","ng://@pebula/ngrid/state/lib/core/persistance/local-storage.ts","ng://@pebula/ngrid/state/lib/core/models/state.ts","ng://@pebula/ngrid/state/lib/core/models/options.ts","ng://@pebula/ngrid/state/lib/core/handling/base.ts","ng://@pebula/ngrid/state/lib/core/identification/index.ts","ng://@pebula/ngrid/state/lib/core/utils.ts","ng://@pebula/ngrid/state/lib/core/state.ts","ng://@pebula/ngrid/state/lib/core/built-in-handlers/grid-primitives/index.ts","ng://@pebula/ngrid/state/lib/core/built-in-handlers/column-def/children.ts","ng://@pebula/ngrid/state/lib/core/built-in-handlers/column-def/index.ts","ng://@pebula/ngrid/state/lib/core/built-in-handlers/column-order/index.ts","ng://@pebula/ngrid/state/lib/core/built-in-handlers/index.ts","ng://@pebula/ngrid/state/lib/presets.ts","ng://@pebula/ngrid/state/lib/state-plugin.ts","ng://@pebula/ngrid/state/lib/core/built-in-handlers/_register.ts","ng://@pebula/ngrid/state/lib/ngrid-state.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { PblNgridGlobalState, StateChunks, RootStateChunks, PblNgridStateChunkSectionContext } from './models/index';\nimport { PblNgridStateChunkHandlerDefinition } from './handling';\n\nexport let _instance: StateVisor;\n\nexport interface PblNgridStateChunkSectionConfig<T extends keyof RootStateChunks = keyof RootStateChunks> {\n  stateMatcher: (state: PblNgridGlobalState) => RootStateChunks[T]['state'];\n  sourceMatcher: (context: PblNgridStateChunkSectionContext) => RootStateChunks[T]['value'];\n}\n\nexport class StateVisor<T extends keyof StateChunks = keyof StateChunks> {\n\n  private rootChunkSections = new Map<keyof RootStateChunks, PblNgridStateChunkSectionConfig<keyof RootStateChunks>>();\n  private chunkHandlers = new Map<T, PblNgridStateChunkHandlerDefinition<T>[]>();\n\n  private constructor() { }\n\n  static get(): StateVisor { return _instance || (_instance = new StateVisor()); }\n\n  registerRootChunkSection<Z extends keyof RootStateChunks>(chunkId: Z, config: PblNgridStateChunkSectionConfig<Z>): void {\n    if (!this.rootChunkSections.has(chunkId)) {\n      this.rootChunkSections.set(chunkId, config);\n    }\n  }\n\n  registerChunkHandlerDefinition<Z extends T>(chunkHandlerDefs: PblNgridStateChunkHandlerDefinition<Z>): void {\n    const { chunkId } = chunkHandlerDefs;\n    const handlersForGroup = this.chunkHandlers.get(chunkId) || [];\n    handlersForGroup.push(chunkHandlerDefs);\n    this.chunkHandlers.set(chunkId, handlersForGroup);\n  }\n\n  getRootSections(): Array<[keyof RootStateChunks, PblNgridStateChunkSectionConfig<keyof RootStateChunks>]> {\n    return Array.from(this.rootChunkSections.entries());\n  }\n\n  getDefinitionsForSection(chunkId: T): PblNgridStateChunkHandlerDefinition<T>[] {\n    return this.chunkHandlers.get(chunkId) || [];\n  }\n}\n\nexport const stateVisor: StateVisor = StateVisor.get();\n","import { PblNgridGlobalState, PblNgridPersistAdapter } from '../models/index';\n\nexport class PblNgridLocalStoragePersistAdapter implements PblNgridPersistAdapter {\n  private static globalStateKey: string = 'pebulaNgridState';\n\n  save(id: string, state: PblNgridGlobalState): Promise<void> {\n    try {\n      const store = this.loadGlobalStateStore();\n      store[id] = state;\n      if (!state.__metadata__) {\n        state.__metadata__ = {} as any;\n      }\n      state.__metadata__.updatedAt = new Date().toISOString();\n\n      this.saveGlobalStateStore(store);\n      return Promise.resolve();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  load(id: string): Promise<PblNgridGlobalState> {\n    return Promise.resolve(this.loadGlobalStateStore()[id] || {} as any);\n  }\n\n  exists(id: string): Promise<boolean> {\n    const store = this.loadGlobalStateStore() || {};\n    return Promise.resolve(id in store);\n  }\n\n  private loadGlobalStateStore(): { [id: string]: PblNgridGlobalState } {\n    const raw = localStorage.getItem(PblNgridLocalStoragePersistAdapter.globalStateKey);\n    return raw ? JSON.parse(raw) : {};\n  }\n\n  private saveGlobalStateStore(store: { [id: string]: PblNgridGlobalState }): void {\n    localStorage.setItem(PblNgridLocalStoragePersistAdapter.globalStateKey, JSON.stringify(store));\n  }\n}\n","import { PblNgridComponent, PblNgridExtensionApi } from '@pebula/ngrid';\nimport * as B from '../built-in-handlers/index';\nimport { PblNgridStateOptions } from './options';\n\n/* ======================= State Chunks */\n\nexport interface StateChunkItem<TState, TValue, TData = any, TKeyless = never> {\n  state: TState;\n  value?: TValue;\n  data?: TData;\n  keyless: TKeyless;\n}\n\nexport interface RootStateChunks extends B.BuiltInRootStateChunks { }\n\nexport interface StateChunks extends RootStateChunks, B.BuiltInStateChunks{ }\n\nexport interface PblNgridStateContext {\n  grid: PblNgridComponent;\n  extApi: PblNgridExtensionApi;\n  options: PblNgridStateOptions;\n}\n\nexport interface PblNgridStateChunkSectionContext extends PblNgridStateContext { }\n\nexport interface PblNgridStateChunkContext<T extends keyof StateChunks> extends PblNgridStateChunkSectionContext {\n  source: StateChunks[T]['value'];\n  data?: StateChunks[T]['data']\n  runChildChunk?<TChild extends keyof StateChunks>(childChunkId: TChild, state: StateChunks[TChild]['state'], source: StateChunks[TChild]['value'], data?: StateChunks[TChild]['data']);\n}\n\n/* ======================= State Chunks */\n\n/* ======================= Global State Object */\n\nexport interface PblNgridStateMetadata {\n  updatedAt: string;\n}\n\nexport interface PblNgridGlobalState extends B.PblNgridBuiltInGlobalState {\n  __metadata__: PblNgridStateMetadata;\n}\n\n/* ======================= Global State Object */\n","import { RootStateChunks, StateChunks, PblNgridGlobalState, PblNgridStateContext } from './state';\n\n/**\n * An interface for datasource specific logical units that can load and save state objects.\n *\n * For example, `PblNgridLocalStoragePersistAdapter` is an adapter that can loan and save the state\n * from the local storage.\n */\nexport interface PblNgridPersistAdapter {\n  save(id: string, state: PblNgridGlobalState): Promise<void>;\n  load(id: string): Promise<PblNgridGlobalState>;\n  exists(id: string): Promise<boolean>;\n}\n\n/**\n * An interface for logical units that can resolve a unique id for a grid.\n *\n * For example, `PblNgridIdAttributeIdentResolver` is a resolver that will resolve an id from the\n * `id` property of the grid (`PblNgridComponent.id`) which is bound to the `id` attribute of the grid (`<pbl-ngrid id=\"SOME ID\"></pbl-ngrid>`).\n */\nexport interface PblNgridIdentResolver {\n  resolveId(ctx: PblNgridIdentResolverContext): string | undefined;\n}\n\n/**\n * The context provided when resolving an id (`PblNgridIdentResolver`).\n */\nexport interface PblNgridIdentResolverContext extends PblNgridStateContext { }\n\n\nexport type StateChunkKeyFilter = {\n  [P in keyof StateChunks]?:\n    P extends keyof RootStateChunks\n      ? RootStateChunks[P]['keyless'] extends never ? (Array<keyof RootStateChunks[P]['state']> | boolean) : boolean\n      : Array<keyof StateChunks[P]['state']> | boolean\n    ;\n}\n\nexport interface PblNgridStateSaveOptions {\n  /**\n   * The adapter to use for persistance.\n   * @default PblNgridLocalStoragePersistAdapter\n   */\n  persistenceAdapter?: PblNgridPersistAdapter\n\n  /**\n   * The resolver used to get the unique id for an instance of the grid.\n   * If not set default's to the id property of `PblNgridComponent` which is the id attribute of `<pbl-ngrid>`\n   * @default PblNgridIdAttributeIdentResolver\n   */\n  identResolver?: PblNgridIdentResolver;\n\n  /**\n   * Instruction of chunk and chunk keys to include when serializing / deserializing.\n   * Include is strict, only the included chunks and keys are used, everything else is ignored.\n   *\n   * If `include` and `exclude` are set, `include` wins.\n   *\n   * Note that when using include with child chunks you must include the root chunk of the child chunk, if not\n   * the root chunk is skipped and so the child.\n   *\n   * For example, to include the `width` key of the `dataColumn` child chunk we must also include the `columns` root chunk.\n   *\n   * ```ts\n   *   const obj: StateChunkKeyFilter = {\n   *     columns: true,\n   *     dataColumn: [\n   *       'width',\n   *     ]\n   *   };\n   * ```\n   *\n   * We can also use the wildcard `true` to include all items in a chunk:\n   *\n   * ```ts\n   *   const obj: StateChunkKeyFilter = {\n   *     columns: true,\n   *     dataColumn: true,\n   *   };\n   * ```\n   *\n   * Same specificity rule apply here as well, `columns: true` alone will not include all of it's child chunks so we must add `dataColumn: true`.\n   * Vice versa, `dataColumn: true` alone will not get included because it's parent (`columns`) is blocked\n   */\n  include?: StateChunkKeyFilter;\n\n  /**\n   * Instruction of chunk and chunk keys to exclude when serializing / deserializing.\n   * Exclude is not strict, all known chunks and keys are used unless they are excluded and so will be ignored\n   *\n   * If `include` and `exclude` are set, `include` wins.\n   *\n   */\n  exclude?: StateChunkKeyFilter;\n}\n\nexport interface PblNgridStateLoadOptions extends PblNgridStateSaveOptions {\n  /**\n   * When set to `overwrite`, state values will run over existing runtime values.\n   * When set to `merge`, state values will not run over existing runtime values and only update values that are not set.\n   * @default overwrite\n   */\n  strategy?: 'overwrite' | 'merge';\n\n  /**\n   * When set to true the loading process will try to avoid the use of grid methods that force an immediate redrew.\n   * Usually, redrawing is not a problem but in some cases it is required, for example, avoiding redraws is useful when\n   * we load the state after the columns are initiated but before the grid draws them, in this case some of the data is\n   * missing because it depend on updates from the draw process.\n   *\n   * We use the term `avoid` because the state plugin is extensible so a plugin can also apply state for it's own use.\n   * Because of that we can't guarantee that no redraw is performed.\n   */\n  avoidRedraw?: boolean;\n}\n\nexport type PblNgridStateOptions = PblNgridStateLoadOptions | PblNgridStateSaveOptions\n","import { StateChunks, PblNgridStateChunkContext } from '../models/index';\nimport { stateVisor } from '../state-visor';\n\nexport class PblNgridStateChunkHandlerHost<T extends keyof StateChunks, Z extends keyof StateChunks[T]['state'] = keyof StateChunks[T]['state']> {\n  private keys = new Set<Z>();\n  private rKeys = new Set<Z>();\n  private sFn: Parameters<PblNgridStateChunkHandlerHost<T, Z>['serialize']>[0];\n  private dFn: Parameters<PblNgridStateChunkHandlerHost<T, Z>['deserialize']>[0];\n\n  constructor(private chunkId: T) { }\n\n  handleKeys(...keys: Array<Z>): this {\n    for (const k of keys) { this.keys.add(k) }\n    return this;\n  }\n\n  /**\n   * Required keys are keys that cannot get excluded.\n   * Either by adding the to the `exclude` option or by omitting them from the `include` option.\n   */\n  requiredKeys(...keys: Array<Z>): this {\n    for (const k of keys) {\n      this.keys.add(k)\n      this.rKeys.add(k);\n    }\n    return this;\n  }\n\n  serialize(fn: (key: Z, ctx: PblNgridStateChunkContext<T>) => StateChunks[T]['state'][Z]): this {\n    this.sFn = fn;\n    return this;\n  }\n\n  deserialize(fn: (key: Z, stateValue: StateChunks[T]['state'][Z],  ctx: PblNgridStateChunkContext<T>) => void): this {\n    this.dFn = fn;\n    return this;\n  }\n\n  register(): void {\n    if (this.keys.size === 0) {\n      throw new Error('Invalid state chunk handler, no keys defined.');\n    }\n    if (!this.sFn) {\n      throw new Error('Invalid state chunk handler, missing serialize handler.');\n    }\n    if (!this.dFn) {\n      throw new Error('Invalid state chunk handler, missing deserialize handler.');\n    }\n\n    stateVisor.registerChunkHandlerDefinition({\n      chunkId: this.chunkId,\n      keys: Array.from(this.keys.values()),\n      rKeys: Array.from(this.rKeys.values()),\n      serialize: this.sFn,\n      deserialize: this.dFn,\n    })\n  }\n}\n\nexport interface PblNgridStateChunkHandlerDefinition<T extends keyof StateChunks, Z extends keyof StateChunks[T]['state'] = keyof StateChunks[T]['state']>{\n  chunkId: T;\n  keys: Array<Z>;\n  rKeys: Array<Z>;\n  serialize: Parameters<PblNgridStateChunkHandlerHost<T, Z>['serialize']>[0];\n  deserialize: Parameters<PblNgridStateChunkHandlerHost<T, Z>['deserialize']>[0];\n}\n\nexport function createStateChunkHandler<T extends keyof StateChunks>(section: T) {\n  return new PblNgridStateChunkHandlerHost(section);\n}\n","import { PblNgridIdentResolver, PblNgridIdentResolverContext } from '../models/index';\n\nexport class PblNgridIdAttributeIdentResolver implements PblNgridIdentResolver {\n  resolveId(ctx: PblNgridIdentResolverContext): string | undefined {\n    return ctx.grid.id;\n  }\n}\n","import { PblNgridComponent, PblNgridPluginController, PblNgridExtensionApi } from '@pebula/ngrid';\nimport {\n  RootStateChunks,\n  StateChunks,\n  PblNgridStateChunkSectionContext,\n  PblNgridStateChunkContext,\n  PblNgridStateOptions,\n  PblNgridStateLoadOptions,\n} from './models/index';\nimport { PblNgridStateChunkHandlerDefinition } from './handling/base';\nimport { stateVisor, PblNgridStateChunkSectionConfig } from './state-visor';\nimport { PblNgridLocalStoragePersistAdapter } from './persistance/local-storage';\nimport { PblNgridIdAttributeIdentResolver } from './identification/index';\n\n/**\n * Pick Partial No Partial\n * Like Pick but some are partial some are not partial\n */\nexport type PickPNP<T, P extends keyof T, NP extends keyof T> = Partial<Pick<T, P>> & Pick<T, NP>\n\nexport function resolveId(grid: PblNgridComponent, options?: PblNgridStateOptions): string {\n  const id = options.identResolver.resolveId(createChunkSectionContext(grid, options));\n  if (!id) {\n    throw new Error('Could not resolve a unique id for an ngrid instance, state is disabled');\n  }\n  return id;\n}\n\nexport function serialize(def: PblNgridStateChunkHandlerDefinition<any>, state: any, ctx: PblNgridStateChunkContext<any>): void {\n  const keyPredicate = stateKeyPredicateFactory(def.chunkId, ctx.options);\n  for (const key of def.keys) {\n    if (!keyPredicate || def.rKeys.indexOf(key) > -1 || keyPredicate(key as string)) {\n      state[key] = def.serialize(key, ctx);\n    }\n  }\n}\n\nexport function deserialize(def: PblNgridStateChunkHandlerDefinition<any>, state: any, ctx: PblNgridStateChunkContext<any>): void {\n  const keyPredicate = stateKeyPredicateFactory(def.chunkId, ctx.options);\n  for (const key of def.keys) {\n    if (key in state) {\n      if (!keyPredicate || def.rKeys.indexOf(key) > -1 || keyPredicate(key as string)) {\n        def.deserialize(key, state[key], ctx);\n      }\n    }\n  }\n}\n\nexport function normalizeOptions(mode: 'save', options?: PblNgridStateOptions): PblNgridStateOptions;\nexport function normalizeOptions(mode: 'load', options?: PblNgridStateLoadOptions): PblNgridStateLoadOptions;\nexport function normalizeOptions(mode: 'save' | 'load', options?: PblNgridStateOptions | PblNgridStateLoadOptions): PblNgridStateOptions | PblNgridStateLoadOptions {\n  if (!options) {\n    options = {} as any;\n  }\n\n  if (!options.persistenceAdapter) {\n    options.persistenceAdapter = new PblNgridLocalStoragePersistAdapter();\n  }\n  if (!options.identResolver) {\n    options.identResolver = new PblNgridIdAttributeIdentResolver();\n  }\n\n  if (mode === 'load') {\n    const opt: PblNgridStateLoadOptions = options;\n    if (!opt.strategy) {\n      opt.strategy = 'overwrite'\n    }\n  }\n\n  return options;\n}\n\nexport function getExtApi(grid: PblNgridComponent): PblNgridExtensionApi {\n  const controller = PblNgridPluginController.find(grid);\n  if (controller) {\n    return controller.extApi;\n  }\n}\n\nexport function createChunkSectionContext(grid: PblNgridComponent,\n                                          options: PblNgridStateOptions | PblNgridStateLoadOptions): PblNgridStateChunkSectionContext {\n  return { grid, extApi: getExtApi(grid), options };\n}\n\nexport function createChunkContext<T extends keyof RootStateChunks>(sectionContext: PblNgridStateChunkSectionContext,\n                                                                   chunkConfig: PblNgridStateChunkSectionConfig<T>,\n                                                                   mode: 'serialize' | 'deserialize'): PblNgridStateChunkContext<T> {\n  return {\n    ...sectionContext,\n    source: chunkConfig.sourceMatcher(sectionContext),\n    runChildChunk<TChild extends keyof StateChunks>(childChunkId: TChild, state: StateChunks[TChild]['state'], source: StateChunks[TChild]['value'], data?: StateChunks[TChild]['data']) {\n      const childContext = { ...sectionContext, source, data };\n      const defs = stateVisor.getDefinitionsForSection(childChunkId);\n\n      const action = mode === 'serialize' ? serialize : deserialize;\n      for (const def of defs) {\n        action(def, state, childContext);\n      }\n    }\n  }\n}\n\nexport function stateKeyPredicateFactory(chunkId: keyof StateChunks, options: PblNgridStateOptions, rootPredicate = false): ((key: string) => boolean) | undefined {\n  // TODO: chunkId ans options include/exclude combination does not change\n  // we need to cache it... e.g. each column def will create a new predicate if we don't cache.\n  const filter = options.include || options.exclude;\n  if (filter) {\n    // -1: Exclude, 1: Include\n    const mode: -1 | 1 = filter === options.include ? 1 : -1;\n    const chunkFilter: boolean | string[] = filter[chunkId];\n    if (typeof chunkFilter === 'boolean') {\n      return mode === 1\n        ? (key: string) => chunkFilter\n        : (key: string) => !chunkFilter\n      ;\n    } else if (Array.isArray(chunkFilter)) {\n      if (rootPredicate) {\n        // root predicate is for RootStateChunks and when set to true\n        // the key itself has no impact on the predicate. If the filter is boolean nothing changes\n        // but if it's an array, the array is ignored and considered as true ignoring the key because a key does not existing when checking the root\n        return k => true;\n      } else {\n        return mode === 1\n          ? (key: string) => chunkFilter.indexOf(key) > -1\n          : (key: string) => chunkFilter.indexOf(key) === -1\n        ;\n      }\n    } else if (mode === 1) {\n      return (key: string) => false\n    }\n  }\n}\n\n","import { PblNgridComponent } from '@pebula/ngrid';\nimport { PblNgridGlobalState, PblNgridStateOptions, PblNgridStateSaveOptions, PblNgridStateLoadOptions } from './models/index';\nimport { stateVisor } from './state-visor';\nimport * as U from './utils';\n\nexport function hasState(grid: PblNgridComponent, options?: PblNgridStateOptions): Promise<boolean> {\n  return Promise.resolve()\n    .then( () => {\n      options = U.normalizeOptions('save', options);\n      const id = U.resolveId(grid, options);\n      return options.persistenceAdapter.exists(id);\n    });\n}\n\nexport function saveState(grid: PblNgridComponent, options?: PblNgridStateSaveOptions): Promise<void> {\n  return Promise.resolve()\n    .then( () => {\n      options = U.normalizeOptions('save', options);\n      const id = U.resolveId(grid, options);\n      const state: PblNgridGlobalState = {} as any;\n      const context = U.createChunkSectionContext(grid, options);\n\n      for (const [chunkId, chunkConfig] of stateVisor.getRootSections()) {\n        const keyPredicate = U.stateKeyPredicateFactory(chunkId, options, true);\n\n        if (!keyPredicate || keyPredicate(chunkId)) {\n          const sectionState = chunkConfig.stateMatcher(state);\n          const chunkContext = U.createChunkContext(context, chunkConfig, 'serialize');\n\n          const defs = stateVisor.getDefinitionsForSection(chunkId);\n          for (const def of defs) {\n            U.serialize(def, sectionState, chunkContext);\n          }\n        }\n      }\n      return options.persistenceAdapter.save(id, state);\n    });\n}\n\nexport function loadState(grid: PblNgridComponent, options?: PblNgridStateLoadOptions): Promise<PblNgridGlobalState> {\n  return Promise.resolve()\n    .then( () => {\n      options = U.normalizeOptions('load', options);\n      const id = U.resolveId(grid, options);\n      return options.persistenceAdapter.load(id)\n        .then( state => {\n          const context = U.createChunkSectionContext(grid, options);\n\n          for (const [chunkId, chunkConfig] of stateVisor.getRootSections()) {\n            const keyPredicate = U.stateKeyPredicateFactory(chunkId, options, true);\n\n            if (!keyPredicate || keyPredicate(chunkId)) {\n              const sectionState = chunkConfig.stateMatcher(state);\n              const chunkContext = U.createChunkContext(context, chunkConfig, 'deserialize');\n\n              const defs = stateVisor.getDefinitionsForSection(chunkId);\n              for (const def of defs) {\n                U.deserialize(def, sectionState, chunkContext);\n              }\n            }\n          }\n          return state;\n        });\n    });\n}\n\n","import { PblNgridComponent } from '@pebula/ngrid';\nimport { PickPNP } from '../../utils';\nimport { createStateChunkHandler } from '../../handling';\nimport { stateVisor } from '../../state-visor';\n\nexport interface PblNgridSurfaceState extends\n  PickPNP <\n    PblNgridComponent,\n    'showHeader' | 'showFooter' | 'focusMode' | 'usePagination' | 'hideColumns' | 'fallbackMinHeight',\n    never\n  > { }\n\nexport function registerGridHandlers() {\n  stateVisor.registerRootChunkSection(\n    'grid',\n    {\n      sourceMatcher: ctx => ctx.grid,\n      stateMatcher: state => state.grid || (state.grid = {} as any)\n    }\n  );\n\n  createStateChunkHandler('grid')\n    .handleKeys('showHeader', 'showFooter', 'focusMode', 'usePagination', 'hideColumns', 'fallbackMinHeight')\n    .serialize( (key, ctx) => ctx.source[key] )\n    .deserialize( (key, stateValue, ctx) => {\n      // We must assert the type starting from 3.5 onwards\n      // See \"Fixes to unsound writes to indexed access types\" in https://devblogs.microsoft.com/typescript/announcing-typescript-3-5\n      ctx.source[key as any] = stateValue;\n    })\n    .register();\n}\n","import { PblColumnTypeDefinition, PblColumn, PblColumnDefinition, PblMetaRowDefinitions } from '@pebula/ngrid';\nimport { createStateChunkHandler } from '../../handling';\n\nexport function registerColumnDefChildHandlers() {\n  /* ====================================================================================================================================================== */\n\n  createStateChunkHandler('dataColumn')\n    .requiredKeys('id', 'prop')\n    .handleKeys(\n      'label', 'css', 'type', 'width', 'minWidth', 'maxWidth',              // PblNgridBaseColumnState (all optional)\n      'headerType', 'footerType', 'sort', 'sortAlias', 'editable', 'pin'    // All Optional\n    )\n    .serialize( (key, ctx) => {\n      const c = ctx.data.activeColumn || ctx.data.pblColumn;\n      if (c) {\n        switch (key) {\n          case 'prop':\n            return c.orgProp;\n          default:\n            break;\n        }\n      }\n\n      const value = c ? c[key] : ctx.source[key];\n\n      switch (key) {\n        case 'sort':\n          if (typeof value === 'boolean') {\n            return value;\n          } else {\n            return;\n          }\n        default:\n          break;\n      }\n\n      return value;\n    })\n    .deserialize( (key, stateValue, ctx) => {\n      const { activeColumn } = ctx.data;\n      if (activeColumn) {\n        switch (key) {\n          case 'width':\n            activeColumn.updateWidth(stateValue as any);\n            break;\n        }\n      }\n      if (ctx.source) {\n        switch (key) {\n          case 'prop':\n            return;\n          case 'type':\n          case 'headerType':\n          case 'footerType':\n            const typeValue = ctx.source[key];\n            const stateTypeDef: PblColumnTypeDefinition = stateValue as any;\n            if (stateTypeDef && typeof stateTypeDef !== 'string' && typeValue && typeof typeValue !== 'string') {\n              typeValue.name = stateTypeDef.name;\n              if (stateTypeDef.data) {\n                typeValue.data = Object.assign(typeValue.data || {}, stateTypeDef.data);\n              }\n              return;\n            }\n            break;\n        }\n\n        // We must assert the type starting from 3.5 onwards\n        // See \"Fixes to unsound writes to indexed access types\" in https://devblogs.microsoft.com/typescript/announcing-typescript-3-5\n        ctx.source[key as any] = stateValue;\n      }\n\n    })\n    .register();\n\n  /* ====================================================================================================================================================== */\n\n  createStateChunkHandler('dataMetaRow')\n    .handleKeys('rowClassName', 'type')    // All Optional\n    .serialize( (key, ctx) => {\n      const active = ctx.data.active || ctx.source;\n      if (active) {\n        return active[key];\n      }\n    })\n    .deserialize( (key, stateValue, ctx) => {\n      // We must assert the type starting from 3.5 onwards\n      // See \"Fixes to unsound writes to indexed access types\" in https://devblogs.microsoft.com/typescript/announcing-typescript-3-5\n      ctx.source[key] = stateValue as any;\n    })\n    .register();\n\n\n  /* ====================================================================================================================================================== */\n\n  createStateChunkHandler('metaRow')\n    // Note that we are not handling `cols`, this should be called from the parent, as a different child chunk handling process for each column\n    .handleKeys(\n      'rowClassName', 'type',    // All Optional like dataMetaRow\n      'rowIndex',                // Required\n      )\n    .serialize( (key, ctx) => {\n      return ctx.source[key];\n    })\n    .deserialize( (key, stateValue, ctx) => {\n\n    })\n    .register();\n\n  /* ====================================================================================================================================================== */\n\n  createStateChunkHandler('metaGroupRow')\n    // Note that we are not handling `cols`, this should be called from the parent, as a different child chunk handling process for each column\n    .handleKeys(\n      'rowClassName', 'type',    // All Optional like dataMetaRow\n      'rowIndex',                // Required\n      )\n    .serialize( (key, ctx) => {\n      return ctx.source[key];\n    })\n    .deserialize( (key, stateValue, ctx) => {\n\n    })\n    .register();\n\n  /* ====================================================================================================================================================== */\n\n  createStateChunkHandler('metaColumn')\n    .requiredKeys('kind', 'rowIndex')\n    .handleKeys(\n      'id', 'label', 'css', 'type', 'width', 'minWidth', 'maxWidth',        // PblNgridBaseColumnState (all optional)\n    )\n    .serialize( (key, ctx) => {\n      return ctx.source[key];\n    })\n    .deserialize( (key, stateValue, ctx) => {\n\n    })\n    .register();\n\n  /* ====================================================================================================================================================== */\n\n  createStateChunkHandler('metaGroupColumn')\n    .requiredKeys('prop', 'rowIndex', 'span')\n    .handleKeys(\n      'id', 'label', 'css', 'type', 'width', 'minWidth', 'maxWidth',        // PblNgridBaseColumnState (all optional)\n    )\n    .serialize( (key, ctx) => {\n      return ctx.source[key];\n    })\n    .deserialize( (key, stateValue, ctx) => {\n\n    })\n    .register();\n}\n","import { PblNgridColumnDefinitionSet, PblColumnDefinition, PblColumn, utils } from '@pebula/ngrid';\nimport { createStateChunkHandler } from '../../handling';\nimport { stateVisor } from '../../state-visor';\nimport { StateChunks, PblNgridStateChunkContext } from '../../models/index';\nimport { PblNgridMetaRowSetState, PblNgridMetaColumnState, PblNgridGroupColumnState, PblNgridColumnDefinitionSetState } from './model';\nimport { registerColumnDefChildHandlers } from './children';\n\nfunction runChildChunksForRowMetaColumns<TCol, TChild extends keyof StateChunks>(childChunkId: TChild, ctx: PblNgridStateChunkContext<\"columns\">, columns: TCol[]) {\n  const stateColumns = [];\n  for (const col of columns) {\n    const c: StateChunks[TChild]['state'] = {} as any;\n    ctx.runChildChunk(childChunkId, c, col);\n    stateColumns.push(c);\n  }\n  return stateColumns;\n}\n\n/** Runs the process for the `header` and `footer` sections in the `table` section (if they exist) */\nfunction runChildChunkForDataMetaRows(mode: 's' | 'd', state: PblNgridColumnDefinitionSetState['table'], ctx: PblNgridStateChunkContext<\"columns\">) {\n  const { columnStore } = ctx.extApi;\n  const { table } = ctx.source;\n  for (const kind of ['header', 'footer'] as Array<'header' | 'footer'>) {\n    // This is a mapping of the from->to relationship (i.e serializing or deserializing)\n    const src = mode === 's' ? table : state;\n    const dest = src === table ? state : table;\n\n    // we need to have a source\n    if (src[kind]) {\n      const active = kind === 'header' ? columnStore.headerColumnDef : columnStore.footerColumnDef;\n      if (!dest[kind]) { dest[kind] = {}; }\n      ctx.runChildChunk('dataMetaRow', state[kind], table[kind], { kind, active });\n    }\n  }\n}\n\nfunction runChildChunksForRowDataColumns(mode: 's' | 'd', state: PblNgridColumnDefinitionSetState['table'], ctx: PblNgridStateChunkContext<\"columns\">) {\n  const { table } = ctx.source;\n  const src = mode === 's' ? table : state;\n\n  const resolve = src === state\n    ? col => ({ colState: col, pblColumn: table.cols.find( tCol => (utils.isPblColumn(tCol) && tCol.orgProp === col.prop) || (tCol.id === col.id || tCol.prop === col.prop) ) })\n    : col => ({ colState: state.cols[state.cols.push({} as any) - 1] , pblColumn: utils.isPblColumn(col) && col })\n  ;\n\n  if (src.cols && src.cols.length > 0) {\n    for (const col of src.cols) {\n      const { colState, pblColumn } = resolve(col)\n\n      const data = {\n        pblColumn: utils.isPblColumn(pblColumn) && pblColumn,\n        activeColumn: ctx.grid.columnApi.findColumn(col.id || col.prop),\n      }\n      ctx.runChildChunk('dataColumn', colState, pblColumn, data);\n    }\n  }\n}\n\nexport function registerColumnDefHandlers() {\n  stateVisor.registerRootChunkSection(\n    'columns',\n    {\n      sourceMatcher: ctx => ctx.grid.columns,\n      stateMatcher: state => state.columns || (state.columns = {\n        table: {\n          cols: [],\n        },\n        header: [],\n        footer: [],\n        headerGroup: [],\n      })\n    }\n  );\n\n  createStateChunkHandler('columns')\n    .handleKeys('table', 'header', 'headerGroup', 'footer')\n    .serialize( (key, ctx) => {\n      switch (key) {\n        case 'table':\n          const state: PblNgridColumnDefinitionSetState['table'] = { cols: [] };\n          runChildChunkForDataMetaRows('s', state, ctx);\n          runChildChunksForRowDataColumns('s', state, ctx);\n          return state;\n        case 'header':\n        case 'footer':\n          const source = ctx.source[key];\n          if (source && source.length > 0) {\n            const rows = [];\n            for (const row of source) {\n              const active = ctx.extApi.columnStore.metaColumnIds[key].find( r => !r.isGroup && r.rowDef.rowIndex === row.rowIndex );\n              const r: PblNgridMetaRowSetState<PblNgridMetaColumnState> = {} as any;\n              ctx.runChildChunk('metaRow', r, row);\n              r.cols = runChildChunksForRowMetaColumns('metaColumn', ctx, row.cols);\n              rows.push(r);\n            }\n            return rows;\n          }\n          break;\n        case 'headerGroup':\n          const headerGroupSource = ctx.source.headerGroup;\n          if (headerGroupSource && headerGroupSource.length > 0) {\n            const rows = [];\n            for (const row of headerGroupSource) {\n              const active = ctx.extApi.columnStore.metaColumnIds.header.find( r => !r.isGroup && r.rowDef.rowIndex === row.rowIndex );\n              const r: PblNgridMetaRowSetState<PblNgridGroupColumnState> = {} as any;\n              ctx.runChildChunk('metaGroupRow', r, row);\n              r.cols = runChildChunksForRowMetaColumns('metaColumn', ctx, row.cols);\n              rows.push(r);\n            }\n            return rows;\n          }\n          break;\n      }\n    })\n    .deserialize( (key, stateValue, ctx) => {\n      switch (key) {\n        case 'table':\n          const state = stateValue as PblNgridColumnDefinitionSetState['table'];\n          runChildChunkForDataMetaRows('d', state, ctx);\n          runChildChunksForRowDataColumns('d', state, ctx);\n          break;\n        case 'header':\n        case 'footer':\n          const source = ctx.source[key];\n          const metaRowsState = stateValue as PblNgridColumnDefinitionSetState['header'];\n          if (metaRowsState && metaRowsState.length > 0) {\n            for (const rowState of metaRowsState) {\n              const row = source.find( r => r.rowIndex === rowState.rowIndex );\n              if (row) {\n                const active = ctx.extApi.columnStore.metaColumnIds[key].find( r => !r.isGroup && r.rowDef.rowIndex === rowState.rowIndex );\n                ctx.runChildChunk('metaRow', rowState, row);\n                for (const colState of rowState.cols) {\n                  const col = row.cols.find( r => r.id === colState.id);\n                  if (col) {\n                    const activeColStore = ctx.extApi.columnStore.find(colState.id);\n                    const activeCol = activeColStore && activeColStore.header;\n                    ctx.runChildChunk('metaColumn', colState, col);\n                  }\n                }\n              }\n            }\n          }\n          break;\n        case 'headerGroup':\n          break;\n      }\n    })\n    .register();\n\n    registerColumnDefChildHandlers();\n}\n\nexport {\n  PblNgridMetaColumnState,\n  PblNgridGroupColumnState,\n  PblNgridColumnState,\n  PblNgridMetaRowState,\n  PblNgridMetaRowSetState,\n  PblNgridColumnDefinitionSetState,\n} from './model';\n","import { PblColumn } from '@pebula/ngrid';\nimport { createStateChunkHandler } from '../../handling';\nimport { stateVisor } from '../../state-visor';\nimport { PblNgridStateLoadOptions } from '../../models/index';\n\nexport function registerColumnOrderHandlers() {\n  stateVisor.registerRootChunkSection(\n    'columnOrder',\n    {\n      sourceMatcher: ctx => ctx.grid.columnApi,\n      stateMatcher: state => {\n        if (!state.columnOrder) {\n          state.columnOrder = [];\n        }\n        return state;\n      }\n    }\n  );\n\n  createStateChunkHandler('columnOrder')\n    .handleKeys('columnOrder')\n    .serialize( (key, ctx) => ctx.source.visibleColumnIds.slice() )\n    .deserialize( (key, columnOrder, ctx) => {\n      const { extApi, grid } = ctx;\n      let lastMove: [PblColumn, PblColumn];\n\n      const { visibleColumnIds } = grid.columnApi;\n      if (columnOrder && columnOrder.length === visibleColumnIds.length) {\n        for (let i = 0, len = columnOrder.length; i < len; i++) {\n          if (columnOrder[i] !== visibleColumnIds[i]) {\n            const column = grid.columnApi.findColumn(columnOrder[i]);\n            if (!column) {\n              return;\n            }\n            const anchor = grid.columnApi.findColumn(visibleColumnIds[i]);\n            lastMove = [column, anchor];\n            grid.columnApi.moveColumn(column, anchor, true);\n            extApi.columnStore.updateGroups();\n          }\n        }\n      }\n      // With this revert/redo of the last move we just trigger a redraw.\n      if (lastMove) {\n        grid.columnApi.moveColumn(lastMove[1], lastMove[0], true);\n        grid.columnApi.moveColumn(lastMove[0], lastMove[1], (ctx.options as PblNgridStateLoadOptions).avoidRedraw);\n      }\n    })\n    .register();\n  }\n","import {\n  PblNgridComponent,\n  PblMetaColumnDefinition, PblMetaColumn,\n  PblColumnGroupDefinition, PblColumnGroup,\n  PblColumnDefinition, PblColumn,\n  PblMetaRowDefinitions,\n  PblColumnSet,\n  PblNgridColumnDefinitionSet,\n  ColumnApi,\n} from '@pebula/ngrid';\n\nimport { PblNgridGlobalState, StateChunkItem } from '../models/index';\nimport * as C from './column-def/index';\nimport { PblNgridSurfaceState } from './grid-primitives/index';\n\nexport * from './grid-primitives/index';\nexport * from './column-def/index';\nexport * from './column-order/index';\n\nexport interface PblNgridBuiltInGlobalState {\n  grid: PblNgridSurfaceState;\n  columns: C.PblNgridColumnDefinitionSetState;\n  columnOrder: string[];\n}\n\nexport interface BuiltInRootStateChunks {\n  /**\n   * A state chunk that handles serialization of primitive properties on the grid instance (PblNgridComponent)\n   *\n   * - key/value chunk.\n   * - root chunk.\n   */\n  grid: StateChunkItem<PblNgridSurfaceState, PblNgridComponent>;\n  /**\n   * A state chunk that handles serialization of the entire column definition set.\n   *\n   * It include a limited set of keys that you can control (include/exclude).\n   * Based on the keys processed, additional child chunks are processed, based on the processed key and object it represents.\n   *\n   * - key/value chunk.\n   * - has children chunks\n   * - root chunk.\n   */\n  columns: StateChunkItem<C.PblNgridColumnDefinitionSetState, PblNgridColumnDefinitionSet>;\n  /**\n   * A state chunk that handles serialization of the current column order.\n   * This is a keyless chunk, in this case an array, so you can only include / exclude it as a whole.\n   *\n   * - keyless chunk.\n   * - root chunk.\n   */\n  columnOrder: StateChunkItem<Pick<PblNgridGlobalState, 'columnOrder'>, ColumnApi<any>, any, true>;\n}\n\nexport interface BuiltInStateChunks {\n  /**\n   * A state chunk that handles serialization of meta columns (header / footer).\n   *\n   * This is a child chunk of the `columns` root chunk\n   */\n  metaColumn: StateChunkItem<C.PblNgridMetaColumnState, PblMetaColumnDefinition | PblMetaColumn>;\n  /**\n   * A state chunk that handles serialization of meta group columns (header group).\n   *\n   * This is a child chunk of the `columns` root chunk\n   */\n  metaGroupColumn: StateChunkItem<C.PblNgridGroupColumnState, PblColumnGroupDefinition | PblColumnGroup>;\n  /**\n   * A state chunk that handles serialization of data columns.\n   *\n   * This is a child chunk of the `columns` root chunk\n   */\n  dataColumn: StateChunkItem<C.PblNgridColumnState, PblColumnDefinition | PblColumn, DataColumnBuiltInStateChunkExtraData>;\n  /**\n   * A state chunk that handles serialization of meta rows (A row with header / footer column).\n   *\n   * This is a child chunk of the `columns` root chunk\n   *\n   * Note that a `metaRow` does not refer to that main header/footer rows, it only refers to additional meta rows.\n   * The `dataMetaRow` section chunk is the one referring to the main header/footer rows\n   */\n  metaRow: StateChunkItem<C.PblNgridMetaRowSetState<C.PblNgridMetaColumnState>, PblColumnSet<PblMetaColumnDefinition | PblMetaColumn>>;\n  /**\n   * A state chunk that handles serialization of meta group rows (A row with header group columns).\n   *\n   * This is a child chunk of the `columns` root chunk\n   */\n  metaGroupRow: StateChunkItem<C.PblNgridMetaRowSetState<C.PblNgridGroupColumnState>, PblColumnSet<PblColumnGroupDefinition | PblColumnGroup>>;\n  /**\n   * A state chunk that handles serialization of data rows (A row with data columns).\n   *\n   * This is a child chunk of the `columns` root chunk\n   */\n  dataMetaRow: StateChunkItem<C.PblNgridMetaRowState, PblMetaRowDefinitions, { kind: 'header' | 'footer'; active?: PblMetaRowDefinitions; }>;\n}\n\nexport interface DataColumnBuiltInStateChunkExtraData {\n  /**\n   * The `PblColumn` instance, if found.\n   * If no instance is found it means that the source (`PblNgridComponent.columns`) contains `PblNgridColumnDefinitions`.\n   *\n   * Implementation must fallback to using `ctx.source` if `pblColumn` is not provided.\n   */\n  pblColumn?: PblColumn;\n\n  /**\n   * The `PblColumn` instance that is currently in the grid's column store, if found.\n   * The currently active column is not `pblColumn`, the store always has a copy of all columns.\n   *\n   * If provided, it is not a replacement for `pblColumn`, both require updates. Use the `activeColumn` to save/load the data that\n   * change during runtime.\n   */\n  activeColumn?: PblColumn;\n}\n","import { StateChunkKeyFilter } from './core/models/index';\n\n/**\n * Return's the `User Preferences` preset which focuses on saving and restoring state that the user\n * can define and would want to restore between sessions.\n *\n * For example, saving column width's which the user might have changed using the mouse or any other custom way provided to him (through API).\n * Saving the column order, so if the user re-ordered the table the order can be loaded back again...\n */\nexport function userSessionPref(...basedOn: StateChunkKeyFilter[]): StateChunkKeyFilter {\n  const resultFilter: StateChunkKeyFilter = {\n    grid: [\n      'hideColumns',\n      'showFooter',\n      'showHeader',\n    ],\n    columnOrder: true,\n    columns: [ 'table' ],\n    dataColumn: [\n      'width',\n    ]\n  }\n\n  if (basedOn.length > 0) {\n    for (const b of basedOn)\n    mergeStateChunkKeyFilter(resultFilter, b);\n  }\n\n  return resultFilter;\n}\n\n\n/**\n * Merge a head and tail chunk filters so keys from tail will be merged into head if:\n *\n * - The key does not exist in head\n * - The key exist in head but the value of it is an Array and the value of tail is an Array as well.\n *   In such case, both array's are merged into a single unique array.\n */\nfunction mergeStateChunkKeyFilter(mergeHead: StateChunkKeyFilter, mergeTail: StateChunkKeyFilter) {\n  for (const k of Object.keys(mergeTail)) {\n    const tailValue = mergeTail[k];\n    if (k in mergeHead) {\n      const tailHead = mergeHead[k];\n      if (Array.isArray(tailHead) && Array.isArray(tailValue)) {\n        const s = new Set<string>([...tailHead, ...tailValue]);\n        mergeHead[k] = Array.from(s.values());\n      }\n    } else {\n      mergeHead[k] = mergeTail[k];\n    }\n  }\n}\n","import { Subject, Observable, from } from 'rxjs';\nimport { map, mapTo, filter, take, skip, debounceTime } from 'rxjs/operators';\nimport { Directive, OnDestroy, Injector, Input } from '@angular/core';\n\nimport { PblNgridComponent, PblNgridPluginController } from '@pebula/ngrid';\nimport { hasState, saveState, loadState, PblNgridStateLoadOptions, PblNgridStateSaveOptions } from './core/index';\n\nimport { userSessionPref } from './presets';\n\ndeclare module '@pebula/ngrid/lib/grid/services/config' {\n  interface PblNgridConfig {\n    state?: {\n      /** When set to true will enable the state plugin on all table instances by default. */\n      autoEnable?: boolean;\n      /**\n       * Options to use when auto-loading the plugin\n       */\n      autoEnableOptions?: {\n        loadOptions?: PblNgridStateLoadOptions;\n        saveOptions?: PblNgridStateSaveOptions;\n      }\n    };\n  }\n}\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    state?: PblNgridStatePlugin;\n  }\n  interface PblNgridPluginExtensionFactories {\n    state: keyof typeof PblNgridStatePlugin;\n  }\n}\n\ninterface InternalStatePluginEvents {\n  phase: 'load' | 'save';\n  position: 'before' | 'after';\n  error?: Error;\n}\n\nexport const PLUGIN_KEY: 'state' = 'state';\n\nexport class PblNgridStatePlugin {\n\n  loadOptions?: PblNgridStateLoadOptions;\n  saveOptions?: PblNgridStateSaveOptions;\n\n  afterLoadState: Observable<void>;\n  afterSaveState: Observable<void>;\n  onError: Observable<{ phase: 'save' | 'load'; error: Error; }>;\n\n  private _removePlugin: (table: PblNgridComponent<any>) => void;\n  private _events = new Subject<InternalStatePluginEvents>();\n\n  constructor(public grid: PblNgridComponent<any>, protected injector: Injector, protected pluginCtrl: PblNgridPluginController) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    this.afterLoadState = this._events.pipe(filter( e => e.phase === 'load' && e.position === 'after'), mapTo(undefined) );\n    this.afterSaveState = this._events.pipe(filter( e => e.phase === 'save' && e.position === 'after'), mapTo(undefined) );\n    this.onError = this._events.pipe(filter( e => !!e.error ), map( e => ({ phase: e.phase, error: e.error })) );\n\n    pluginCtrl.events\n      .pipe(\n        filter( e => e.kind === 'onInvalidateHeaders'),\n        take(1),\n      )\n      .subscribe( event => {\n        const initialLoadOptions = { ...(this.loadOptions || {}), avoidRedraw: true };\n        hasState(grid, initialLoadOptions)\n          .then( value => {\n            if (value) {\n              return this._load(initialLoadOptions);\n            }\n          })\n          .then( () => {\n            pluginCtrl.events\n            .pipe(\n              filter( e => e.kind === 'onResizeRow'),\n              skip(1),\n              debounceTime(500),\n            )\n            .subscribe( event => this.save() );\n          });\n      });\n\n    pluginCtrl.events\n      .subscribe( event => {\n        if (event.kind === 'onDestroy') {\n          event.wait(this.save());\n          this._events.complete();\n        }\n      });\n  }\n\n  static create(table: PblNgridComponent<any>, injector: Injector): PblNgridStatePlugin {\n    const pluginCtrl = PblNgridPluginController.find(table);\n    return new PblNgridStatePlugin(table, injector, pluginCtrl);\n  }\n\n  load(): Promise<void> {\n    return this._load(this.loadOptions);\n  }\n\n  save(): Promise<void> {\n    return saveState(this.grid, this.saveOptions)\n      .then( () => this._events.next({phase: 'save', position: 'after'}) )\n      .catch( error => this._events.next({phase: 'save', position: 'after', error }) );\n  }\n\n  destroy(): void {\n    this._removePlugin(this.grid);\n  }\n\n  private _load(loadOptions: PblNgridStateLoadOptions): Promise<void> {\n    return loadState(this.grid, loadOptions)\n      .then( () => this._events.next({phase: 'load', position: 'after'}) )\n      .catch( error => this._events.next({phase: 'load', position: 'after', error }) );\n  }\n\n}\n\n@Directive({\n  selector: 'pbl-ngrid[persistState]', // tslint:disable-line:directive-selector\n  outputs: ['afterLoadState', 'afterSaveState', 'onError'],\n})\nexport class PblNgridStatePluginDirective extends PblNgridStatePlugin implements OnDestroy {\n\n  @Input() loadOptions: PblNgridStateLoadOptions = { include: userSessionPref() };\n  @Input() saveOptions: PblNgridStateSaveOptions = { include: userSessionPref() };\n\n  constructor(grid: PblNgridComponent<any>, injector: Injector, pluginCtrl: PblNgridPluginController) {\n    super(grid, injector, pluginCtrl);\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n}\n","import { registerGridHandlers } from './grid-primitives/index';\nimport { registerColumnOrderHandlers } from './column-order/index';\nimport { registerColumnDefHandlers } from './column-def/index';\n\nexport function registerBuiltInHandlers() {\n  registerGridHandlers();\n  registerColumnOrderHandlers();\n  registerColumnDefHandlers();\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PblNgridPluginController, PblNgridModule, PblNgridConfigService, ngridPlugin } from '@pebula/ngrid';\n\nimport { registerBuiltInHandlers } from './core/built-in-handlers/_register';\nimport { PblNgridStatePlugin, PblNgridStatePluginDirective, PLUGIN_KEY } from './state-plugin';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PblNgridModule,\n  ],\n  declarations: [\n    PblNgridStatePluginDirective,\n  ],\n  exports: [\n    PblNgridStatePluginDirective,\n  ],\n  providers: [ ],\n})\nexport class PblNgridStatePluginModule {\n\n  static readonly NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY, factory: 'create', runOnce: registerBuiltInHandlers }, PblNgridStatePlugin);\n\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridStatePluginModule,\n              configService: PblNgridConfigService) {\n\n  if (parentModule) {\n    return;\n  }\n\n  PblNgridPluginController.created\n    .subscribe( event => {\n      const targetEventsConfig = configService.get(PLUGIN_KEY);\n      if (targetEventsConfig && targetEventsConfig.autoEnable === true) {\n        const pluginCtrl = event.controller;\n        let subscription = pluginCtrl.events\n          .subscribe( evt => {\n            if (evt.kind === 'onInit') {\n              if (!pluginCtrl.hasPlugin(PLUGIN_KEY)) {\n                const instance = pluginCtrl.createPlugin(PLUGIN_KEY);\n                if (targetEventsConfig.autoEnableOptions) {\n                  instance.loadOptions = targetEventsConfig.autoEnableOptions.loadOptions;\n                  instance.saveOptions = targetEventsConfig.autoEnableOptions.saveOptions;\n                }\n              }\n              subscription.unsubscribe();\n              subscription = undefined;\n            }\n          });\n      }\n    });\n  }\n}\n"],"names":["_instance","PblNgridPluginController","U.normalizeOptions","U.resolveId","U.createChunkSectionContext","U.stateKeyPredicateFactory","U.createChunkContext","U.serialize","U.deserialize","utils","Subject","filter","mapTo","map","take","skip","debounceTime","Directive","PblNgridComponent","Injector","Input","ngridPlugin","NgModule","CommonModule","PblNgridModule","Optional","SkipSelf","PblNgridConfigService"],"mappings":"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"}