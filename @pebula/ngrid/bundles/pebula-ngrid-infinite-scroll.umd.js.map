{"version":3,"file":"pebula-ngrid-infinite-scroll.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/infinite-scroll-deffered-row.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/sequenced-block-cache.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/fragmented-block-cache/fragment.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/fragmented-block-cache/fragments.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/fragmented-block-cache/utils.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/fragmented-block-cache/fragmented-block-cache.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/noop-cache.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/caching/create-cache-adapter.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/infinite-scroll-datasource.cache.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/utils.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/infinite-scroll-datasource.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/infinite-scroll-datasource-adapter.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/trigger-execution-queue/execution-proxy-observer.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/trigger-execution-queue/execution-queue.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/event-state.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/infinite-scroll-datasource.context.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-data-source/infinite-scroll-datasource.factory.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-virtual-row/directives.ts","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-virtual-row/row.ts","../../../../libs/ngrid/infinite-scroll/src/lib/default-infinite-virtual-row/default-infinite-virtual-row.component.ts","../../../../libs/ngrid/infinite-scroll/src/lib/default-infinite-virtual-row/default-infinite-virtual-row.component.html","../../../../libs/ngrid/infinite-scroll/src/lib/infinite-scroll-plugin.ts","../../../../libs/ngrid/infinite-scroll/src/lib/grid-infinite-scroll.module.ts","../../../../libs/ngrid/infinite-scroll/src/pebula-ngrid-infinite-scroll.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const INFINITE_SCROLL_DEFFERED_ROW = {} as any;\n","import { PblInfiniteScrollDSContext } from '../infinite-scroll-datasource.context';\nimport { CacheAdapterOptions, CacheBlock, PblNgridCacheAdapter, RowSequence, StartOrEnd } from './cache-adapter';\n\n/*\nThis cache will force the blocks to align perfectly, where no event can be fired with rows\nthat overlap any other pervious or future event unless they overlap fully.\nFor example, if the block size is 50 and strictBlocks is true the events will include fromRow, toRows: [0, 49] [50, 99] .... [300, 349]\nIf strictBlocks is false you might get the above but might also get [73, 122] etc...\n\nWhile the user scrolls slowly the datasource will output strict blocks natively, the anomalies happen when\nthe user scrolls fast, into a scroll area with no rows.\n\nUsing strictBlocks fits to scenarios where the server returns page based pagination with no option to get items between pages. (i.e. fixed page size)\nIf your server returns pagination based on \"skip\" and \"limit\" then using strictBlocks does not add any value.\n\nWhen using strictBlocks cache performance might improve but the tradeoff is a little bit more API calls.\n*/\n\n/**\n * A Caching strategy that enforces storing cache rows in blocks where\n *\n *  - All blocks have the same predefined size (configurable)\n *  - A block contains items in a sequence (I.E A block is a page)\n *  - Each block must continue a sequence from the last block.\n *\n * In Addition, the cache is limited by size (configurable).\n * When items are added or when maximum size is updated the cache will auto-purge items\n * that cause overflow.\n *\n * If items are added which breaks the current sequence the entire cache is purged automatically.\n *\n * This is best for grid's that use a datasource with page based pagination.\n * While the user scrolls, each next item is most often the next block in sequence.\n *\n * Note that when pre-defining the virtual size to the total amount of rows will allow the user\n * to fast scroll which might break the sequence, skipping a block or more, thus purging the entire cache.\n */\nexport class SequencedBlockCache implements PblNgridCacheAdapter<CacheAdapterOptions> {\n\n  public end: number = -1;\n  public start: number = 0;\n\n  get maxSize(): number { return this._maxSize; }\n  get size(): number { return this.end - this.start + 1; }\n  get empty() { return this.size === 0; }\n\n  readonly options: CacheAdapterOptions;\n\n  private _maxSize = 0;\n  private lastAdd: StartOrEnd | undefined;\n\n  constructor(private readonly context: PblInfiniteScrollDSContext<any>, options?: CacheAdapterOptions) {\n    this.options = { ...(options || {}) };\n  }\n\n  remove(startRow: number, count: number): RowSequence[] {\n    const start = Math.max(startRow, this.start);\n    const end = Math.min(startRow + count - 1, this.end);\n    return [ [start, end] ];\n  }\n\n  /**\n   * Set the new max size for this cache.\n   * @returns When new max size is bigger the old & current size violates the new max size, return the number of items trimmed from the cache\n   * with positive value if trimmed from end, negative value if trimmed from start. Otherwise returns 0.\n   */\n  setCacheSize(maxSize: number): RowSequence[] {\n    this._maxSize = Math.max(0, maxSize);\n    const oversize = this.alignBoundary(this.lastAdd || 1);\n    if (oversize < 0) {\n      return [\n        [this.start + oversize, this.start - 1],\n      ];\n    } else if (oversize > 0) {\n      return [\n        [this.end + 1, this.end + oversize],\n      ];\n    } else {\n      return [];\n    }\n  }\n\n  update(startRow: number, endRow: number, direction: StartOrEnd): RowSequence[] {\n    if (this.empty) {\n      return this.add(startRow, endRow - startRow + 1);\n    } else if (this.isSibling(startRow, endRow, direction)) {\n      if (direction === -1) {\n        const offset = this.start - startRow;\n        return this.add(startRow, offset);\n      } else if (direction === 1) {\n        const offset = endRow - this.end;\n        return this.add(this.end + 1, offset);\n      } else {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          throw new Error('Infinite scroll - Sequenced block cache Error');\n        }\n        return;\n      }\n    } else {\n      const result = this.clear();\n      this.add(startRow, endRow - startRow + 1);\n      return result;\n    }\n  }\n\n  clear(): RowSequence[] {\n    this.lastAdd = undefined;\n    if (this.empty) {\n      return [ [0, 0] ];\n    }\n\n    const { start, end } = this;\n    this.start = 0;\n    this.end = -1;\n    return [ [start, end] ];\n  }\n\n  createBlock(startIndex: number, endIndex: number, totalLength = 0): CacheBlock | undefined {\n    const [ direction, start, end ] = this.matchBlock(startIndex, endIndex) || [];\n\n    if (!direction) {\n      return undefined;\n    }\n\n    const { blockSize } = this.context.options;\n\n    let fromRow: number;\n    let toRow: number;\n    switch (direction) {\n      case -1:\n        fromRow = Math.max(0, end - (blockSize - 1));\n        toRow = end;\n        break;\n      case 1:\n        fromRow = start;\n        toRow = start + blockSize - 1;\n        break;\n    }\n\n    if (totalLength && fromRow >= totalLength) {\n      return undefined;\n    }\n\n    // Strict Block logic:\n    // Now, we align the block to match a sequential world of blocks based on the block size.\n    // If we have a gap we want to divert to the nearest block start/end, based on the direction.\n    // If we go down (direction is 1) we want the nearest block start BELOW us, getting duplicates in the call but ensuring no gaps ahead\n    // If we go up (direction is -1) we want to nearest block start ABOVE us, getting duplicates in the call but ensuring no gaps ahead.\n    const main = direction === 1 ? fromRow : toRow;\n    let rem = main % blockSize;\n    if (rem !== 0) {\n      fromRow = main - rem;\n      toRow = fromRow + blockSize - 1;\n    }\n\n    if (totalLength) {\n      if (toRow >= totalLength) {\n        toRow = totalLength - 1;\n        fromRow = toRow - (toRow % blockSize)\n      }\n    }\n\n    return [direction, fromRow, toRow];\n  }\n\n  private matchBlock(start: number, end: number): [-1 | 1, number, number] | undefined {\n    if (this.empty) {\n      return [1, start, end];\n    }\n\n    if (start >= this.start && end <= this.end) {\n      return undefined;\n    }\n\n    if (start < this.start && end >= this.start - 1) {\n      return [-1, start, this.start -1];\n    }\n    if (end > this.end && start <= this.end + 1) {\n      return [1, this.end + 1, end];\n    }\n\n    return [end > this.end ? 1 : -1, start, end];\n  }\n\n  private oversize() {\n    return this._maxSize ? Math.max(this.size - this._maxSize, 0) : 0;\n  }\n\n  private isSibling(startRow: number, endRow: number, direction: StartOrEnd) {\n    if (direction === 1) {\n      return this.end + 1 === startRow;\n    }\n    if (direction === -1) {\n      return this.start - 1 === endRow;\n    }\n    return false;\n  }\n\n  private add(startRow: number, count: number): RowSequence[] {\n    if (startRow < 0 || count <= 0) {\n      return [];\n    }\n\n    let oversize: number;\n    let end = startRow + count - 1;\n    if (this.empty) {\n      this.start = startRow;\n      this.end = end;\n      oversize = this.alignBoundary(1);\n    } else if (startRow < this.start) {\n      this.start = startRow;\n      oversize = this.alignBoundary(-(this.lastAdd = -1) as any);\n    } else if (end > this.end) {\n      this.end = end;\n      oversize = this.alignBoundary(-(this.lastAdd = 1) as any);\n    }\n    if (oversize < 0) {\n      return [\n        [this.start + oversize, this.start - 1],\n      ];\n    } else if (oversize > 0) {\n      return [\n        [this.end + 1, this.end + oversize],\n      ];\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Align the cache to fix max size.\n   * @returns the number of items trimmed from the cache with positive value if trimmed from end, negative value if trimmed from start.\n  */\n  private alignBoundary(trimFrom: StartOrEnd): number {\n    const oversize = this.oversize();\n    if (oversize) {\n      if (trimFrom === 1) {\n        this.end -= oversize;\n      } else {\n        this.start += oversize;\n        return -oversize;\n      }\n    }\n    return oversize;\n  }\n}\n","export class Fragment {\n\n  static calcEnd(startRow: number, count: number) {\n    return startRow + count - 1;\n  }\n\n  get size(): number { return this.end - this.start + 1; }\n  get empty() { return this.size === 0; }\n\n  constructor(public start: number, public end: number) { }\n\n  containsRow(rowIndex: number) {\n    return rowIndex >= this.start && rowIndex <= this.end;\n  }\n\n  equals(f: Fragment) {\n    return this.start === f.start && this.end === f.end;\n  }\n}\n","import { RowSequence, StartOrEnd } from '../cache-adapter';\nimport { Fragment } from './fragment';\n\nexport class Fragments extends Array<Fragment> {\n\n  private dirty = false;\n  private _size: number = 0;\n\n  get size(): number {\n    if (this.dirty) {\n      this.onDirty();\n    }\n    return this._size;\n  }\n\n  remove(startRow: number, count: number, startFrom = 0): RowSequence[] {\n    const result: RowSequence[] = [];\n    const endRow = Fragment.calcEnd(startRow, count);\n    const index = this.searchByRow(startRow, startFrom);\n\n    if (index !== -1) {\n      const item = this[index];\n      const originalEnd = item.end;\n\n      const gap = originalEnd - endRow;\n\n      item.end = startRow - 1;\n\n      if (gap === 0) {\n        result.push([startRow, endRow]);\n      } else if (gap < 0) {\n        result.push([startRow, originalEnd], ...this.remove(originalEnd + 1, gap, index + 1));\n      } else {\n        const f = new Fragment(endRow + 1, originalEnd);\n        this.splice(index, 0, f);\n        result.push([startRow, endRow]);\n      }\n\n      if (result.length > 0) {\n        this.markDirty();\n      }\n    }\n\n    return result;\n  }\n\n  removeItems(count: number, location: StartOrEnd): RowSequence[] {\n    const result: RowSequence[] = [];\n    let f: Fragment;\n    while (count > 0) {\n      f = location === -1 ? this.shift() : this.pop();\n      if (!f) {\n        break;\n      }\n\n      if (f.size > count) {\n        if (location === -1) {\n          f.start += count;\n          result.push([f.start - count, f.start - 1]);\n        } else {\n          f.end -= count;\n          result.push([f.end + 1, f.end + count]);\n        }\n        count = 0;\n      } else {\n        count = count - f.size;\n        result.push([f.start, f.end]);\n        f = undefined;\n      }\n    }\n    if (f) {\n      if (location === -1) {\n        this.unshift(f);\n      } else {\n        this.push(f);\n      }\n    }\n    if (result.length > 0) {\n      this.markDirty();\n    }\n    return result;\n  }\n\n  clear(): RowSequence[] {\n    const result: RowSequence[] = [];\n    while (this.length > 0) {\n      const f = this.shift();\n      result.push([f.start, f.end]);\n    }\n    if (result.length > 0) {\n      this.markDirty();\n    }\n    return result;\n  }\n\n  /**\n   * Returns the first row index of a missing row that is the most close (based on the direction) to the provided rowIndex.\n   * If the provided rowIndex is missing, returns the provided rowIndex.\n   * Note that when the direction is -1 the closest missing row might be -1, i.e. all rows are in-place and nothing is missing\n   */\n  findClosestMissing(rowIndex: number, direction: StartOrEnd) {\n    const fragment = this[this.searchByRow(rowIndex)];\n    if (fragment) { // we assume fragments must have gaps or else they are merged\n      return direction === 1 ? fragment.end + 1 : fragment.start - 1;\n    }\n    return rowIndex;\n  }\n\n  containsRange(startRow: number, endRow: number) {\n    const first = this[this.searchByRow(startRow)];\n    return first && endRow <= first.end; // we assume fragments must have gaps or else they are merged\n  }\n\n  /**\n   * Search all fragments and find the index of the fragments that contains a specific row index\n   */\n  searchByRow(rowIndex: number, startFrom = 0) {\n    let end = this.length - 1;\n\n    while (startFrom <= end){\n      let mid = Math.floor((startFrom + end) / 2);\n      const item = this[mid];\n      if (item.containsRow(rowIndex)) {\n        return mid;\n      }\n      else if (item.end < rowIndex) {\n        startFrom = mid + 1;\n      } else {\n        end = mid - 1;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Search for the row that either contain the rowIndex or is the closest to it (from the start)\n   * I.e, if no fragment contains the rowIndex, the closest fragment to it will return it's index\n   * If The row index is greater then the end of the hightest fragment -1 is returned\n   * */\n  searchRowProximity(rowIndex: number, startFrom = 0) {\n    let end = this.length - 1;\n\n    let mostProximate = -1;\n    while (startFrom <= end){\n      let mid = Math.floor((startFrom + end) / 2);\n      const item = this[mid];\n      if (item.containsRow(rowIndex)) {\n        return mid;\n      } else if (item.end < rowIndex) {\n        startFrom = mid + 1;\n      } else {\n        mostProximate = mid;\n        end = mid - 1;\n      }\n    }\n    return mostProximate;\n  }\n\n  markDirty() {\n    this.dirty = true;\n  }\n\n  /**\n   * Check and verify that there are no sequential blocks (e.g. block 1 [0, 99], block 2 [100, 199])\n   * If there are, merge them into a single block\n   */\n  checkAndMerge() {\n    for (let i = 1; i < this.length; i++) {\n      if (this[i - 1].end + 1 === this[i].start) {\n        this[i - 1].end = this[i].end;\n        this.splice(i, 1);\n        i -= 1;\n      }\n    }\n  }\n\n  private onDirty() {\n    this.dirty = false;\n    this._size = this.reduce( (s, f) => s + f.size, 0);\n  }\n}\n","import { Fragment } from './fragment';\n\nexport enum IntersectionType {\n  /** No intersection between \"source\" and \"target\" */\n  none,\n  /** \"source\" and \"target\" are equal */\n  full,\n  /** \"target\" contains the entire \"source\" */\n  contained,\n  /** \"source\" contains the entire \"target\" */\n  contains,\n  /** A portion from the \"source\" is not intersected with the \"target\" */\n  partial,\n}\n\nexport function intersect(f1: Fragment, f2: Fragment): Fragment | null {\n  const min = f1.start < f2.start ? f1 : f2;\n  const max = min === f1 ? f2 : f1;\n  return min.end < max.start\n    ? null\n    : new Fragment(max.start, min.end < max.end ? min.end : max.end);\n}\n\nexport function findIntersectionType(source: Fragment, target: Fragment, intersection?: ReturnType<typeof intersect>): IntersectionType {\n  if (source.equals(target)) {\n    return IntersectionType.full;\n  }\n\n  if (intersection === undefined) {\n    intersection = intersect(source, target);\n  }\n\n  if (!intersection) {\n    return IntersectionType.none;\n  }\n\n  if (source.equals(intersection)) {\n    return IntersectionType.contained;\n  }\n\n  if (target.equals(intersection)) {\n    return IntersectionType.contains;\n  }\n\n  return IntersectionType.partial;\n}\n","import { PblInfiniteScrollDSContext } from '../../infinite-scroll-datasource.context';\nimport { CacheAdapterOptions, CacheBlock, PblNgridCacheAdapter, RowSequence, StartOrEnd } from '../cache-adapter';\nimport { Fragment } from './fragment';\nimport { Fragments } from './fragments';\nimport { findIntersectionType, IntersectionType } from './utils';\n\n// const LOG = msg => { console.log(msg); }\n\nexport interface FragmentedBlockCacheOptions extends CacheAdapterOptions {\n  /**\n   * When set to true the cache will force the blocks to align perfectly, where no event can be fired with rows\n   * that overlap any other pervious or future event unless they overlap fully.\n   * For example, if the block size is 50 and \"strictPaging\" is true the events will include fromRow, toRows: [0, 49] [50, 99] .... [300, 349]\n   * If 'strictPaging is false you might get the above but might also get [73, 122] etc...\n   * @default false\n   */\n  strictPaging?: boolean\n}\n\n/**\n * A Caching strategy that enforces storing cache rows in blocks where\n *\n *  - All blocks have the same predefined size (configurable)\n *  - A block contains items in a sequence (I.E A block is a page)\n *\n * In Addition, the cache is limited by size (configurable).\n * When items are added or when maximum size is updated the cache will auto-purge items\n * that cause overflow.\n *\n * Beside overflow, not other logic can perform automatic purging.\n *\n * This is best for grid's that use a datasource with an index based pagination (skip/limit) and\n */\nexport class FragmentedBlockCache implements PblNgridCacheAdapter<FragmentedBlockCacheOptions> {\n\n  get maxSize(): number { return this._maxSize; }\n  get size(): number { return this.fragments.size; }\n  get empty() { return this.size === 0; }\n\n  readonly options: FragmentedBlockCacheOptions;\n\n  private _maxSize = 0;\n  private coldLocation: StartOrEnd | undefined;\n  // DO NOT MODIFY FRAGMENT ITEMS IN THE COLLECTION WITHOUT CALLING \"markDirty()\" afterwards\n  private fragments = new Fragments();\n  private lastStartRow = 0;\n  private lastDir: StartOrEnd = 1;\n\n  constructor(private readonly context: PblInfiniteScrollDSContext<any>, options?: FragmentedBlockCacheOptions) {\n    this.options = { ...(options || {}) };\n  }\n\n  remove(startRow: number, count: number): RowSequence[] {\n    return this.fragments.remove(startRow, count);\n  }\n\n  /**\n   * Set the new max size for this cache.\n   * @returns When new max size is bigger the old & current size violates the new max size, return the number of items trimmed from the cache\n   * with positive value if trimmed from end, negative value if trimmed from start. Otherwise returns 0.\n   */\n  setCacheSize(maxSize: number): RowSequence[] {\n    this._maxSize = Math.max(0, maxSize);\n    return this.alignBoundary();\n  }\n\n  update(startRow: number, endRow: number, direction: StartOrEnd): RowSequence[] {\n    this.coldLocation = direction === 1 ? -1 : 1;\n    return this.add(startRow, endRow);\n  }\n\n  clear(): RowSequence[] {\n    this.coldLocation = undefined;\n    if (this.empty) {\n      return [ [0, 0] ];\n    }\n    return this.fragments.clear();\n  }\n\n  createBlock(startIndex: number, endIndex: number, totalLength = 0): CacheBlock | undefined {\n    const [ direction, start, end ] = this.matchBlock(startIndex, endIndex) || [];\n\n    // LOG(`CREATE BLOCK: [${startIndex}, ${endIndex}] => [${direction}, ${start}, ${end}]`)\n    if (!direction) {\n      return undefined;\n    }\n\n    const { blockSize } = this.context.options;\n    const { strictPaging } = this.options;\n\n    let fromRow: number;\n    let toRow: number;\n    switch (direction) {\n      case -1:\n        fromRow = Math.max(0, end - (blockSize - 1));\n        toRow = end;\n        if (!strictPaging && fromRow < start) {\n          fromRow = Math.min(this.fragments.findClosestMissing(fromRow, 1), start);\n        }\n        break;\n      case 1:\n        fromRow = start;\n        toRow = start + blockSize - 1;\n        if (!strictPaging && toRow > end) {\n          toRow = Math.max(this.fragments.findClosestMissing(toRow, -1), end);\n        }\n        break;\n    }\n\n    if (totalLength && fromRow >= totalLength) {\n      return undefined;\n    }\n\n    // Strict Block logic:\n    // Now, we align the block to match a sequential world of blocks based on the block size.\n    // If we have a gap we want to divert to the nearest block start/end, based on the direction.\n    // If we go down (direction is 1) we want the nearest block start BELOW us, getting duplicates in the call but ensuring no gaps ahead\n    // If we go up (direction is -1) we want to nearest block start ABOVE us, getting duplicates in the call but ensuring no gaps ahead.\n    if (strictPaging) {\n      const main = direction === 1 ? fromRow : toRow;\n      let rem = main % blockSize;\n      if (rem !== 0) {\n        fromRow = main - rem;\n        toRow = fromRow + blockSize - 1;\n      }\n    }\n\n    if (totalLength && toRow >= totalLength) {\n      toRow = totalLength - 1;\n      if (strictPaging) {\n        fromRow = toRow - (toRow % blockSize)\n      }\n    }\n\n    return [direction, fromRow, toRow];\n  }\n\n  private matchBlock(start: number, end: number): CacheBlock | undefined {\n    if (this.empty) {\n      return [1, start, end];\n    }\n\n    const iFirst = this.fragments.searchRowProximity(start);\n    const iLast = this.fragments.searchRowProximity(end);\n    if (iFirst === -1) {\n      return [1, start, end];\n    }\n\n    const first = this.fragments[iFirst];\n    if (iLast === -1) {\n      return [1, first.containsRow(start) ? first.end + 1 : start, end];\n    }\n\n    const intersectionType = findIntersectionType(first, new Fragment(start,end));\n    const dir = this.lastStartRow > start ? -1 : this.lastStartRow === start ? this.lastDir : 1;\n    this.lastStartRow = start;\n    this.lastDir = dir;\n\n    // The logic here assumes that there are not sequential blocks, (e.g. block 1 [0, 99], block 2 [100, 199])\n    // All sequential blocks are to be merged via checkAndMerge on the fragments collection\n    switch (intersectionType) {\n      case IntersectionType.none:\n        return [dir, start, end];\n      case IntersectionType.partial:\n        if (iFirst === iLast) {\n          if (start < first.start) {\n            return [dir, start, first.start - 1];\n          } else {\n            return [dir, first.end + 1, end];\n          }\n        } else {\n          const last = this.fragments[iLast];\n          return [dir, start < first.start ? start : first.end + 1, end >= last.start ? last.start - 1 : end];\n        }\n      case IntersectionType.contained:\n        const last = this.fragments[iLast];\n        return [dir, start, end >= last.start ? last.start - 1 : end];\n      case IntersectionType.contains:\n      case IntersectionType.full:\n        return undefined;\n    }\n  }\n\n  private add(startRow: number, endRow: number): RowSequence[] {\n    if (startRow < 0 || endRow <= 0) {\n      return [];\n    }\n\n    const newFragment = new Fragment(startRow, endRow);\n    const iFirst = this.fragments.searchRowProximity(startRow);\n    const first = this.fragments[iFirst];\n    const intersectionType = !first ? null : findIntersectionType(first, newFragment);\n\n    switch (intersectionType) {\n      case null:\n        // EDGE CASE: when  \"first\" is undefined, i.e. \"iFirst\" is -1\n        // This edge case means no proximity, i,e. the new fragment is AFTER the last fragment we currently have (or we have no fragments)\n        this.fragments.push(newFragment);\n        break;\n      case IntersectionType.none: // it means first === last\n        this.fragments.splice(iFirst, 0, newFragment);\n        break;\n      case IntersectionType.partial:\n      case IntersectionType.contained:\n        let iLast = this.fragments.searchRowProximity(endRow);\n        if (iLast === -1) {\n          iLast = this.fragments.length - 1;\n        }\n        const last = this.fragments[iLast];\n        first.start = Math.min(newFragment.start, first.start);\n        if (newFragment.end >= last.start) {\n          first.end = newFragment.end;\n          this.fragments.splice(iFirst + 1, iLast - iFirst);\n        } else {\n          first.end = Math.max(newFragment.end, first.end);\n          this.fragments.splice(iFirst + 1, (iLast - 1) - iFirst);\n        }\n        break;\n      case IntersectionType.contains:\n      case IntersectionType.full:\n        return [];\n    }\n\n    this.fragments.markDirty();\n    this.fragments.checkAndMerge();\n    return this.alignBoundary();\n  }\n\n  private oversize() {\n    return this._maxSize ? Math.max(this.size - this._maxSize, 0) : 0;\n  }\n\n  private alignBoundary(): RowSequence[] {\n    const oversize = this.oversize();\n    return oversize > 0 ? this.fragments.removeItems(oversize, this.coldLocation || 1) : [];\n  }\n}\n","import { PblInfiniteScrollDataSource } from '../infinite-scroll-datasource';\nimport { PblInfiniteScrollDSContext } from '../infinite-scroll-datasource.context';\nimport { CacheAdapterOptions, CacheBlock, PblNgridCacheAdapter, RowSequence, StartOrEnd } from './cache-adapter';\n\n/**\n * A Caching strategy that enforces storing cache rows in blocks where\n *\n *  - All blocks have the same predefined size (configurable)\n *  - A block contains items in a sequence (I.E A block is a page)\n *  - Each block must continue a sequence from the last block.\n *\n * In Addition, the cache is limited by size (configurable).\n * When items are added or when maximum size is updated the cache will auto-purge items\n * that cause overflow.\n *\n * If items are added which breaks the current sequence the entire cache is purged automatically.\n *\n * This is best for grid's that use a datasource with page based pagination.\n * While the user scrolls, each next item is most often the next block in sequence.\n *\n * Note that when pre-defining the virtual size to the total amount of rows will allow the user\n * to fast scroll which might break the sequence, skipping a block or more, thus purging the entire cache.\n */\nexport class NoOpBlockCache implements PblNgridCacheAdapter<CacheAdapterOptions> {\n  get maxSize(): number { return this.ds.length; }\n  get size(): number { return this.ds.length; }\n  get empty() { return this.size === 0; }\n\n  readonly options: CacheAdapterOptions;\n\n  private readonly ds: PblInfiniteScrollDataSource<any>;\n\n  constructor(private readonly context: PblInfiniteScrollDSContext<any>, private readonly virtualRow: any) {\n    this.ds = context.getDataSource();\n  }\n\n  remove(startRow: number, count: number): RowSequence[] {\n    const start = 0;\n    const end = Math.min(startRow + count - 1, this.ds.length);\n    return [ [start, end ] ];\n  }\n\n  /**\n   * Set the new max size for this cache.\n   * @returns When new max size is bigger the old & current size violates the new max size, return the number of items trimmed from the cache\n   * with positive value if trimmed from end, negative value if trimmed from start. Otherwise returns 0.\n   */\n  setCacheSize(maxSize: number): RowSequence[] {\n    return [];\n  }\n\n  update(startRow: number, endRow: number, direction: StartOrEnd): RowSequence[] {\n    return [];\n  }\n\n  clear(): RowSequence[] {\n    return [ [0, this.ds.length - 1] ];\n  }\n\n  createBlock(startIndex: number, endIndex: number, totalLength = 0): CacheBlock | undefined {\n    const [ direction, start, end ] = this.matchBlock(startIndex, endIndex) || [];\n\n    if (!direction) {\n      return undefined;\n    }\n\n    const { blockSize } = this.context.options;\n\n    let fromRow: number;\n    let toRow: number;\n    switch (direction) {\n      case -1:\n        fromRow = Math.max(0, end - (blockSize - 1));\n        toRow = end;\n        break;\n      case 1:\n        fromRow = start;\n        toRow = start + blockSize - 1;\n        break;\n    }\n\n    if (totalLength && fromRow >= totalLength) {\n      return undefined;\n    }\n\n    if (totalLength) {\n      if (toRow >= totalLength) {\n        toRow = totalLength - 1;\n      }\n    }\n\n    return [direction, fromRow, toRow];\n  }\n\n  private matchBlock(start: number, end: number): CacheBlock | undefined { // TODO: refactor to labeled tuple types in TS 4.0\n    if (start === end) {\n      return [1, start, end];\n    }\n\n    const source = this.ds.source;\n\n    for (let i = start; i <= end; i++) {\n      if (source[i] !== this.virtualRow) {\n        start = i;\n      } else {\n        break;\n      }\n    }\n\n    if (start === end) {\n      return undefined;\n    } else {\n      return [1, start, end];\n    }\n  }\n}\n","import { PblInfiniteScrollDSContext } from '../infinite-scroll-datasource.context';\nimport { INFINITE_SCROLL_DEFFERED_ROW } from '../infinite-scroll-deffered-row';\nimport { SequencedBlockCache } from './sequenced-block-cache';\nimport { FragmentedBlockCache } from './fragmented-block-cache';\nimport { PblInfiniteScrollCacheOptions } from '../infinite-scroll-datasource.types';\nimport { NoOpBlockCache } from './noop-cache';\n\nexport interface PblNgridCacheAdaptersMap {\n  noOpCache: NoOpBlockCache ;\n  sequenceBlocks: SequencedBlockCache ;\n  fragmentedBlocks: FragmentedBlockCache;\n}\n\nexport function createCacheAdapter(context: PblInfiniteScrollDSContext<any>, options: PblInfiniteScrollCacheOptions) {\n  switch (options.type) {\n    case 'noOpCache':\n      return new NoOpBlockCache(context, INFINITE_SCROLL_DEFFERED_ROW);\n    case 'sequenceBlocks':\n      return new SequencedBlockCache(context, options.options);\n    case 'fragmentedBlocks':\n      return new FragmentedBlockCache(context, options.options);\n  }\n}\n","import { PblInfiniteScrollCacheOptions } from './infinite-scroll-datasource.types';\nimport { createCacheAdapter, PblNgridCacheAdapter, StartOrEnd } from './caching';\nimport { PblInfiniteScrollDSContext } from './infinite-scroll-datasource.context';\n\nfunction normalizeCacheOptions(options?: PblInfiniteScrollCacheOptions): PblInfiniteScrollCacheOptions {\n  if (!options) {\n    options = { type: 'noOpCache' };\n  }\n  return options;\n}\n\nexport class PblInfiniteScrollDataSourceCache<T, TData = any> {\n  get maxSize(): number { return this.cacheAdapter.maxSize; }\n  get size(): number { return this.cacheAdapter.size; }\n  get empty() { return this.cacheAdapter.empty; }\n\n  private cacheAdapter: PblNgridCacheAdapter<any>;\n\n  constructor(private readonly context: PblInfiniteScrollDSContext<T, TData>, options?: PblInfiniteScrollCacheOptions) {\n    this.cacheAdapter = createCacheAdapter(context, normalizeCacheOptions(options));\n    this.setCacheSize(300);\n  }\n\n  setCacheSize(maxSize: number) {\n    this.cacheAdapter.setCacheSize(maxSize);\n  }\n\n  matchNewBlock() {\n    const ds = this.context.getDataSource();\n    const totalLength = this.context.totalLength;\n\n    const renderEnd = ds.renderStart + ds.renderLength;\n    const start = ds.renderStart;\n    const end = totalLength ? Math.min(renderEnd, totalLength) : renderEnd;\n    return this.cacheAdapter.createBlock(start, end, totalLength);\n  }\n\n  createInitialBlock() {\n    const ds = this.context.getDataSource();\n    const totalLength = this.context.totalLength;\n    const renderEnd = ds.renderLength;\n    const start =0;\n    const end = totalLength ? Math.min(renderEnd, totalLength) : renderEnd;\n    return this.cacheAdapter.createBlock(start, end, totalLength);\n  }\n\n  update(startRow: number, endRow: number, direction: StartOrEnd) {\n    return this.cacheAdapter.update(startRow, endRow, direction);\n  }\n\n  clear() {\n    return this.cacheAdapter.clear();\n  }\n}\n","import { PblDataSourceTriggerChangedEvent } from '@pebula/ngrid';\nimport { CacheBlock } from './caching';\nimport { PblInfiniteScrollDSContext } from './infinite-scroll-datasource.context';\nimport { PblInfiniteScrollDsOptions, PblInfiniteScrollTriggerChangedEvent } from './infinite-scroll-datasource.types';\nimport { INFINITE_SCROLL_DEFFERED_ROW } from './infinite-scroll-deffered-row';\n\nexport function normalizeOptions(rawOptions: PblInfiniteScrollDsOptions) {\n  const options: PblInfiniteScrollDsOptions = rawOptions || {};\n\n  options.blockSize = Number(options.blockSize);\n  if (Number.isNaN(options.blockSize)) {\n    options.blockSize = 50;\n  } else if (options.blockSize <= 0) {\n    options.blockSize = 50;\n  }\n\n  options.initialVirtualSize = Number(options.initialVirtualSize);\n  if (Number.isNaN(options.initialVirtualSize)) {\n    options.initialVirtualSize = 0;\n  }\n\n  return options;\n}\n\nexport function shouldTriggerInvisibleScroll<T, TData = any>(context: PblInfiniteScrollDSContext<T, TData>) {\n  const ds = context.getDataSource();\n  if (context.totalLength && ds.renderStart > context.totalLength) {\n    return false;\n  }\n\n  return !!(context.cache.matchNewBlock());\n}\n\nexport function tryAddVirtualRowsBlock<T>(source: T[], event: PblInfiniteScrollTriggerChangedEvent<any>, blockSize: number) {\n  const currLen = source.length;\n  if (currLen < event.totalLength && event.totalLength > event.toRow && source[currLen - 1] !== INFINITE_SCROLL_DEFFERED_ROW) {\n    const len = Math.min(currLen + blockSize - 1, event.totalLength);\n    for (let i = currLen; i < len; i++) {\n      source[i] = INFINITE_SCROLL_DEFFERED_ROW;\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function upgradeChangeEventToInfinite<T, TData = any>(totalLength: number, event: PblDataSourceTriggerChangedEvent<TData>, blockMatch: CacheBlock) {\n  const [ direction, start, end ] = blockMatch;\n\n  if (!event.isInitial) {\n    if (direction === 1 && end === totalLength - 1) {\n      (event as PblInfiniteScrollTriggerChangedEvent).isLastBlock = true;\n    }\n  }\n\n  (event as PblInfiniteScrollTriggerChangedEvent).direction = direction;\n  (event as PblInfiniteScrollTriggerChangedEvent).fromRow = start;\n  (event as PblInfiniteScrollTriggerChangedEvent).offset = (end - start) + 1;\n  (event as PblInfiniteScrollTriggerChangedEvent).toRow = end;\n\n  return event as PblInfiniteScrollTriggerChangedEvent<TData> | undefined;\n}\n\n/**\n * Update the cache with new block information to reflect the last triggered event and\n * also update the datasource with the new values, removing values that are purged due to cache logic.\n * Returns the new datasource, or the original datasource editing in-place.\n *\n * For example, if the cache was empty the values provided are returned\n * Otherwise, the original datasource is edited and returned.\n */\nexport function updateCacheAndDataSource<T, TData = any>(context: PblInfiniteScrollDSContext<T, TData>,\n                                                         event: PblInfiniteScrollTriggerChangedEvent<TData>,\n                                                         values: T[]) {\n\n  if (context.cache.empty) {\n    return values;\n  }\n\n  const source = context.getDataSource().source;\n  const toRemove = context.cache.update(event.fromRow, event.toRow, event.direction);\n  for(const [start, end] of toRemove) {\n    for (let i = start; i <= end; i++) {\n      source[i] = INFINITE_SCROLL_DEFFERED_ROW;\n    }\n  }\n\n  const { fromRow } = event;\n  for (let i = 0, len = values.length; i < len; i++) {\n    source[i + fromRow] = values[i];\n  }\n\n  return source;\n}\n","import { take } from 'rxjs/operators';\nimport { PblDataSource, PblDataSourceOptions, PblNgridRowContext } from '@pebula/ngrid';\nimport { PblInfiniteScrollDSContext } from './infinite-scroll-datasource.context';\nimport { INFINITE_SCROLL_DEFFERED_ROW } from './infinite-scroll-deffered-row';\nimport { PblInfiniteScrollDataSourceAdapter } from './infinite-scroll-datasource-adapter';\nimport { PblInfiniteScrollTriggerChangedEvent } from './infinite-scroll-datasource.types';\n\nexport class PblInfiniteScrollDataSource<T = any, TData = any> extends PblDataSource<T,\n                                                                                     TData,\n                                                                                     PblInfiniteScrollTriggerChangedEvent<TData>,\n                                                                                     PblInfiniteScrollDataSourceAdapter<T, TData>> {\n\n  get maxCacheSize() { return this.context.cache.maxSize; }\n  get cacheSize() { return this.context.cache.size; }\n\n  constructor(private readonly context: PblInfiniteScrollDSContext<T, TData>, options?: PblDataSourceOptions) {\n    super(context.getAdapter(), options);\n  }\n\n  setCacheSize(maxSize: number) {\n    this.context.cache.setCacheSize(maxSize);\n  }\n\n  purgeCache() {\n    const source = this.source;\n    for (const [start, end] of this.context.cache.clear()) {\n      for (let i = start; i <= end; i++) {\n        source[i] = INFINITE_SCROLL_DEFFERED_ROW;\n      }\n    }\n    this.refresh();\n  }\n\n  isVirtualRow(row: any) {\n    return row === INFINITE_SCROLL_DEFFERED_ROW;\n  }\n\n  isVirtualContext(context: PblNgridRowContext<any>) {\n    return context.$implicit === INFINITE_SCROLL_DEFFERED_ROW;\n  }\n\n  /**\n   * Update the size of the datasource to reflect a virtual size.\n   * This will extend the scrollable size of the grid.\n   *\n   * > Note that you can only add to the size, if the current size is larger than the new size nothing will happen.\n   */\n  updateVirtualSize(newSize: number) {\n    if (this.adapter.inFlight) {\n      this.onRenderDataChanging\n        .pipe(take(1))\n        .subscribe(r => {\n          PblInfiniteScrollDataSource.updateVirtualSize(newSize, r.data);\n          // we must refire so virtual scroll viewport can catch it\n          // because it also listen's to this stream but it is registered before us.\n          // See virtual-scroll/virtual-scroll-for-of.ts where \"dataStream\" is assigned\n          this._onRenderDataChanging.next(r);\n        });\n    } else {\n      PblInfiniteScrollDataSource.updateVirtualSize(newSize, this.source);\n    }\n  }\n\n  static updateVirtualSize(newSize: number, values: any[]) {\n    if (values && values.length < newSize) {\n      for (let i = values.length; i < newSize; i++) {\n        values[i] = INFINITE_SCROLL_DEFFERED_ROW;\n      }\n    }\n  }\n}\n","import { Observable } from 'rxjs';\nimport { PblDataSourceAdapter, PblDataSourceConfigurableTriggers } from '@pebula/ngrid';\nimport { PblInfiniteScrollTriggerChangedEvent } from './infinite-scroll-datasource.types';\nimport { PblInfiniteScrollDSContext } from './infinite-scroll-datasource.context';\nimport { debounceTime } from 'rxjs/operators';\n\nexport class PblInfiniteScrollDataSourceAdapter<T = any, TData = any> extends PblDataSourceAdapter<T, TData, PblInfiniteScrollTriggerChangedEvent<TData>> {\n\n  readonly virtualRowsLoading: Observable<boolean>;\n\n  constructor(private context: PblInfiniteScrollDSContext<T, TData>,\n              config: false | Partial<Record<keyof PblDataSourceConfigurableTriggers, boolean>>,\n              onVirtualLoading: Observable<boolean>) {\n    super(e => context.onTrigger(e), config);\n    this.virtualRowsLoading = onVirtualLoading.pipe(debounceTime(24));\n  }\n\n  dispose() {\n    this.context.dispose();\n    super.dispose();\n  }\n\n  protected emitOnSourceChanging(event: PblInfiniteScrollTriggerChangedEvent<TData>) {\n    if (event.isInitial) {\n      super.emitOnSourceChanging(event);\n    }\n  }\n}\n","import { Observable, Subscriber, Subscription, Subject } from 'rxjs';\nimport { PblInfiniteScrollTriggerChangedEvent } from '../infinite-scroll-datasource.types';\n\n// const LOG = msg => console.log(msg);\n\n/**\n * A wrapper around an on trigger observable call that will prevent it from\n * closing if marked to do so (calling `keepAlive()`).\n * If `keepAlive()` was called and the observable has been unsubscribed the teardown logic\n * will not unsubscribe from the underlying on-trigger observable, it will let it roll until\n * finished or being killed again.\n * Keep alive is a toggle, if \"used\" it can not be used again unless `keepAlive()` is called again.\n *\n * This observable is used internally by the execution queue to prevent on-trigger calls from being invoked and\n * cancelled multiple times.\n * This usually happen when scrolling, since the scroll might not break the current page block fetched, until fetched\n * it will keep asking for it, hence the need to keep it alive.\n * Each execution must return an observable or it will get canceled, so we return the currently executed trigger\n * instead of running it again...\n * @internal\n */\nexport class TriggerExecutionProxyObservable<T> extends Observable<T> {\n  readonly onKilled = new Subject<void>();\n\n  private canLive: boolean = false;\n  private baseSubscription: Subscription;\n  private subscriber: Subscriber<T>;\n  private error?: any;\n  private completed?: boolean;\n\n  constructor(private readonly event: PblInfiniteScrollTriggerChangedEvent,\n              private readonly target: Observable<T>) {\n    super(subscriber => this.onSubscribe(subscriber));\n    // LOG(`NEW[${event.id}]: ${event.fromRow} - ${event.toRow}`);\n  }\n\n  keepAlive() {\n    this.canLive = true;\n  }\n\n  private onSubscribe(subscriber: Subscriber<T>) {\n    this.subscriber = subscriber;\n\n    if (!this.baseSubscription) {\n      this.baseSubscription = this.target.subscribe({\n        next: v => this.subscriber.next(v),\n        error: e => {\n          this.error = e;\n          this.subscriber.error(e);\n        },\n        complete: () => {\n          this.completed = true;\n          this.subscriber.complete();\n        },\n      });\n    }\n\n    return () => this.tearDown();\n  }\n\n  private tearDown() {\n    if (!this.canLive || this.completed || this.error) {\n      // LOG(`UNSUBSCRIBE${this.event.id}: ${this.event.fromRow} - ${this.event.toRow}`);\n      this.baseSubscription.unsubscribe();\n      this.onKilled.next();\n      this.onKilled.complete();\n    } else {\n      // LOG(`REMOVE CREDIT${this.event.id}: ${this.event.fromRow} - ${this.event.toRow}`);\n      this.canLive = false;\n    }\n  }\n}\n","import { from, isObservable, Observable, of } from 'rxjs';\nimport { PblDataSourceTriggerChangeHandler } from '@pebula/ngrid';\nimport { PblInfiniteScrollTriggerChangedEvent } from '../infinite-scroll-datasource.types';\nimport { TriggerExecutionProxyObservable } from './execution-proxy-observer';\n\n// const LOG = msg => console.log(msg);\n\n/**\n * Execute a data source trigger based on infinite trigger change events provided.\n * Each time an execution starts the event is compared to already in-process event that were executed and did not yet finish.\n * If the event overlaps with an existing event, it will not execute.\n * Events overlap when the event to be executed has a range that is contained with any other in-flight event.\n */\nexport class TriggerExecutionQueue<T, TData = any> {\n\n  public slots = 2;\n\n  private runningEvents = new Map<PblInfiniteScrollTriggerChangedEvent<TData>, TriggerExecutionProxyObservable<T[]>>();\n\n  constructor(private readonly handler: PblDataSourceTriggerChangeHandler<T, PblInfiniteScrollTriggerChangedEvent<TData>>) { }\n\n  /**\n   * Execute an event and keep track of it until execution is done.\n   * Before execution, check if one of the events currently in execution, contains the provided event.\n   * If so, the execution is will not go through.\n   * Event contains another event only if the range (from/to) of the other event is within the boundaries of it's own range.\n   * For example, the event from row 50 to row 100 contains the event from row 70 to row 100 but it does not contain\n   * the event from row 49 to row 50.\n   * @param event\n   * @param fallbackToOverlap When true (and then a containing event is found), will signal the containing event to\n   * that an event with a set or all items it is fetching trying to execute again but was denied and it will also\n   * return it's currently running observable.\n   * Due to how the datasource works, it will try to unsubscribe/cancel the currently running observable and subscribe\n   * to the returned observable (which is the same), by signaling we allow the running observable to prevent closing the\n   * running call and remain in fact we're making it \"hot\" for period of time so it will not cancel any running call.\n   */\n  execute(event: PblInfiniteScrollTriggerChangedEvent<TData>, fallbackToOverlap = false): false | Observable<T[]> {\n    const overlap = this.checkOverlap(event);\n    if (!!overlap) {\n      if (fallbackToOverlap) {\n        overlap.keepAlive();\n        return overlap;\n      }\n      return false;\n    }\n\n    // LOG(`EXECUTING HANDLER: ${event.fromRow} - ${event.toRow}`);\n    const result = this.handler(event);\n    if (result === false) {\n      return false;\n    }\n\n\n    const triggerResult = Array.isArray(result)\n      ? of(result)\n      : isObservable(result)\n        ? result\n        : from(result)\n    ;\n\n    // LOG(`CREATE[${event.id}]: ${event.fromRow} - ${event.toRow}`);\n    const obs = new TriggerExecutionProxyObservable<T[]>(event, triggerResult);\n    obs.onKilled.subscribe(() => this.runningEvents.delete(event));\n\n    this.runningEvents.set(event, obs);\n\n    return obs;\n  }\n\n  private checkOverlap(event: PblInfiniteScrollTriggerChangedEvent<TData>) {\n    for (const [e, v] of this.runningEvents.entries()) {\n      if (event.fromRow >= e.fromRow && event.toRow <= e.toRow) {\n        // LOG(`OVERLAPPED: ${event.fromRow} - ${event.toRow}`);\n        return v;\n      }\n    }\n  }\n}\n","import { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PblInfiniteScrollTriggerChangedEvent } from './infinite-scroll-datasource.types';\n\n/**\n * @internal\n */\nexport class EventState<T> {\n  private done: boolean;\n  private notFull: boolean;\n\n  constructor(public readonly event: PblInfiniteScrollTriggerChangedEvent = null) { }\n\n\n  isDone() {\n    return this.done;\n  }\n\n  rangeEquals(event: PblInfiniteScrollTriggerChangedEvent) {\n    return event.fromRow === this.event.fromRow && event.toRow === this.event.toRow;\n  }\n\n  /**\n   * When true is returned, the handling of `PblDataSource.onRenderedDataChanged` should be skipped.\n   * Usually, the event state will keep track of the returned value and check if the length of items returned covers\n   * the total length required by the event. Only when not enough items have been returned, the returned value will be true.\n   * Once true is returned, it will toggle back to false, i.e. it will tell you to skip once only.\n   */\n  skipNextRender() {\n    if (this.notFull) {\n      this.notFull = false;\n      return true;\n    }\n    return false;\n  }\n\n  pipe() {\n    return (o: Observable<T[]>) => {\n      return o.pipe(\n        tap( values => {\n          this.done = true;\n          this.notFull = values.length < this.event.offset;\n        }),\n      );\n    }\n  }\n}\n","import { Observable, of, BehaviorSubject } from 'rxjs';\nimport { tap, finalize, take, filter, map } from 'rxjs/operators';\nimport { PblDataSourceTriggerChangedEvent, DataSourceOf, PblDataSourceConfigurableTriggers } from '@pebula/ngrid/core';\nimport { PblInfiniteScrollFactoryOptions, PblInfiniteScrollDsOptions, PblInfiniteScrollTriggerChangedEvent } from './infinite-scroll-datasource.types';\nimport { PblInfiniteScrollDataSourceCache } from './infinite-scroll-datasource.cache';\nimport { normalizeOptions, shouldTriggerInvisibleScroll, tryAddVirtualRowsBlock, updateCacheAndDataSource, upgradeChangeEventToInfinite } from './utils';\nimport { PblInfiniteScrollDataSource } from './infinite-scroll-datasource';\nimport { PblInfiniteScrollDataSourceAdapter } from './infinite-scroll-datasource-adapter';\nimport { TriggerExecutionQueue } from './trigger-execution-queue';\nimport { CacheBlock } from './caching';\nimport { EventState } from './event-state';\n\n// const LOG = msg => console.log(msg) ;\n\ndeclare module '@pebula/ngrid/core/lib/data-source/adapter/types' {\n  interface PblDataSourceTriggerChangedEventSource {\n   /**\n    * The source of the event was from a scroll that reached into a group of rows that the grid needs to fetch.\n    */\n    infiniteScroll: true;\n  }\n}\n\nexport class PblInfiniteScrollDSContext<T, TData = any> {\n\n  options: PblInfiniteScrollDsOptions;\n  totalLength: number;\n  cache: PblInfiniteScrollDataSourceCache<T, TData>;\n\n  private ds: PblInfiniteScrollDataSource<T, TData>;\n  private adapter: PblInfiniteScrollDataSourceAdapter<T, TData>;\n  private currentSessionToken: any;\n  private queue: TriggerExecutionQueue<T, TData>;\n  private onVirtualLoading = new BehaviorSubject<boolean>(false);\n  private virtualLoadingSessions = 0;\n  private pendingTrigger$: Observable<T[]>;\n  private customTriggers: false | Partial<Record<keyof PblDataSourceConfigurableTriggers, boolean>>;\n  private timeoutCancelTokens = new Set<number>();\n  private ignoreScrolling: boolean = false;\n  private lastEventState = new EventState<T>();\n\n  constructor(private factoryOptions: PblInfiniteScrollFactoryOptions<T, TData>) {\n    this.options = normalizeOptions(factoryOptions.infiniteOptions);\n    if (this.options.initialVirtualSize > 0) {\n      this.totalLength = this.options.initialVirtualSize;\n    }\n    this.queue = new TriggerExecutionQueue<T, TData>(this.factoryOptions.onTrigger);\n  }\n\n  onTrigger(rawEvent: PblDataSourceTriggerChangedEvent<TData>): false | DataSourceOf<T> {\n    if (rawEvent.isInitial) {\n      return this.invokeInitialOnTrigger(rawEvent);\n    }\n\n    if (this.pendingTrigger$) {\n      // LOG(`HAS pendingTrigger$`);\n      const pendingTrigger$ = this.pendingTrigger$;\n      this.pendingTrigger$ = undefined;\n      if (rawEvent.data.changed && (rawEvent.data.curr as any) === pendingTrigger$) {\n        // LOG(`PENDING - MATCHED!`);\n        this.currentSessionToken = undefined;\n        return pendingTrigger$\n          .pipe(\n            finalize(() => {\n              // LOG(`PENDING - RESULT DONE`);\n              this.deferSyncRows(16, () => this.tickVirtualLoading(-1));\n\n            }));\n      }\n    }\n\n    if (this.currentSessionToken && rawEvent.data.changed && rawEvent.data.curr === this.currentSessionToken) {\n      if (this.ds.hostGrid.viewport.isScrolling) {\n        this.handleScrolling(rawEvent);\n        return of(this.ds.source);\n      }\n\n      const { result, event } = this.invokeRuntimeOnTrigger(rawEvent);\n      if (!result || !event) { // !event for type gate, because if we have \"result: then \"event\" is always set\n        // LOG('NO SCROLL - FALSE TRIGGER!');\n        this.currentSessionToken = undefined;\n        return false;\n      } else {\n        const { source } = this.ds;\n        if (tryAddVirtualRowsBlock(source, event, this.options.blockSize)) {\n          this.pendingTrigger$ = result;\n          this.tickVirtualLoading(1);\n          // LOG('NO SCROLL - VIRTUAL ROWS ADDED');\n          return of(source)\n            .pipe(\n              finalize(() => {\n                this.deferSyncRows();\n                // LOG('NO SCROLL - VIRTUAL ROWS RENDERED');\n                this.currentSessionToken = undefined;\n                this.ds.refresh(result as any);\n              }));\n        } else {\n          // LOG('NO SCROLL - NO VIRTUAL ROWS ADDED');\n          return result\n            .pipe(\n              finalize(() => {\n                // LOG(`NO SCROLL - RESULT DONE`);\n                this.deferSyncRows(16);\n                this.currentSessionToken = undefined;\n              }));\n        }\n      }\n    }\n\n    if (rawEvent.data.changed || (this.customTriggers && PblInfiniteScrollDataSourceAdapter.isCustomBehaviorEvent(rawEvent, this.customTriggers))) {\n      this.cache.clear();\n      rawEvent.isInitial = true;\n      return this.invokeInitialOnTrigger(rawEvent);\n    }\n\n    return false;\n    // throw new Error('Invalid');\n  }\n\n  getAdapter(): PblInfiniteScrollDataSourceAdapter<T, TData> {\n    if (!this.adapter) {\n      this.customTriggers = this.factoryOptions.customTriggers || false;\n      // we can't allow any internal trigger handlers to run\n      // It will throw the entire datasource out of sync, infinite ds can't do that\n      this.adapter = new PblInfiniteScrollDataSourceAdapter<T, TData>(this, { filter: true, sort: true, pagination: true }, this.onVirtualLoading);\n    }\n    return this.adapter;\n  }\n\n  getDataSource(): PblInfiniteScrollDataSource<T, TData> {\n    if (!this.ds) {\n      this.ds = new PblInfiniteScrollDataSource<T, TData>(this, this.factoryOptions.dsOptions)\n      this.cache = new PblInfiniteScrollDataSourceCache<T, TData>(this, this.factoryOptions.cacheOptions);\n      this.ds.onRenderedDataChanged.subscribe(() => this.onRenderedDataChanged() );\n      if (this.factoryOptions.onCreated) {\n        this.factoryOptions.onCreated(this.ds);\n      }\n    }\n    return this.ds;\n  }\n\n  dispose() {\n    this.onVirtualLoading.complete();\n    for (const t of this.timeoutCancelTokens.values()) {\n      clearTimeout(t);\n    }\n  }\n\n  /**\n   * This is where we detect if we need to internally invoke a trigger because we've reached an area\n   * in the grid where row's does not exists but we show the dummy row, hence we need to fetch them.\n   * The grid will never trigger an event here since from the grid's perspective a row is showing...\n   * This detection also handle's scrolling and session so we don't invoke the trigger to much.\n   */\n  private onRenderedDataChanged() {\n    if (this.lastEventState.skipNextRender()) {\n      // if the current event returned items that did not occupy the whole range of the event\n      // stop, we don't want to check anything cause we already know we are missing items.\n      // since we know we're missing items, we also know we're going to call the same range again which\n      // did not return anyway, so it is useless and in the worst case might cause infinite loop\n      // LOG(`RENDER DATA SKIPPING DUE TO SKIP NEXT RENDER!`);\n      return;\n    }\n    if (!this.currentSessionToken) {\n      if (shouldTriggerInvisibleScroll(this)) {\n        // LOG(`RENDER DATA CHANGED FROM ROW ${this.ds.renderStart}`);\n        const t = this.currentSessionToken = {};\n        this.safeAsyncOp(() => {\n          if (this.currentSessionToken === t) {\n            this.ds.refresh(t as any);\n          }\n        }, 0);\n      }\n    } else {\n      // LOG(`RENDER DATA WITH SESSION FROM ROW ${this.ds.renderStart}`);\n      if (!this.ds.hostGrid.viewport.isScrolling) {\n        // LOG(`SESSION OVERRIDE`);\n        this.ds.refresh(this.currentSessionToken = {} as any);\n      } else {\n        if (!this.ignoreScrolling) {\n          this.ignoreScrolling = true;\n          this.ds.hostGrid.viewport.scrolling\n            .pipe(\n              filter( d => d === 0),\n              take(1),\n            )\n            .subscribe(d => {\n              this.ignoreScrolling = false;\n              if (shouldTriggerInvisibleScroll(this)) {\n                // LOG(`OVERRIDING AFTER SCROLL SESSION`);\n                this.currentSessionToken = undefined;\n                this.onRenderedDataChanged();\n              }\n            });\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a new event state for the given event, store it in the lastEventState property\n   * and returns a pipe that will sync the state of the event as the call progress.\n   * @param event\n   */\n  private wrapEventState(event: PblInfiniteScrollTriggerChangedEvent<TData>) {\n    return (this.lastEventState = new EventState<T>(event)).pipe();\n  }\n\n  private deferSyncRows(ms = 0, runBefore?: () => void, runAfter?: () => void) {\n    this.safeAsyncOp(() => {\n      runBefore && runBefore();\n      this.ds.hostGrid.rowsApi.syncRows('data', true);\n      runAfter && runAfter();\n    }, ms);\n  }\n\n  private safeAsyncOp(fn: () => void, delay: number) {\n    const cancelToken = setTimeout(() => {\n      this.timeoutCancelTokens.delete(cancelToken);\n      fn();\n    }, delay) as unknown as number;\n    this.timeoutCancelTokens.add(cancelToken);\n  }\n\n  private tickVirtualLoading(value: -1 | 1) {\n    this.virtualLoadingSessions = this.virtualLoadingSessions + value;\n    const inVirtualLoad = this.onVirtualLoading.value;\n    switch (this.virtualLoadingSessions) {\n      case 0:\n        inVirtualLoad && this.onVirtualLoading.next(false);\n        break;\n      case 1:\n        !inVirtualLoad && this.onVirtualLoading.next(true);\n        break;\n      default:\n        if (this.virtualLoadingSessions < 0) {\n          this.virtualLoadingSessions = 0;\n        }\n        break;\n    }\n  }\n\n  private handleScrolling(rawEvent: PblDataSourceTriggerChangedEvent<TData>) {\n    this.tickVirtualLoading(1);\n    const newBlock = this.cache.matchNewBlock();\n    const event = newBlock ? this.tryGetInfiniteEvent(rawEvent, newBlock) : false as const;\n    if (event !== false) {\n      if (tryAddVirtualRowsBlock(this.ds.source, event, this.options.blockSize)) {\n        // LOG('SCROLL - VIRTUAL ROWS ADDED');\n      }\n    }\n\n    this.ds.hostGrid.viewport.scrolling\n      .pipe(\n        filter( d => d === 0),\n        take(1),\n      )\n      .subscribe(d => {\n        const { result } = this.invokeRuntimeOnTrigger(rawEvent);\n        if (!!result) {\n          if (this.pendingTrigger$) {\n            this.tickVirtualLoading(-1);\n          }\n          // LOG('SCROLL DONE - HAS RESULT - HAS PENDING');\n          this.ds.refresh(this.pendingTrigger$ = result as any);\n        } else if (!this.pendingTrigger$) {\n          // LOG('SCROLL DONE = NO RESULT - NOT HAS PENDING');\n          this.ds.refresh(this.pendingTrigger$ = of(this.ds.source) as any);\n        } else {\n          // LOG('SCROLL DONE = NO RESULT - HAS PENDING');\n          this.tickVirtualLoading(-1);\n        }\n      });\n  }\n\n  private invokeInitialOnTrigger(rawEvent: PblDataSourceTriggerChangedEvent<TData>): false | DataSourceOf<T> {\n    const event = this.tryGetInfiniteEvent(rawEvent, rawEvent.isInitial ? this.cache.createInitialBlock() : this.cache.createInitialBlock());\n    const result = this.queue.execute(event);\n    return result && result.pipe(\n      this.wrapEventState(event),\n      tap( values => {\n        this.cache.clear();\n        if(values.length > 1) {\n          this.cache.update(0, values.length - 1, 1);\n        }\n\n        PblInfiniteScrollDataSource.updateVirtualSize(this.options.initialVirtualSize, values);\n        if (!rawEvent.isInitial) {\n          this.ds.hostGrid.viewport.scrollToOffset(0);\n        }\n      }),\n    );\n  }\n\n  private invokeRuntimeOnTrigger(rawEvent: PblDataSourceTriggerChangedEvent<TData>): { result?: Observable<T[]>; event: false | PblInfiniteScrollTriggerChangedEvent<TData> } {\n    const newBlock = this.cache.matchNewBlock();\n    const event = newBlock ? this.tryGetInfiniteEvent(rawEvent, newBlock) : false as const;\n\n    if(event !== false) {\n      if (this.lastEventState.isDone() && this.lastEventState.rangeEquals(event)) {\n        return { event: false };\n      }\n      event.eventSource = 'infiniteScroll';\n      const triggerResult = this.queue.execute(event, true);\n      if (triggerResult !== false) {\n        return {\n          event,\n          result: triggerResult\n            .pipe(\n              // tap( () => LOG(`TRIGGER[${event.id}]: ${event.fromRow} - ${event.toRow}`)),\n              this.wrapEventState(event),\n              map( values => updateCacheAndDataSource(this, event, values) ),\n            ),\n        };\n      }\n    }\n\n    return { event };\n  }\n\n  private tryGetInfiniteEvent(rawEvent: PblDataSourceTriggerChangedEvent<TData>, block: CacheBlock) {\n    const totalLength = this.totalLength || 0;\n    rawEvent.updateTotalLength = (totalLength: number) => { this.totalLength = totalLength; };\n    (rawEvent as PblInfiniteScrollTriggerChangedEvent).totalLength = totalLength;\n    return upgradeChangeEventToInfinite<T, TData>(totalLength, rawEvent, block);\n  }\n\n}\n","import { PblDataSourceBaseFactory, PblDataSourceAdapter } from '@pebula/ngrid/core';\nimport { PblInfiniteScrollFactoryOptions, PblInfiniteScrollDsOptions, PblInfiniteScrollTriggerChangedEvent, PblInfiniteScrollCacheOptions } from './infinite-scroll-datasource.types';\nimport { PblInfiniteScrollDSContext } from './infinite-scroll-datasource.context';\nimport { PblInfiniteScrollDataSource } from './infinite-scroll-datasource';\nimport { PblInfiniteScrollDataSourceAdapter } from './infinite-scroll-datasource-adapter';\nimport { PblNgridCacheAdapter, PblNgridCacheAdaptersMap } from './caching';\n\nexport class PblInfiniteScrollDSFactory<T, TData = any> extends PblDataSourceBaseFactory<T,\n                                                                                         TData,\n                                                                                         PblInfiniteScrollTriggerChangedEvent<TData>,\n                                                                                         PblInfiniteScrollDataSourceAdapter<T, TData>,\n                                                                                         PblInfiniteScrollDataSource<T, TData>> {\n  private infiniteScrollOptions: PblInfiniteScrollDsOptions;\n  private cacheOptions: PblInfiniteScrollCacheOptions;\n\n  private context: PblInfiniteScrollDSContext<T, TData>;\n\n  withInfiniteScrollOptions(options: PblInfiniteScrollDsOptions): this {\n    this.infiniteScrollOptions = options;\n    return this;\n  }\n\n  withCacheOptions<P extends keyof PblNgridCacheAdaptersMap>(type: P, options?: PblNgridCacheAdaptersMap[P] extends PblNgridCacheAdapter<infer U> ? U : never): this {\n    this.cacheOptions = { type, options: options as any };\n    return this;\n  }\n\n  create(): PblInfiniteScrollDataSource<T, TData> {\n    const factoryOptions: PblInfiniteScrollFactoryOptions<T, TData> = {\n      onTrigger: this._adapter.onTrigger,\n      customTriggers: this._adapter.customTriggers,\n      onCreated: this._onCreated,\n      dsOptions: this._dsOptions,\n      infiniteOptions: this.infiniteScrollOptions,\n      cacheOptions: this.cacheOptions,\n    };\n\n    this.context = new PblInfiniteScrollDSContext(factoryOptions);\n    super.onCreated(null);\n\n    return super.create();\n  }\n\n  protected createAdapter(): PblInfiniteScrollDataSourceAdapter<T, TData> {\n    return this.context.getAdapter();\n  }\n\n  protected createDataSource(adapter: PblDataSourceAdapter<T, TData, PblInfiniteScrollTriggerChangedEvent<TData>>): PblInfiniteScrollDataSource<T, TData> {\n    return this.context.getDataSource();\n  }\n}\n\nexport function createInfiniteScrollDS<T, TData = T[]>(): PblInfiniteScrollDSFactory<T, TData> {\n  return new PblInfiniteScrollDSFactory<T, TData>();\n}\n","// tslint:disable:use-host-property-decorator\nimport {\n  Directive,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { PblNgridRowDef } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/core/lib/registry/types' {\n  interface PblNgridSingleRegistryMap {\n    infiniteVirtualRow?: PblNgridInfiniteVirtualRowRefDirective;\n  }\n}\n\n@Directive({\n  selector: '[pblNgridInfiniteVirtualRowDef]',\n  inputs: ['columns: pblNgridInfiniteVirtualRowDefColumns', 'when: pblNgridInfiniteVirtualRowDefWhen'],\n})\nexport class PblNgridInfiniteVirtualRowRefDirective<T = any> extends PblNgridRowDef<T> implements OnInit, OnDestroy {\n\n  ngOnInit(): void {\n    this.registry.setSingle('infiniteVirtualRow', this as any);\n  }\n\n  ngOnDestroy(): void {\n    this.registry.setSingle('infiniteVirtualRow',  undefined);\n  }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { CdkRow } from '@angular/cdk/table';\nimport { PblNgridRowComponent } from '@pebula/ngrid';\n\nexport const PBL_NGRID_ROW_TEMPLATE  = `<ng-content select=\".pbl-ngrid-row-prefix\"></ng-content><ng-content></ng-content><ng-content select=\".pbl-ngrid-row-suffix\"></ng-content>`;\n\n@Component({\n  selector: 'pbl-ngrid-row[infiniteRow]',\n  template: PBL_NGRID_ROW_TEMPLATE,\n  host: { // tslint:disable-line:no-host-metadata-property\n    'class': 'pbl-ngrid-row',\n    'role': 'row',\n  },\n  providers: [\n    { provide: CdkRow, useExisting: PblNgridRowComponent }\n  ],\n  exportAs: 'pblNgridInfiniteRow',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PblNgridInfiniteRowComponent<T = any> extends PblNgridRowComponent<T> {\n\n  canCreateCell() {\n    return false;\n  }\n}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { PblColumn } from '@pebula/ngrid';\n\n/**\n * Use to set the a default `pblNgridInfiniteVirtualRowDef` if the user did not set one.\n */\n@Component({\n  selector: 'pbl-ngrid-default-infinite-virtual-row',\n  templateUrl: './default-infinite-virtual-row.component.html',\n  styleUrls: ['./default-infinite-virtual-row.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PblNgridDefaultInfiniteVirtualRowComponent {\n  protected createCell(column: PblColumn) {\n  }\n\n  protected destroyCell(column: PblColumn) {\n  }\n}\n","<pbl-ngrid-row in *pblNgridInfiniteVirtualRowDef=\"let row;\" class=\"pbl-ngrid-infinite-virtual-row\" infiniteRow>\n  ...Loading\n</pbl-ngrid-row>\n","import { Injector, ComponentFactoryResolver, ComponentRef } from '@angular/core';\n\nimport { ON_DESTROY } from '@pebula/ngrid/core';\nimport { PblNgridComponent, PblNgridPluginController } from '@pebula/ngrid';\n\nimport { PblNgridInfiniteVirtualRowRefDirective } from './infinite-virtual-row/directives';\nimport { PblInfiniteScrollDataSource } from './infinite-scroll-data-source/infinite-scroll-datasource';\nimport { INFINITE_SCROLL_DEFFERED_ROW } from './infinite-scroll-data-source/infinite-scroll-deffered-row';\nimport { PblNgridDefaultInfiniteVirtualRowComponent } from './default-infinite-virtual-row/default-infinite-virtual-row.component';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    infiniteScroll?: PblNgridInfiniteScrollPlugin;\n  }\n  interface PblNgridPluginExtensionFactories {\n    infiniteScroll: keyof typeof PblNgridInfiniteScrollPlugin;\n  }\n}\n\nexport const PLUGIN_KEY = 'infiniteScroll' as const;\n\nconst IS_INFINITE_VIRTUAL_ROW = (index: number, rowData: any) => {\n  return rowData === INFINITE_SCROLL_DEFFERED_ROW;\n};\nconst IS_NOT_INFINITE_VIRTUAL_ROW = (index: number, rowData: any) => {\n  return !IS_INFINITE_VIRTUAL_ROW(index, rowData);\n};\n\nexport class PblNgridInfiniteScrollPlugin<T = any> {\n\n  static create(grid: PblNgridComponent, injector: Injector): PblNgridInfiniteScrollPlugin {\n    const pluginCtrl = PblNgridPluginController.find(grid);\n    return new PblNgridInfiniteScrollPlugin(grid, pluginCtrl, injector);\n  }\n\n  private _enabled: boolean = false;\n  private _infiniteVirtualRowDef: PblNgridInfiniteVirtualRowRefDirective<T>;\n  private _infiniteVirtualRowRef: ComponentRef<PblNgridDefaultInfiniteVirtualRowComponent>;\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n\n  constructor(private grid: PblNgridComponent<any>, private pluginCtrl: PblNgridPluginController<T>, private injector: Injector) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    grid.registry.changes\n      .subscribe( changes => {\n        for (const c of changes) {\n          switch (c.type) {\n            case 'infiniteVirtualRow':\n              if (c.op === 'remove') {\n                this.pluginCtrl.extApi.cdkTable.removeRowDef(c.value);\n                this._infiniteVirtualRowDef = undefined;\n              }\n              this.setupInfiniteVirtualRow();\n              break;\n          }\n        }\n      });\n\n    pluginCtrl.events\n      .pipe(ON_DESTROY)\n      .subscribe(() => {\n        if (this._infiniteVirtualRowRef) {\n          this._infiniteVirtualRowRef.destroy();\n        }\n        this._removePlugin(this.grid);\n      });\n\n    pluginCtrl.events.subscribe( event => {\n      if (event.kind === 'onDataSource') {\n        const prevState = this._enabled;\n        this._enabled = event.curr instanceof PblInfiniteScrollDataSource;\n\n        if (this._enabled !== prevState) {\n          pluginCtrl.onInit().subscribe( () => this.updateTable() );\n        }\n      }\n    });\n  }\n\n  private setupInfiniteVirtualRow(): void {\n    const grid = this.grid;\n    const cdkTable = this.pluginCtrl.extApi.cdkTable;\n    if (this._infiniteVirtualRowDef) {\n      cdkTable.removeRowDef(this._infiniteVirtualRowDef);\n      this._infiniteVirtualRowDef = undefined;\n    }\n    if (this._enabled) {\n      let infiniteVirtualRow = grid.registry.getSingle('infiniteVirtualRow');\n      if (infiniteVirtualRow) {\n        this._infiniteVirtualRowDef = infiniteVirtualRow = infiniteVirtualRow.clone();\n        Object.defineProperty(infiniteVirtualRow, 'when', { enumerable: true,  get: () => IS_INFINITE_VIRTUAL_ROW });\n      } else if (!this._infiniteVirtualRowRef) {\n        // TODO: move to module? set in root registry? put elsewhere to avoid grid sync (see event of registry change)...\n        this._infiniteVirtualRowRef = this.injector.get(ComponentFactoryResolver)\n          .resolveComponentFactory(PblNgridDefaultInfiniteVirtualRowComponent)\n          .create(this.injector);\n        this._infiniteVirtualRowRef.changeDetectorRef.detectChanges();\n        return;\n      }\n    }\n    this.resetTableRowDefs();\n  }\n\n  private resetTableRowDefs(): void {\n    if (this._infiniteVirtualRowDef) {\n      this._enabled === false\n        ? this.pluginCtrl.extApi.cdkTable.removeRowDef(this._infiniteVirtualRowDef)\n        : this.pluginCtrl.extApi.cdkTable.addRowDef(this._infiniteVirtualRowDef)\n      ;\n    }\n  }\n\n  /**\n   * Update the grid with detail row infor.\n   * Instead of calling for a change detection cycle we can assign the new predicates directly to the pblNgridRowDef instances.\n   */\n  private updateTable(): void {\n    this.grid._tableRowDef.when = !!this._enabled ? IS_NOT_INFINITE_VIRTUAL_ROW : undefined;\n    this.setupInfiniteVirtualRow();\n    // Once we changed the `when` predicate on the `CdkRowDef` we must:\n    //   1. Update the row cache (property `rowDefs`) to reflect the new change\n    this.pluginCtrl.extApi.cdkTable.updateRowDefCache();\n\n    //   2. re-render all rows.\n    // The logic for re-rendering all rows is handled in `CdkTable._forceRenderDataRows()` which is a private method.\n    // This is a workaround, assigning to `multiTemplateDataRows` will invoke the setter which\n    // also calls `CdkTable._forceRenderDataRows()`\n    // TODO: This is risky, the setter logic might change.\n    // for example, if material will check for change in `multiTemplateDataRows` setter from previous value...\n    this.pluginCtrl.extApi.cdkTable.multiTemplateDataRows = !!this._enabled;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridModule, ngridPlugin, PblNgridPluginController } from '@pebula/ngrid';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport './infinite-scroll-plugin'; // to make sure d.ts stay in published lib and so agumentation kicks in\nimport { PblNgridInfiniteScrollPlugin, PLUGIN_KEY } from './infinite-scroll-plugin';\nimport { PblNgridInfiniteVirtualRowRefDirective } from './infinite-virtual-row/directives';\nimport { PblNgridDefaultInfiniteVirtualRowComponent } from './default-infinite-virtual-row/default-infinite-virtual-row.component';\nimport { PblNgridInfiniteRowComponent } from './infinite-virtual-row/row';\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ PblNgridInfiniteVirtualRowRefDirective, PblNgridInfiniteRowComponent, PblNgridDefaultInfiniteVirtualRowComponent ],\n  exports: [ PblNgridInfiniteVirtualRowRefDirective, PblNgridInfiniteRowComponent],\n  // TODO(REFACTOR_REF 2): remove when ViewEngine is no longer supported by angular (V12 ???)\n  entryComponents: [ PblNgridDefaultInfiniteVirtualRowComponent ],\n})\nexport class PblNgridInfiniteScrollModule {\n  static readonly NGRID_PLUGIN = ngridPlugin({ id: PLUGIN_KEY, factory: 'create' }, PblNgridInfiniteScrollPlugin);\n\n  constructor() {\n    PblNgridPluginController.onCreatedSafe(\n      PblNgridInfiniteScrollModule,\n      (grid, controller) => {\n        if (controller && controller.hasAncestor(PblNgridInfiniteScrollModule)) {\n          controller.createPlugin(PLUGIN_KEY);\n        }\n      },\n    );\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["take","PblDataSource","debounceTime","PblDataSourceAdapter","Subject","Observable","of","isObservable","from","tap","BehaviorSubject","finalize","filter","map","PblDataSourceBaseFactory","PblNgridRowDef","Directive","PblNgridRowComponent","CdkRow","Component","ChangeDetectionStrategy","ViewEncapsulation","ON_DESTROY","PblNgridPluginController","ComponentFactoryResolver","ngridPlugin","CommonModule","CdkTableModule","PblNgridModule","PblNgridTargetEventsModule","NgModule"],"mappings":"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"}