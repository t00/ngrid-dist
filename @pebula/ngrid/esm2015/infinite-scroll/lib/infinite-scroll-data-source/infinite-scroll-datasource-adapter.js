import { PblDataSourceAdapter } from '@pebula/ngrid';
import { debounceTime } from 'rxjs/operators';
export class PblInfiniteScrollDataSourceAdapter extends PblDataSourceAdapter {
    constructor(context, config, onVirtualLoading) {
        super(e => context.onTrigger(e), config);
        this.context = context;
        this.virtualRowsLoading = onVirtualLoading.pipe(debounceTime(24));
    }
    dispose() {
        this.context.dispose();
        super.dispose();
    }
    emitOnSourceChanging(event) {
        if (event.isInitial) {
            super.emitOnSourceChanging(event);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5maW5pdGUtc2Nyb2xsLWRhdGFzb3VyY2UtYWRhcHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmdyaWQvaW5maW5pdGUtc2Nyb2xsL3NyYy9saWIvaW5maW5pdGUtc2Nyb2xsLWRhdGEtc291cmNlL2luZmluaXRlLXNjcm9sbC1kYXRhc291cmNlLWFkYXB0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLG9CQUFvQixFQUFxQyxNQUFNLGVBQWUsQ0FBQztBQUd4RixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFOUMsTUFBTSxPQUFPLGtDQUF5RCxTQUFRLG9CQUEyRTtJQUl2SixZQUFvQixPQUE2QyxFQUNyRCxNQUFpRixFQUNqRixnQkFBcUM7UUFDL0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUh2QixZQUFPLEdBQVAsT0FBTyxDQUFzQztRQUkvRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVTLG9CQUFvQixDQUFDLEtBQWtEO1FBQy9FLElBQUksS0FBSyxDQUFDLFNBQVMsRUFBRTtZQUNuQixLQUFLLENBQUMsb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDbkM7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBQYmxEYXRhU291cmNlQWRhcHRlciwgUGJsRGF0YVNvdXJjZUNvbmZpZ3VyYWJsZVRyaWdnZXJzIH0gZnJvbSAnQHBlYnVsYS9uZ3JpZCc7XG5pbXBvcnQgeyBQYmxJbmZpbml0ZVNjcm9sbFRyaWdnZXJDaGFuZ2VkRXZlbnQgfSBmcm9tICcuL2luZmluaXRlLXNjcm9sbC1kYXRhc291cmNlLnR5cGVzJztcbmltcG9ydCB7IFBibEluZmluaXRlU2Nyb2xsRFNDb250ZXh0IH0gZnJvbSAnLi9pbmZpbml0ZS1zY3JvbGwtZGF0YXNvdXJjZS5jb250ZXh0JztcbmltcG9ydCB7IGRlYm91bmNlVGltZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGNsYXNzIFBibEluZmluaXRlU2Nyb2xsRGF0YVNvdXJjZUFkYXB0ZXI8VCA9IGFueSwgVERhdGEgPSBhbnk+IGV4dGVuZHMgUGJsRGF0YVNvdXJjZUFkYXB0ZXI8VCwgVERhdGEsIFBibEluZmluaXRlU2Nyb2xsVHJpZ2dlckNoYW5nZWRFdmVudDxURGF0YT4+IHtcblxuICByZWFkb25seSB2aXJ0dWFsUm93c0xvYWRpbmc6IE9ic2VydmFibGU8Ym9vbGVhbj47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb250ZXh0OiBQYmxJbmZpbml0ZVNjcm9sbERTQ29udGV4dDxULCBURGF0YT4sXG4gICAgICAgICAgICAgIGNvbmZpZzogZmFsc2UgfCBQYXJ0aWFsPFJlY29yZDxrZXlvZiBQYmxEYXRhU291cmNlQ29uZmlndXJhYmxlVHJpZ2dlcnMsIGJvb2xlYW4+PixcbiAgICAgICAgICAgICAgb25WaXJ0dWFsTG9hZGluZzogT2JzZXJ2YWJsZTxib29sZWFuPikge1xuICAgIHN1cGVyKGUgPT4gY29udGV4dC5vblRyaWdnZXIoZSksIGNvbmZpZyk7XG4gICAgdGhpcy52aXJ0dWFsUm93c0xvYWRpbmcgPSBvblZpcnR1YWxMb2FkaW5nLnBpcGUoZGVib3VuY2VUaW1lKDI0KSk7XG4gIH1cblxuICBkaXNwb3NlKCkge1xuICAgIHRoaXMuY29udGV4dC5kaXNwb3NlKCk7XG4gICAgc3VwZXIuZGlzcG9zZSgpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGVtaXRPblNvdXJjZUNoYW5naW5nKGV2ZW50OiBQYmxJbmZpbml0ZVNjcm9sbFRyaWdnZXJDaGFuZ2VkRXZlbnQ8VERhdGE+KSB7XG4gICAgaWYgKGV2ZW50LmlzSW5pdGlhbCkge1xuICAgICAgc3VwZXIuZW1pdE9uU291cmNlQ2hhbmdpbmcoZXZlbnQpO1xuICAgIH1cbiAgfVxufVxuIl19