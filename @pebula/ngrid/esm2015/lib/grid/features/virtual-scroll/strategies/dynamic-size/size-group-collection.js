export class SizeGroupCollection {
    constructor() {
        this._groups = [];
    }
    get collection() { return this._groups; }
    get length() { return this._groups.length; }
    set(group) {
        const groupIndex = group.groupIndex;
        const index = this.findGroupIndexIndex(groupIndex, true);
        if (index === -1) {
            this._groups.push(group);
        }
        else {
            const closestGroup = this._groups[index];
            if (closestGroup.groupIndex === groupIndex) {
                this._groups[groupIndex] = group;
            }
            else if (closestGroup.groupIndex < groupIndex) {
                this._groups.splice(index + 1, 0, group);
            }
            else {
                this._groups.splice(index, 0, group);
            }
        }
    }
    remove(groupIndex) {
        const index = this.findGroupIndexIndex(groupIndex);
        if (index > -1) {
            this._groups.splice(index, 1);
            return true;
        }
        return false;
    }
    get(groupIndex) {
        return this._groups[this.findGroupIndexIndex(groupIndex)];
    }
    has(groupIndex) {
        return this.findGroupIndexIndex(groupIndex) > -1;
    }
    clear() {
        this._groups = [];
    }
    findGroupIndexIndex(groupIndex, matchClosest) {
        let start = 0;
        let end = this._groups.length - 1;
        let mid = -1;
        while (start <= end) {
            mid = Math.floor((start + end) / 2);
            if (this._groups[mid].groupIndex === groupIndex) {
                return mid;
            }
            else if (this._groups[mid].groupIndex < groupIndex) {
                start = mid + 1;
            }
            else {
                end = mid - 1;
            }
        }
        return matchClosest ? mid : -1;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l6ZS1ncm91cC1jb2xsZWN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3JpZC9zcmMvbGliL2dyaWQvZmVhdHVyZXMvdmlydHVhbC1zY3JvbGwvc3RyYXRlZ2llcy9keW5hbWljLXNpemUvc2l6ZS1ncm91cC1jb2xsZWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxtQkFBbUI7SUFBaEM7UUFNVSxZQUFPLEdBQWdCLEVBQUUsQ0FBQztJQTJEcEMsQ0FBQztJQS9EQyxJQUFJLFVBQVUsS0FBSyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBRXpDLElBQUksTUFBTSxLQUFLLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBSTVDLEdBQUcsQ0FBQyxLQUFnQjtRQUNsQixNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1FBQ3BDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDekQsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDMUI7YUFBTTtZQUNMLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDekMsSUFBSSxZQUFZLENBQUMsVUFBVSxLQUFLLFVBQVUsRUFBRTtnQkFDMUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUM7YUFDbEM7aUJBQU0sSUFBSSxZQUFZLENBQUMsVUFBVSxHQUFHLFVBQVUsRUFBRTtnQkFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDMUM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQzthQUN0QztTQUNGO0lBQ0gsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFrQjtRQUN2QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbkQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDZCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDOUIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELEdBQUcsQ0FBQyxVQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELEdBQUcsQ0FBQyxVQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFUyxtQkFBbUIsQ0FBQyxVQUFrQixFQUFFLFlBQXNCO1FBQ3RFLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUNsQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUViLE9BQU8sS0FBSyxJQUFJLEdBQUcsRUFBQztZQUNsQixHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUVwQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBVSxLQUFLLFVBQVUsRUFBRTtnQkFDL0MsT0FBTyxHQUFHLENBQUM7YUFDWjtpQkFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsVUFBVSxHQUFHLFVBQVUsRUFBRTtnQkFDcEQsS0FBSyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7YUFDakI7aUJBQU07Z0JBQ0wsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7YUFDZjtTQUNGO1FBRUQsT0FBTyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2l6ZUdyb3VwIH0gZnJvbSAnLi9zaXplLWdyb3VwJztcblxuZXhwb3J0IGNsYXNzIFNpemVHcm91cENvbGxlY3Rpb24ge1xuXG4gIGdldCBjb2xsZWN0aW9uKCkgeyByZXR1cm4gdGhpcy5fZ3JvdXBzOyB9XG5cbiAgZ2V0IGxlbmd0aCgpIHsgcmV0dXJuIHRoaXMuX2dyb3Vwcy5sZW5ndGg7IH1cblxuICBwcml2YXRlIF9ncm91cHM6IFNpemVHcm91cFtdID0gW107XG5cbiAgc2V0KGdyb3VwOiBTaXplR3JvdXApIHtcbiAgICBjb25zdCBncm91cEluZGV4ID0gZ3JvdXAuZ3JvdXBJbmRleDtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuZmluZEdyb3VwSW5kZXhJbmRleChncm91cEluZGV4LCB0cnVlKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICB0aGlzLl9ncm91cHMucHVzaChncm91cCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGNsb3Nlc3RHcm91cCA9IHRoaXMuX2dyb3Vwc1tpbmRleF07XG4gICAgICBpZiAoY2xvc2VzdEdyb3VwLmdyb3VwSW5kZXggPT09IGdyb3VwSW5kZXgpIHtcbiAgICAgICAgdGhpcy5fZ3JvdXBzW2dyb3VwSW5kZXhdID0gZ3JvdXA7XG4gICAgICB9IGVsc2UgaWYgKGNsb3Nlc3RHcm91cC5ncm91cEluZGV4IDwgZ3JvdXBJbmRleCkge1xuICAgICAgICB0aGlzLl9ncm91cHMuc3BsaWNlKGluZGV4ICsgMSwgMCwgZ3JvdXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fZ3JvdXBzLnNwbGljZShpbmRleCwgMCwgZ3JvdXApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJlbW92ZShncm91cEluZGV4OiBudW1iZXIpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuZmluZEdyb3VwSW5kZXhJbmRleChncm91cEluZGV4KTtcbiAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgdGhpcy5fZ3JvdXBzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZ2V0KGdyb3VwSW5kZXg6IG51bWJlcik6IFNpemVHcm91cCB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuX2dyb3Vwc1t0aGlzLmZpbmRHcm91cEluZGV4SW5kZXgoZ3JvdXBJbmRleCldO1xuICB9XG5cbiAgaGFzKGdyb3VwSW5kZXg6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLmZpbmRHcm91cEluZGV4SW5kZXgoZ3JvdXBJbmRleCkgPiAtMTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuX2dyb3VwcyA9IFtdO1xuICB9XG5cbiAgcHJvdGVjdGVkIGZpbmRHcm91cEluZGV4SW5kZXgoZ3JvdXBJbmRleDogbnVtYmVyLCBtYXRjaENsb3Nlc3Q/OiBib29sZWFuKSB7XG4gICAgbGV0IHN0YXJ0ID0gMDtcbiAgICBsZXQgZW5kID0gdGhpcy5fZ3JvdXBzLmxlbmd0aCAtIDE7XG4gICAgbGV0IG1pZCA9IC0xO1xuXG4gICAgd2hpbGUgKHN0YXJ0IDw9IGVuZCl7XG4gICAgICBtaWQgPSBNYXRoLmZsb29yKChzdGFydCArIGVuZCkgLyAyKTtcblxuICAgICAgaWYgKHRoaXMuX2dyb3Vwc1ttaWRdLmdyb3VwSW5kZXggPT09IGdyb3VwSW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIG1pZDtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5fZ3JvdXBzW21pZF0uZ3JvdXBJbmRleCA8IGdyb3VwSW5kZXgpIHtcbiAgICAgICAgc3RhcnQgPSBtaWQgKyAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZW5kID0gbWlkIC0gMTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2hDbG9zZXN0ID8gbWlkIDogLTE7XG4gIH1cbn1cbiJdfQ==