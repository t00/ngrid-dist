/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { isPblColumn, isPblMetaColumn, isPblColumnGroup } from './lib/grid/index';
export { PblPagingPaginator, PblTokenPaginator } from './lib/paginator/index';
export { PblDataSourceAdapter, PblDataSource, applySort, PblDataSourceFactory, createDS, } from './lib/data-source/index';
export { PEB_NGRID_CONFIG, PblNgridConfigService, PblColumn, PblMetaColumn, PblColumnGroup, PblColumnFactory, columnFactory, isPblMetaColumn, isPblColumnGroup, isPblColumn, PBL_NGRID_ROW_TEMPLATE, PblNgridRowComponent, PblNgridComponent, PblNgridRegistryService, ColumnApi, PblNgridSingleTemplateRegistry, PblNgridMultiTemplateRegistry, PblNgridMultiComponentRegistry, PblNgridDataHeaderExtensionContext, PblNgridCellDefDirective, PblNgridHeaderCellDefDirective, PblNgridFooterCellDefDirective, PblNgridCellStyling, PblNgridNoDataRefDirective, NoVirtualScrollStrategy, TableAutoSizeVirtualScrollStrategy, PblRowContext, } from './lib/grid/index';
export { EXT_API_TOKEN } from './lib/ext/grid-ext-api';
export { NgridPlugin } from './lib/ext/grid-plugin';
export { PblNgridPluginController } from './lib/ext/plugin-control';
/** @type {?} */
export const utils = {
    isPblColumn,
    isPblMetaColumn,
    isPblColumnGroup,
};
export { PblNgridModule, provideCommon } from './lib/ngrid.module';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcGVidWxhL25ncmlkLyIsInNvdXJjZXMiOlsiaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFbEYsT0FBTyxFQUdMLGtCQUFrQixFQUNsQixpQkFBaUIsRUFFbEIsTUFBTSx1QkFBdUIsQ0FBQztBQUUvQixPQUFPLEVBS0wsb0JBQW9CLEVBQ3BCLGFBQWEsRUFDcUQsU0FBUyxFQUMzRSxvQkFBb0IsRUFBRSxRQUFRLEdBRy9CLE1BQU0seUJBQXlCLENBQUM7QUFFakMsT0FBTyxFQUNMLGdCQUFnQixFQUFrQixxQkFBcUIsRUFFdkQsU0FBUyxFQUFFLGFBQWEsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQVUsYUFBYSxFQUNqRixlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUU5QyxzQkFBc0IsRUFBRSxvQkFBb0IsRUFFNUMsaUJBQWlCLEVBQ2pCLHVCQUF1QixFQUNELFNBQVMsRUFFL0IsOEJBQThCLEVBQUUsNkJBQTZCLEVBQUUsOEJBQThCLEVBQzdELGtDQUFrQyxFQUNsRSx3QkFBd0IsRUFDeEIsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5QixtQkFBbUIsRUFDbkIsMEJBQTBCLEVBUTFCLHVCQUF1QixFQUFFLGtDQUFrQyxFQUdPLGFBQWEsR0FFaEYsTUFBTSxrQkFBa0IsQ0FBQztBQVkxQixPQUFPLEVBQUUsYUFBYSxFQUF3QixNQUFNLHdCQUF3QixDQUFDO0FBQzdFLE9BQU8sRUFBRSxXQUFXLEVBQXVCLE1BQU0sdUJBQXVCLENBQUM7QUFDekUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7O0FBRXBFLE1BQU0sT0FBTyxLQUFLLEdBQUc7SUFDbkIsV0FBVztJQUNYLGVBQWU7SUFDZixnQkFBZ0I7Q0FDakI7QUFFRCxPQUFPLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQYmxDb2x1bW4sIGlzUGJsTWV0YUNvbHVtbiwgaXNQYmxDb2x1bW5Hcm91cCB9IGZyb20gJy4vbGliL2dyaWQvaW5kZXgnO1xuXG5leHBvcnQge1xuICBQYmxOZ3JpZFBhZ2luYXRvcktpbmQsXG4gIFBibFBhZ2luYXRvcixcbiAgUGJsUGFnaW5nUGFnaW5hdG9yLFxuICBQYmxUb2tlblBhZ2luYXRvcixcbiAgUGJsUGFnaW5hdG9yQ2hhbmdlRXZlbnRcbn0gZnJvbSAnLi9saWIvcGFnaW5hdG9yL2luZGV4JztcblxuZXhwb3J0IHtcbiAgUGJsRGF0YVNvdXJjZUNvbmZpZ3VyYWJsZVRyaWdnZXJzLFxuICBQYmxEYXRhU291cmNlVHJpZ2dlcnMsXG4gIFBibERhdGFTb3VyY2VUcmlnZ2VyQ2hhbmdlLFxuICBQYmxEYXRhU291cmNlVHJpZ2dlckNoYW5nZWRFdmVudCxcbiAgUGJsRGF0YVNvdXJjZUFkYXB0ZXIsXG4gIFBibERhdGFTb3VyY2UsIFBibERhdGFTb3VyY2VPcHRpb25zLFxuICBQYmxOZ3JpZFNvcnRJbnN0cnVjdGlvbnMsIFBibE5ncmlkU29ydERlZmluaXRpb24sIFBibE5ncmlkU29ydGVyLCBhcHBseVNvcnQsIFBibE5ncmlkU29ydE9yZGVyLFxuICBQYmxEYXRhU291cmNlRmFjdG9yeSwgY3JlYXRlRFMsIERhdGFTb3VyY2VPZixcbiAgRGF0YVNvdXJjZUZpbHRlclRva2VuLCBEYXRhU291cmNlUHJlZGljYXRlLCBEYXRhU291cmNlQ29sdW1uUHJlZGljYXRlLFxuICBQYmxEYXRhU291cmNlQWRhcHRlclByb2Nlc3NlZFJlc3VsdCxcbn0gZnJvbSAnLi9saWIvZGF0YS1zb3VyY2UvaW5kZXgnO1xuXG5leHBvcnQge1xuICBQRUJfTkdSSURfQ09ORklHLCBQYmxOZ3JpZENvbmZpZywgUGJsTmdyaWRDb25maWdTZXJ2aWNlLFxuXG4gIFBibENvbHVtbiwgUGJsTWV0YUNvbHVtbiwgUGJsQ29sdW1uR3JvdXAsIFBibENvbHVtbkZhY3RvcnksIENPTFVNTiwgY29sdW1uRmFjdG9yeSxcbiAgaXNQYmxNZXRhQ29sdW1uLCBpc1BibENvbHVtbkdyb3VwLCBpc1BibENvbHVtbixcblxuICBQQkxfTkdSSURfUk9XX1RFTVBMQVRFLCBQYmxOZ3JpZFJvd0NvbXBvbmVudCxcblxuICBQYmxOZ3JpZENvbXBvbmVudCxcbiAgUGJsTmdyaWRSZWdpc3RyeVNlcnZpY2UsXG4gIEF1dG9TaXplVG9GaXRPcHRpb25zLCBDb2x1bW5BcGksXG5cbiAgUGJsTmdyaWRTaW5nbGVUZW1wbGF0ZVJlZ2lzdHJ5LCBQYmxOZ3JpZE11bHRpVGVtcGxhdGVSZWdpc3RyeSwgUGJsTmdyaWRNdWx0aUNvbXBvbmVudFJlZ2lzdHJ5LFxuICBQYmxOZ3JpZERhdGFIZWFkZXJFeHRlbnNpb25SZWYsIFBibE5ncmlkRGF0YUhlYWRlckV4dGVuc2lvbkNvbnRleHQsXG4gIFBibE5ncmlkQ2VsbERlZkRpcmVjdGl2ZSxcbiAgUGJsTmdyaWRIZWFkZXJDZWxsRGVmRGlyZWN0aXZlLFxuICBQYmxOZ3JpZEZvb3RlckNlbGxEZWZEaXJlY3RpdmUsXG4gIFBibE5ncmlkQ2VsbFN0eWxpbmcsXG4gIFBibE5ncmlkTm9EYXRhUmVmRGlyZWN0aXZlLFxuICBQYmxDb2x1bW5UeXBlRGVmaW5pdGlvbiwgUGJsQ29sdW1uVHlwZURlZmluaXRpb25EYXRhTWFwLFxuICBQYmxDb2x1bW5EZWZpbml0aW9uLFxuICBQYmxNZXRhQ29sdW1uRGVmaW5pdGlvbixcbiAgUGJsQ29sdW1uR3JvdXBEZWZpbml0aW9uLFxuICBQYmxDb2x1bW5TZXQsIFBibE1ldGFSb3dEZWZpbml0aW9ucyxcbiAgUGJsTmdyaWRDb2x1bW5TZXQsIFBibE5ncmlkQ29sdW1uRGVmaW5pdGlvblNldCxcblxuICBOb1ZpcnR1YWxTY3JvbGxTdHJhdGVneSwgVGFibGVBdXRvU2l6ZVZpcnR1YWxTY3JvbGxTdHJhdGVneSxcblxuICBQYmxOZ3JpZEZvY3VzQ2hhbmdlZEV2ZW50LCBQYmxOZ3JpZFNlbGVjdGlvbkNoYW5nZWRFdmVudCxcbiAgUGJsTmdyaWRNZXRhQ2VsbENvbnRleHQsIFBibE5ncmlkQ2VsbENvbnRleHQsIFBibE5ncmlkUm93Q29udGV4dCwgUGJsUm93Q29udGV4dCwgUGJsTmdyaWRDb250ZXh0QXBpLFxuICBDZWxsUmVmZXJlbmNlLCBHcmlkRGF0YVBvaW50LFxufSBmcm9tICcuL2xpYi9ncmlkL2luZGV4JztcblxuZXhwb3J0IHtcbiAgUGJsTmdyaWRQbHVnaW4sXG4gIFBibE5ncmlkUGx1Z2luRXh0ZW5zaW9uLFxuICBQYmxOZ3JpZE9uSW5pdEV2ZW50LFxuICBQYmxOZ3JpZE9uUmVzaXplUm93RXZlbnQsXG4gIFBibE5ncmlkT25JbnZhbGlkYXRlSGVhZGVyc0V2ZW50LFxuICBQYmxOZ3JpZE9uRGF0YVNvdXJjZUV2ZW50LFxuICBQYmxOZ3JpZEV2ZW50cyxcbiB9IGZyb20gJy4vbGliL2V4dC90eXBlcyc7XG5cbmV4cG9ydCB7IEVYVF9BUElfVE9LRU4sIFBibE5ncmlkRXh0ZW5zaW9uQXBpIH0gZnJvbSAnLi9saWIvZXh0L2dyaWQtZXh0LWFwaSc7XG5leHBvcnQgeyBOZ3JpZFBsdWdpbiwgTmdyaWRQbHVnaW5NZXRhZGF0YSB9IGZyb20gJy4vbGliL2V4dC9ncmlkLXBsdWdpbic7XG5leHBvcnQgeyBQYmxOZ3JpZFBsdWdpbkNvbnRyb2xsZXIgfSBmcm9tICcuL2xpYi9leHQvcGx1Z2luLWNvbnRyb2wnO1xuXG5leHBvcnQgY29uc3QgdXRpbHMgPSB7XG4gIGlzUGJsQ29sdW1uLFxuICBpc1BibE1ldGFDb2x1bW4sXG4gIGlzUGJsQ29sdW1uR3JvdXAsXG59O1xuXG5leHBvcnQgeyBQYmxOZ3JpZE1vZHVsZSwgcHJvdmlkZUNvbW1vbiB9IGZyb20gJy4vbGliL25ncmlkLm1vZHVsZSc7XG4iXX0=