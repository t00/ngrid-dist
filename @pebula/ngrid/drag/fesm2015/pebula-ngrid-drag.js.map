{"version":3,"file":"pebula-ngrid-drag.js","sources":["ng:/@pebula/ngrid/drag/lib/drag-and-drop/core/drop-list-ref.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/core/drag-ref.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/core/drag-drop.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/core/lazy-drag-drop.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/row/row-reorder-plugin.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/column/column-reorder-plugin.ts","ng:/@pebula/ngrid/drag/lib/column-resize/cdk-encapsulated-code.ts","ng:/@pebula/ngrid/drag/lib/column-resize/column-resize.component.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/column/cell-dragger-ref.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/column/extend-grid.ts","ng:/@pebula/ngrid/drag/lib/drag-and-drop/column/aggregation-column.ts","ng:/@pebula/ngrid/drag/lib/column-resize/cell-resizer-ref.ts","ng:/@pebula/ngrid/drag/lib/column-resize/extend-grid.ts","ng:/@pebula/ngrid/drag/lib/default-settings.component.ts","ng:/@pebula/ngrid/drag/lib/table-drag.module.ts"],"names":["_uniqueIdCounter"],"mappings":"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","sourcesContent":["import { Subject } from 'rxjs';\nimport { ElementRef } from '@angular/core';\nimport { DropListRef } from '@angular/cdk/drag-drop';\nimport { coerceElement } from '@angular/cdk/coercion';\n\nexport class PblDropListRef<T = any> extends DropListRef<T> {\n  /** Emits right before dragging has started. */\n  beforeExit = new Subject<{ item: import('./drag-ref').PblDragRef<T> }>();\n\n  withElement(element: ElementRef<HTMLElement> | HTMLElement): this {\n    // TODO: Workaround, see if we can push this through https://github.com/angular/material2/issues/15086\n    (this as { -readonly [P in keyof PblDropListRef]: PblDropListRef[P] }).element = coerceElement(element);\n    return this;\n  }\n\n  dispose(): void {\n    this.beforeExit.complete();\n    super.dispose();\n  }\n}\n","import { ElementRef, EventEmitter } from '@angular/core';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { DragRef } from '@angular/cdk/drag-drop';\n\nimport { PblDropListRef } from './drop-list-ref';\n\nexport class PblDragRef<T = any> extends DragRef<T> {\n\n  /**\n   * Fires when the root element changes\n   *\n   * > Does not emit on the initial setup.\n   */\n  rootElementChanged = new EventEmitter<{\n    prev: HTMLElement;\n    curr: HTMLElement;\n  }>();\n\n  constructor(...args: ConstructorParameters<typeof DragRef>) {\n    super(...args);\n    this.exited.subscribe( e => {\n      const { container } = e;\n      if (container instanceof PblDropListRef) {\n        container.beforeExit.next({ item: this });\n      }\n    });\n  }\n\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement): this {\n    // the first call to `withRootElement` comes from the base class, before we construct the emitter.\n    // We don't need it anyway...\n    if (this.rootElementChanged) {\n      const element = coerceElement(rootElement);\n      if (this.getRootElement() !== element) {\n        this.rootElementChanged.next({ prev: this.getRootElement(), curr: element })\n      }\n    }\n    return super.withRootElement(rootElement);\n  }\n\n  dispose(): void {\n    this.rootElementChanged.complete();\n    super.dispose();\n  }\n}\n","import { Injectable, Inject, NgZone, ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler} from '@angular/cdk/scrolling';\nimport { DragRef, DragRefConfig, DropListRef, DragDropRegistry } from '@angular/cdk/drag-drop';\n\nimport { PblDragRef } from './drag-ref'\nimport { PblDropListRef } from './drop-list-ref';\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\n@Injectable({providedIn: 'root'})\nexport class PblDragDrop {\n  constructor(@Inject(DOCUMENT) private _document: any,\n              private _ngZone: NgZone,\n              private _viewportRuler: ViewportRuler,\n              private _dragDropRegistry: DragDropRegistry<DragRef, DropListRef>) {}\n\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag<T = any>(element: ElementRef<HTMLElement> | HTMLElement,\n                      config: DragRefConfig = DEFAULT_CONFIG): PblDragRef<T> {\n\n    return new PblDragRef<T>(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n  }\n\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList<T = any>(element: ElementRef<HTMLElement> | HTMLElement): PblDropListRef<T> {\n    return new PblDropListRef<T>(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n  }\n}\n","import { take } from 'rxjs/operators';\nimport { Input, Directive, ElementRef, QueryList, OnDestroy, Optional, AfterViewInit, OnInit } from '@angular/core';\nimport { CdkDropList, CdkDrag, CdkDragHandle, CDK_DROP_LIST, DragDrop } from '@angular/cdk/drag-drop';\nimport { PblDropListRef } from './drop-list-ref';\nimport { PblDragRef } from './drag-ref';\nimport { PblDragDrop } from './drag-drop';\n\n@Directive({\n  selector: '[cdkLazyDropList]',\n  exportAs: 'cdkLazyDropList',\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n    { provide: CDK_DROP_LIST, useClass: CdkLazyDropList },\n  ],\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drop-list',\n    '[id]': 'id',\n    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n  }\n})\nexport class CdkLazyDropList<T = any, DRef = any> extends CdkDropList<T> implements OnInit {\n  get pblDropListRef(): PblDropListRef<DRef> { return this._dropListRef as any; }\n\n  /**\n   * Selector that will be used to determine the direct container element, starting from\n   * the `cdkDropList` element and going down the DOM. Passing an alternate direct container element\n   * is useful when the `cdkDropList` is not the direct parent (i.e. ancestor but not father)\n   * of the draggable elements.\n   */\n  // tslint:disable-next-line:no-input-rename\n  @Input('cdkDropListDirectContainerElement') directContainerElement: string;\n\n  _draggables: QueryList<CdkDrag>;\n\n  /* private */ originalElement: ElementRef<HTMLElement>;\n  /* private */ _draggablesSet = new Set<CdkDrag>();\n\n  ngOnInit(): void {\n    if (this.pblDropListRef instanceof PblDropListRef === false) {\n      throw new Error('Invalid `DropListRef` injection, the ref is not an instance of PblDropListRef')\n    }\n    this._dropListRef.beforeStarted.subscribe( () => this.beforeStarted() );\n  }\n\n  addDrag(drag: CdkDrag): void {\n    this._draggablesSet.add(drag);\n    this._draggables.reset(Array.from(this._draggablesSet.values()));\n    this._draggables.notifyOnChanges(); // TODO: notify with asap schedular and obs$\n  }\n\n  removeDrag(drag: CdkDrag): boolean {\n    const result = this._draggablesSet.delete(drag);\n    if (result) {\n      this._draggables.reset(Array.from(this._draggablesSet.values()));\n      this._draggables.notifyOnChanges(); // TODO: notify with asap schedular and obs$\n    }\n    return result;\n  }\n\n  /* protected */ beforeStarted(): void {\n    // This is a workaround for https://github.com/angular/material2/pull/14153\n    // Working around the missing capability for selecting a container element that is not the drop container host.\n    if (!this.originalElement) {\n      this.originalElement = this.element;\n    }\n    if (this.directContainerElement) {\n      const element = this.originalElement.nativeElement.querySelector(this.directContainerElement) as HTMLElement;\n      this.element = new ElementRef<HTMLElement>(element);\n    } else {\n      this.element = this.originalElement;\n    }\n    this.pblDropListRef.withElement(this.element);\n  }\n}\n\n@Directive({\n  selector: '[cdkLazyDrag]',\n  exportAs: 'cdkLazyDrag',\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drag',\n    '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n  },\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n  ],\n})\nexport class CdkLazyDrag<T = any, Z extends CdkLazyDropList<T> = CdkLazyDropList<T>, DRef = any> extends CdkDrag<T> implements OnInit, AfterViewInit, OnDestroy {\n\n  /**\n   * A class to set when the root element is not the host element. (i.e. when `cdkDragRootElement` is used).\n   */\n  @Input('cdkDragRootElementClass') set rootElementSelectorClass(value: string) { // tslint:disable-line:no-input-rename\n    if (value !== this._rootClass && this._hostNotRoot) {\n      if (this._rootClass) {\n        this.getRootElement().classList.remove(...this._rootClass.split(' '));\n      }\n      if (value) {\n        this.getRootElement().classList.add(...value.split(' '));\n      }\n    }\n    this._rootClass = value;\n  }\n\n  get pblDragRef(): PblDragRef<DRef> { return this._dragRef as any; }\n\n  @Input() get cdkDropList(): Z { return this.dropContainer as Z; }\n  set cdkDropList(value: Z) {\n    // TO SUPPORT `cdkDropList` via string input (ID) we need a reactive registry...\n    if (this.cdkDropList) {\n      this.cdkDropList.removeDrag(this);\n    }\n    this.dropContainer = value;\n    if (value) {\n      this._dragRef._withDropContainer(value._dropListRef);\n      value.addDrag(this);\n    }\n  }\n\n  /* private */ _rootClass: string;\n  /* private */ _hostNotRoot = false;\n\n  ngOnInit(): void {\n    if (this.pblDragRef instanceof PblDragRef === false) {\n      throw new Error('Invalid `DragRef` injection, the ref is not an instance of PblDragRef')\n    }\n    this.pblDragRef.rootElementChanged.subscribe( event => {\n      const rootElementSelectorClass = this._rootClass;\n      const hostNotRoot = this.element.nativeElement !== event.curr;\n\n      if (rootElementSelectorClass) {\n        if (this._hostNotRoot) {\n          event.prev.classList.remove(...rootElementSelectorClass.split(' '));\n        }\n        if (hostNotRoot) {\n          event.curr.classList.add(...rootElementSelectorClass.split(' '));\n        }\n      }\n      this._hostNotRoot = hostNotRoot;\n    });\n  }\n\n  // This is a workaround for https://github.com/angular/material2/pull/14158\n  // Working around the issue of drop container is not the direct parent (father) of a drag item.\n  // The entire ngAfterViewInit() overriding method can be removed if PR accepted.\n  ngAfterViewInit(): void {\n    this.started.subscribe( startedEvent => {\n      if (this.dropContainer) {\n        const element = this.getRootElement();\n        const initialRootElementParent = element.parentNode as HTMLElement;\n        if (!element.nextSibling && initialRootElementParent !== this.dropContainer.element.nativeElement) {\n          this.ended.pipe(take(1)).subscribe( endedEvent => initialRootElementParent.appendChild(element) );\n        }\n      }\n    });\n\n    /* super.ngAfterViewInit(); */\n  }\n\n  ngOnDestroy(): void {\n    if (this.cdkDropList) {\n      this.cdkDropList.removeDrag(this);\n    }\n    /* super.ngOnDestroy(); */\n  }\n}\n\n/** Handle that can be used to drag and CdkDrag instance. */\n@Directive({\n  selector: '[pblDragHandle]',\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drag-handle'\n  },\n  providers: [\n    {\n      provide: CdkDragHandle,\n      useExisting: PblDragHandle\n    }\n  ]\n})\nexport class PblDragHandle extends CdkDragHandle {\n  constructor(public element: ElementRef<HTMLElement>, @Optional() parentDrag?: CdkDrag) { super(element, parentDrag); }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  ViewContainerRef,\n  NgZone,\n  QueryList,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  DragDrop,\n  CdkDropList,\n  CdkDropListGroup,\n  CdkDrag,\n  CDK_DROP_LIST,\n  CDK_DRAG_CONFIG, DragRefConfig, CdkDragDrop, CdkDragStart\n} from '@angular/cdk/drag-drop';\n\nimport { PblNgridComponent, PblNgridPluginController, PblNgridCellContext } from '@pebula/ngrid';\nimport { CdkLazyDropList, CdkLazyDrag } from '../core/lazy-drag-drop';\nimport { PblDropListRef } from '../core/drop-list-ref';\nimport { PblDragRef } from '../core/drag-ref';\nimport { PblDragDrop } from '../core/drag-drop';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    rowReorder?: PblNgridRowReorderPluginDirective;\n  }\n}\n\nexport const ROW_REORDER_PLUGIN_KEY: 'rowReorder' = 'rowReorder';\n\nlet _uniqueIdCounter = 0;\n\n@Directive({\n  selector: 'pbl-ngrid[rowReorder]',\n  exportAs: 'pblNgridRowReorder',\n  inputs: [\n    'directContainerElement:cdkDropListDirectContainerElement'\n  ],\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drop-list',\n    '[id]': 'id',\n    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n    '[class.pbl-row-reorder]': 'rowReorder && !this.grid.ds?.sort.sort?.order && !this.grid.ds?.filter?.filter',\n  },\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n    { provide: CdkDropListGroup, useValue: undefined },\n    { provide: CDK_DROP_LIST, useExisting: PblNgridRowReorderPluginDirective },\n  ],\n})\nexport class PblNgridRowReorderPluginDirective<T = any> extends CdkDropList<T> implements OnDestroy, CdkLazyDropList<T, PblNgridRowReorderPluginDirective<T>> {\n\n  id = `pbl-ngrid-row-reorder-list-${_uniqueIdCounter++}`;\n\n  @Input() get rowReorder(): boolean { return this._rowReorder; };\n  set rowReorder(value: boolean) {\n    value = coerceBooleanProperty(value);\n    this._rowReorder = value;\n  }\n\n  _draggables: QueryList<CdkDrag>;\n\n  private _rowReorder = false;\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n\n  constructor(public grid: PblNgridComponent<T>,\n              pluginCtrl: PblNgridPluginController,\n              element: ElementRef<HTMLElement>,\n              dragDrop: DragDrop,\n              changeDetectorRef: ChangeDetectorRef,\n              @Optional() dir?: Directionality,\n              @Optional() @SkipSelf() group?: CdkDropListGroup<CdkDropList>) {\n    super(element, dragDrop, changeDetectorRef, dir, group);\n    this._removePlugin = pluginCtrl.setPlugin(ROW_REORDER_PLUGIN_KEY, this);\n\n    this.dropped.subscribe( (event: CdkDragDrop<T>) => {\n      const item = event.item as PblNgridRowDragDirective<T>;\n\n      const previousIndex = grid.ds.source.indexOf(item.draggedContext.row);\n      const currentIndex = event.currentIndex + grid.ds.renderStart;\n\n      this.grid.contextApi.clear();\n      this.grid.ds.moveItem(previousIndex, currentIndex, true);\n      this.grid._cdkTable.syncRows('data');\n    });\n  }\n\n  /* CdkLazyDropList start */\n  /**\n   * Selector that will be used to determine the direct container element, starting from\n   * the `cdkDropList` element and going down the DOM. Passing an alternate direct container element\n   * is useful when the `cdkDropList` is not the direct parent (i.e. ancestor but not father)\n   * of the draggable elements.\n   */\n  directContainerElement: string = '.pbl-ngrid-scroll-container'; // we need this to allow auto-scroll\n  get pblDropListRef(): PblDropListRef<any> { return this._dropListRef as any; }\n  originalElement: ElementRef<HTMLElement>;\n  _draggablesSet = new Set<CdkDrag>();\n  ngOnInit(): void { CdkLazyDropList.prototype.ngOnInit.call(this); }\n  addDrag(drag: CdkDrag): void { return CdkLazyDropList.prototype.addDrag.call(this, drag); }\n  removeDrag(drag: CdkDrag): boolean { return CdkLazyDropList.prototype.removeDrag.call(this, drag); }\n  beforeStarted(): void { CdkLazyDropList.prototype.beforeStarted.call(this); }\n  /* CdkLazyDropList end */\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._removePlugin(this.grid);\n  }\n}\n\n@Directive({\n  selector: '[pblNgridRowDrag]',\n  exportAs: 'pblNgridRowDrag',\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drag',\n    '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n  },\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n    { provide: CdkDrag, useExisting: PblNgridRowDragDirective }\n  ]\n})\nexport class PblNgridRowDragDirective<T = any> extends CdkDrag<T> implements CdkLazyDrag<T, PblNgridRowReorderPluginDirective<T>> {\n  rootElementSelector = 'pbl-ngrid-row';\n\n  get context(): Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>> {\n    return this._context;\n  }\n\n  @Input('pblNgridRowDrag') set context(value: Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>>) {\n    this._context = value;\n\n    const pluginCtrl = this.pluginCtrl = value && PblNgridPluginController.find(value.grid);\n    const plugin = pluginCtrl && pluginCtrl.getPlugin(ROW_REORDER_PLUGIN_KEY);\n    this.cdkDropList = plugin || undefined;\n  }\n\n  /**\n   * Reference to the last dragged context.\n   *\n   * This context is not similar to the `context` property.\n   * The `context` property holds the current context which is shared and updated on scroll so if a user start a drag and then scrolled\n   * the context will point to the row in view and not the original cell.\n   */\n  get draggedContext(): Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>> {\n    return this._draggedContext;\n  }\n\n  private _context: Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>>;\n  private _draggedContext: Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>>;\n\n  private pluginCtrl: PblNgridPluginController;\n\n  // CTOR IS REQUIRED OR IT WONT WORK IN AOT\n  // TODO: Try to remove when supporting IVY\n  constructor(element: ElementRef<HTMLElement>,\n              @Inject(CDK_DROP_LIST) @Optional() @SkipSelf() dropContainer: CdkDropList,\n              @Inject(DOCUMENT) _document: any,\n              _ngZone: NgZone,\n              _viewContainerRef: ViewContainerRef,\n              @Inject(CDK_DRAG_CONFIG) config: DragRefConfig,\n              _dir: Directionality,\n              dragDrop: DragDrop,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(\n      element,\n      dropContainer,\n      _document,\n      _ngZone,\n      _viewContainerRef,\n      config,\n      _dir,\n      dragDrop,\n      _changeDetectorRef,\n    );\n\n    this.started.subscribe( (event: CdkDragStart) => {\n      const { col, row, grid, value }  = this._context;\n      this._draggedContext = { col, row, grid, value };\n    });\n\n\n  }\n\n  /* CdkLazyDrag start */\n    /**\n   * A class to set when the root element is not the host element. (i.e. when `cdkDragRootElement` is used).\n   */\n  @Input('cdkDragRootElementClass') set rootElementSelectorClass(value: string) { // tslint:disable-line:no-input-rename\n    if (value !== this._rootClass && this._hostNotRoot) {\n      if (this._rootClass) {\n        this.getRootElement().classList.remove(...this._rootClass.split(' '));\n      }\n      if (value) {\n        this.getRootElement().classList.add(...value.split(' '));\n      }\n    }\n    this._rootClass = value;\n  }\n\n  get pblDragRef(): PblDragRef<any> { return this._dragRef as any; }\n\n  @Input() get cdkDropList(): PblNgridRowReorderPluginDirective<T> { return this.dropContainer as PblNgridRowReorderPluginDirective<T>; }\n  set cdkDropList(value: PblNgridRowReorderPluginDirective<T>) {\n    // TO SUPPORT `cdkDropList` via string input (ID) we need a reactive registry...\n    if (this.cdkDropList) {\n      this.cdkDropList.removeDrag(this);\n    }\n    this.dropContainer = value;\n    if (value) {\n      this._dragRef._withDropContainer(value._dropListRef);\n      value.addDrag(this);\n    }\n  }\n\n  _rootClass: string;\n  _hostNotRoot = false;\n  ngOnInit(): void { CdkLazyDrag.prototype.ngOnInit.call(this); }\n  ngAfterViewInit(): void { CdkLazyDrag.prototype.ngAfterViewInit.call(this); super.ngAfterViewInit(); }\n  ngOnDestroy(): void { CdkLazyDrag.prototype.ngOnDestroy.call(this);  super.ngOnDestroy(); }\n  /* CdkLazyDrag end */\n}\n","// tslint:disable:no-output-rename\nimport { BehaviorSubject } from 'rxjs';\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  SkipSelf,\n  Output,\n  OnDestroy,\n  Optional,\n  OnInit,\n  ViewContainerRef,\n  NgZone,\n  QueryList,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  DragDrop,\n  CdkDrag,\n  CdkDragDrop,\n  CDK_DROP_LIST,\n  DragRef,\n  CdkDropListGroup,\n  CdkDropList,\n  CDK_DRAG_CONFIG,\n  DragRefConfig,\n} from '@angular/cdk/drag-drop';\n\nimport { PblNgridComponent, PblColumn, PblNgridPluginController, PblNgridCellContext } from '@pebula/ngrid';\nimport { PblDragDrop } from '../core/drag-drop';\nimport { CdkLazyDropList, CdkLazyDrag } from '../core/lazy-drag-drop';\nimport { PblDropListRef } from '../core/drop-list-ref';\nimport { PblDragRef } from '../core/drag-ref';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    columnReorder?: PblNgridColumnReorderPluginDirective;\n  }\n}\n\nexport const COL_REORDER_PLUGIN_KEY: 'columnReorder' = 'columnReorder';\n\nlet _uniqueIdCounter = 0;\n\n@Directive({\n  selector: 'pbl-ngrid[columnReorder]',\n  exportAs: 'pblNgridColumnReorder',\n  inputs: [\n    'directContainerElement:cdkDropListDirectContainerElement'\n  ],\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drop-list',\n    '[id]': 'id',\n    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n  },\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n    { provide: CDK_DROP_LIST, useExisting: PblNgridColumnReorderPluginDirective },\n  ],\n})\nexport class PblNgridColumnReorderPluginDirective<T = any> extends CdkDropList<T> implements OnInit, OnDestroy, CdkLazyDropList<T, PblNgridColumnReorderPluginDirective<T>> {\n  id = `pbl-ngrid-column-reorder-list-${_uniqueIdCounter++}`;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  @Input() get columnReorder(): boolean { return this._columnReorder; };\n  set columnReorder(value: boolean) {\n    value = coerceBooleanProperty(value);\n    this._columnReorder = value;\n  }\n\n  /**\n   * When true, will not move the column on drop.\n   * Instead you need to handle the dropped event.\n   */\n  @Input() get manualOverride(): boolean { return this._manualOverride; };\n  set manualOverride(value: boolean) { this._manualOverride = coerceBooleanProperty(value); }\n\n  @Output('cdkDropDragging') dragging: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  _draggables: QueryList<CdkDrag>;\n\n  private _columnReorder = false;\n  private _manualOverride = false;\n  private _removePlugin: (table: PblNgridComponent<any>) => void;\n  private lastSwap: DragRef<PblNgridColumnDragDirective<T>>;\n  private lastSorted: { drag: DragRef<PblNgridColumnDragDirective<T>>; offset: number; clientRect: ClientRect; };\n\n  // Stuff to workaround encapsulation in CdkDropList\n  private get pblGetItemIndexFromPointerPosition(): (item: DragRef<PblNgridColumnDragDirective<T>>, pointerX: number, pointerY: number, delta?: {x: number, y: number}) => number {\n    return (this._dropListRef as any)._getItemIndexFromPointerPosition.bind(this._dropListRef);\n  }\n  private get pblGetPositionCacheItems(): { drag: DragRef<PblNgridColumnDragDirective<T>>; offset: number; clientRect: ClientRect; }[] {\n    return (this._dropListRef as any)._itemPositions;\n  }\n\n  constructor(public table: PblNgridComponent<T>,\n              pluginCtrl: PblNgridPluginController,\n              element: ElementRef<HTMLElement>,\n              dragDrop: DragDrop,\n              changeDetectorRef: ChangeDetectorRef,\n              @Optional() dir?: Directionality,\n              @Optional() @SkipSelf() group?: CdkDropListGroup<CdkDropList>) {\n    super(element, dragDrop, changeDetectorRef, dir, group);\n    this._removePlugin = pluginCtrl.setPlugin(COL_REORDER_PLUGIN_KEY, this);\n\n    this.directContainerElement = '.pbl-ngrid-header-row-main';\n    this.dropped.subscribe( (event: CdkDragDrop<T, any>) => {\n      if (!this.manualOverride) {\n        this.table.columnApi.moveColumn((event.item as PblNgridColumnDragDirective<T>).column, event.currentIndex);\n      }\n    });\n\n    this.dragging.subscribe( isDragging => {\n      const el = element.nativeElement;\n      if (isDragging) {\n        el.classList.add('pbl-ngrid-column-list-dragging');\n      } else {\n        el.classList.remove('pbl-ngrid-column-list-dragging');\n      }\n      this.lastSwap = undefined;\n    });\n\n    this.monkeyPatchDropListRef();\n  }\n\n  /* CdkLazyDropList start */\n  /**\n   * Selector that will be used to determine the direct container element, starting from\n   * the `cdkDropList` element and going down the DOM. Passing an alternate direct container element\n   * is useful when the `cdkDropList` is not the direct parent (i.e. ancestor but not father)\n   * of the draggable elements.\n   */\n  directContainerElement: string;\n  get pblDropListRef(): PblDropListRef<PblNgridColumnReorderPluginDirective<T>> { return this._dropListRef as any; }\n  originalElement: ElementRef<HTMLElement>;\n  _draggablesSet = new Set<CdkDrag>();\n  // ngOnInit(): void { CdkLazyDropList.prototype.ngOnInit.call(this); }\n  addDrag(drag: CdkDrag): void { return CdkLazyDropList.prototype.addDrag.call(this, drag); }\n  removeDrag(drag: CdkDrag): boolean { return CdkLazyDropList.prototype.removeDrag.call(this, drag); }\n  // beforeStarted(): void { CdkLazyDropList.prototype.beforeStarted.call(this); }\n  /* CdkLazyDropList end */\n\n  ngOnInit(): void {\n    CdkLazyDropList.prototype.ngOnInit.call(this); // super.ngOnInit();\n    this.dropped.subscribe( e => this._pblReset() );\n    this.pblDropListRef.beforeExit.subscribe( e => this._pblReset() );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._removePlugin(this.table);\n  }\n\n  /* protected */ beforeStarted(): void {\n    CdkLazyDropList.prototype.beforeStarted.call(this); // super.beforeStarted();\n    this.lastSorted = undefined;\n    this.dragging.next(true);\n  }\n\n  private _pblReset(): void {\n    this.dragging.next(false);\n    const siblings = this.pblGetPositionCacheItems;\n    siblings.forEach((sibling, index) => {\n      for (const c of sibling.drag.data.getCells()) {\n        c.style.transform = ``;\n      }\n    });\n  }\n\n  private monkeyPatchDropListRef(): void {\n    const { _sortItem, enter } = this._dropListRef;\n\n    this.pblDropListRef.enter = (item: Parameters<typeof enter>[0], pointerX: number, pointerY: number): void => {\n      const lastSorted = this.lastSorted\n      this.lastSorted = undefined;\n      if (lastSorted && lastSorted.drag === item) {\n        const isHorizontal = this.orientation === 'horizontal';\n        pointerX = lastSorted.clientRect.left + 1 - (isHorizontal ? lastSorted.offset : 0);\n        pointerY = lastSorted.clientRect.top + 1 - (!isHorizontal ? lastSorted.offset : 0);\n      }\n      enter.call(this._dropListRef, item, pointerX, pointerY);\n    };\n\n    this.pblDropListRef._sortItem = (item: Parameters<typeof enter>[0], pointerX: number, pointerY: number, pointerDelta: {x: number, y: number}): void => {\n      const siblings = this.pblGetPositionCacheItems;\n      this.lastSorted = siblings.find( s => s.drag === item );\n      const newIndex = this.pblGetItemIndexFromPointerPosition(item as DragRef<PblNgridColumnDragDirective<T>>, pointerX, pointerY, pointerDelta);\n      if (newIndex === -1 && siblings.length > 0) {\n        return;\n      }\n      const oldOrder = siblings.slice();\n      const isHorizontal = this.orientation === 'horizontal';\n      const siblingAtNewPosition = siblings[newIndex];\n\n      if (siblingAtNewPosition.drag.data.column.wontBudge) {\n        return;\n      }\n\n      // we now need to find if between current and new position there are items with `wontBudge`\n      const itemAtOriginalPosition = this.lastSwap ? this.lastSwap : item;\n      const currentIndex = siblings.findIndex( currentItem => currentItem.drag === itemAtOriginalPosition );\n      const start = Math.min(newIndex, currentIndex)\n      const itemsDraggedOver = siblings.slice(start, Math.abs(newIndex - currentIndex) + start);\n      for (const dragItem of itemsDraggedOver) {\n        if (dragItem.drag.data.column.wontBudge && dragItem.drag !== item) {\n          return;\n        }\n      }\n\n      // check if we move the item outside of locked group OR into a locked group... both are invalid.\n      if (!item.data.column.checkGroupLockConstraint(siblingAtNewPosition.drag.data.column)) {\n        return;\n      }\n\n      _sortItem.call(this._dropListRef, item, pointerX, pointerY, pointerDelta);\n\n      this.lastSwap = siblingAtNewPosition.drag;\n\n      if (isHorizontal) {\n        siblings.forEach((sibling, index) => {\n          // Don't do anything if the position hasn't changed.\n          if (oldOrder[index] === sibling) {\n            return;\n          }\n\n          for (const c of sibling.drag.data.getCells()) {\n            c.style.transform = `translate3d(${sibling.offset}px, 0, 0)`;\n          }\n        });\n      }\n    };\n  }\n}\n\n@Directive({\n  selector: '[pblNgridColumnDrag]',\n  exportAs: 'pblNgridColumnDrag',\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drag',\n    '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n  },\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n    { provide: CdkDrag, useExisting: PblNgridColumnDragDirective }\n  ]\n})\nexport class PblNgridColumnDragDirective<T = any> extends CdkDrag<T> implements AfterViewInit, CdkLazyDrag<T, PblNgridColumnReorderPluginDirective<T>, PblNgridColumnDragDirective<T>> {\n  rootElementSelector = 'pbl-ngrid-header-cell';\n\n  column: PblColumn;\n\n  @Input('pblNgridColumnDrag') set context(value: Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>>) {\n    this._context = value;\n    this.column = value && value.col;\n    const pluginCtrl = this.pluginCtrl = value && PblNgridPluginController.find(value.grid);\n    const plugin = pluginCtrl && pluginCtrl.getPlugin(COL_REORDER_PLUGIN_KEY);\n    this.cdkDropList = plugin || undefined;\n    this.disabled = this.column && this.column.reorder ? false : true;\n  }\n\n  private _context: Pick<PblNgridCellContext<T>, 'col' | 'grid'> & Partial<Pick<PblNgridCellContext<T>, 'row' | 'value'>>\n  private pluginCtrl: PblNgridPluginController;\n  private cache: HTMLElement[];\n\n  // CTOR IS REQUIRED OR IT WONT WORK IN AOT\n  // TODO: Try to remove when supporting IVY\n  constructor(element: ElementRef<HTMLElement>,\n              @Inject(CDK_DROP_LIST) @Optional() @SkipSelf() dropContainer: CdkDropList,\n              @Inject(DOCUMENT) _document: any,\n              _ngZone: NgZone,\n              _viewContainerRef: ViewContainerRef,\n              @Inject(CDK_DRAG_CONFIG) config: DragRefConfig,\n              _dir: Directionality,\n              dragDrop: DragDrop,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(\n      element,\n      dropContainer,\n      _document,\n      _ngZone,\n      _viewContainerRef,\n      config,\n      _dir,\n      dragDrop,\n      _changeDetectorRef,\n    );\n  }\n\n  /* CdkLazyDrag start */\n  /**\n   * A class to set when the root element is not the host element. (i.e. when `cdkDragRootElement` is used).\n   */\n  @Input('cdkDragRootElementClass') set rootElementSelectorClass(value: string) { // tslint:disable-line:no-input-rename\n    if (value !== this._rootClass && this._hostNotRoot) {\n      if (this._rootClass) {\n        this.getRootElement().classList.remove(...this._rootClass.split(' '));\n      }\n      if (value) {\n        this.getRootElement().classList.add(...value.split(' '));\n      }\n    }\n    this._rootClass = value;\n  }\n\n  get pblDragRef(): PblDragRef<PblNgridColumnDragDirective<T>> { return this._dragRef as any; }\n\n  @Input() get cdkDropList(): PblNgridColumnReorderPluginDirective<T> { return this.dropContainer as PblNgridColumnReorderPluginDirective<T>; }\n  set cdkDropList(value: PblNgridColumnReorderPluginDirective<T>) {\n    // TO SUPPORT `cdkDropList` via string input (ID) we need a reactive registry...\n    if (this.cdkDropList) {\n      this.cdkDropList.removeDrag(this);\n    }\n    this.dropContainer = value;\n    if (value) {\n      this._dragRef._withDropContainer(value._dropListRef);\n      value.addDrag(this);\n    }\n  }\n\n  _rootClass: string;\n  _hostNotRoot = false;\n  ngOnInit(): void { CdkLazyDrag.prototype.ngOnInit.call(this); }\n  // ngAfterViewInit(): void { CdkLazyDrag.prototype.ngAfterViewInit.call(this); super.ngAfterViewInit(); }\n  ngOnDestroy(): void { CdkLazyDrag.prototype.ngOnDestroy.call(this);  super.ngOnDestroy(); }\n  /* CdkLazyDrag end */\n\n  ngAfterViewInit(): void {\n    CdkLazyDrag.prototype.ngAfterViewInit.call(this);\n    super.ngAfterViewInit();\n\n    this._dragRef.beforeStarted.subscribe( () => {\n      const { cdkDropList } = this;\n      if (cdkDropList && cdkDropList.columnReorder && this._context.col.reorder) {\n        // we don't allow a new dragging session before the previous ends.\n        // this sound impossible, but due to animation transitions its actually is.\n        // if the `transitionend` is long enough, a new drag can start...\n        //\n        // the `disabled` state is checked by pointerDown AFTER calling before start so we can cancel the start...\n        if (cdkDropList._dropListRef.isDragging()) {\n          return this.disabled = true;\n        }\n      }\n    });\n    this.started.subscribe( () => this._context.col.columnDef.isDragging = true );\n    this.ended.subscribe( () => this._context.col.columnDef.isDragging = false );\n  }\n\n  getCells(): HTMLElement[] {\n    if (!this.cache) {\n      this.cache = this._context.col.columnDef.queryCellElements('table');\n    }\n    return this.cache;\n  }\n\n  reset(): void {\n    super.reset();\n    if (this.cache) {\n      for (const el of this.cache) {\n        el.style.transform = ``;\n      }\n      this.cache = undefined;\n    }\n  }\n}\n","\n/**\n * Code from angular/material2 repository\n * File: https://github.com/angular/material2/blob/master/src/cdk/drag-drop/drag-styling.ts\n * Commit: https://github.com/angular/material2/blob/9cd3132607b4d5ae242291df41fb02dc7a453da8/src/cdk/drag-drop/drag-styling.ts\n *\n * This code is not public but required for the drag so duplicated here.\n **/\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n// Helper type that ignores `readonly` properties. This is used in\n// `extendStyles` to ignore the readonly properties on CSSStyleDeclaration\n// since we won't be touching those anyway.\ntype Writeable<T> = { -readonly [P in keyof T]-?: T[P] };\n\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n */\ninterface DragCSSStyleDeclaration extends CSSStyleDeclaration {\n  webkitUserDrag: string;\n  MozUserSelect: string; // For some reason the Firefox property is in PascalCase.\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nexport function extendStyles(dest: Writeable<CSSStyleDeclaration>, source: Partial<DragCSSStyleDeclaration>) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      dest[key] = source[key as keyof CSSStyleDeclaration];\n    }\n  }\n  return dest;\n}\n\n\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nexport function toggleNativeDragInteractions(element: HTMLElement, enable: boolean) {\n  const userSelect = enable ? '' : 'none';\n\n  extendStyles(element.style, {\n    touchAction: enable ? '' : 'none',\n    webkitUserDrag: enable ? '' : 'none',\n    webkitTapHighlightColor: enable ? '' : 'transparent',\n    userSelect: userSelect,\n    msUserSelect: userSelect,\n    webkitUserSelect: userSelect,\n    MozUserSelect: userSelect\n  });\n}\n","import { animationFrameScheduler, Subscription } from 'rxjs';\nimport { auditTime, take } from 'rxjs/operators';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  Optional,\n  OnDestroy,\n  NgZone,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { DragRefConfig, DragDropRegistry, CDK_DRAG_CONFIG } from '@angular/cdk/drag-drop';\n\nimport { PblNgridComponent, PblColumn, PblNgridMetaCellContext, isPblColumn } from '@pebula/ngrid';\nimport { toggleNativeDragInteractions } from './cdk-encapsulated-code';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    columnResize?: PblNgridDragResizeComponent;\n  }\n}\n\nexport const COL_RESIZE_PLUGIN_KEY: 'columnResize' = 'columnResize';\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({passive: false});\n\n@Component({\n  selector: 'pbl-ngrid-drag-resize', // tslint:disable-line:component-selector\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'pbl-ngrid-column-resizer',\n    '[style.width.px]': 'grabAreaWidth',\n  },\n  templateUrl: './column-resize.component.html',\n  styleUrls: [ './column-resize.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PblNgridDragResizeComponent implements AfterViewInit, OnDestroy {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input() set context(value: PblNgridMetaCellContext<any>) {\n    if (value) {\n      const { col, grid } = value;\n      if (isPblColumn(col)) {\n        this.column = col;\n        this.grid = grid;\n        return;\n      }\n    }\n    this.column = this.grid = undefined;\n  }\n\n  /**\n   * The area (in pixels) in which the handle can be grabbed and resize the cell.\n   * Default: 6\n   */\n  @Input() grabAreaWidth = 6;\n\n  column: PblColumn;\n  /** @deprecated use grid instead */\n  get table(): PblNgridComponent<any> { return this.grid; }\n  grid: PblNgridComponent<any>;\n\n  _hasStartedDragging: boolean;\n  private _hasMoved: boolean;\n  private _rootElement: HTMLElement;\n  private _pointerMoveSubscription = Subscription.EMPTY;\n  private _pointerUpSubscription = Subscription.EMPTY;\n  private _scrollPosition: {top: number, left: number};\n  private _pickupPositionOnPage: Point;\n  private _initialWidth: number;\n  private _lastWidth: number;\n\n  private _rootElementInitSubscription = Subscription.EMPTY;\n\n  constructor(public element: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              private _viewportRuler: ViewportRuler,\n              private _dragDropRegistry: DragDropRegistry<PblNgridDragResizeComponent, any>,\n              @Inject(CDK_DRAG_CONFIG) private _config: DragRefConfig,\n              @Optional() private _dir: Directionality) {\n    _dragDropRegistry.registerDragItem(this);\n  }\n\n  ngAfterViewInit(): void {\n    // We need to wait for the zone to stabilize, in order for the reference\n    // element to be in the proper place in the DOM. This is mostly relevant\n    // for draggable elements inside portals since they get stamped out in\n    // their original DOM position and then they get transferred to the portal.\n    this._rootElementInitSubscription = this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const rootElement = this._rootElement = this._getRootElement();\n      const cell = rootElement.parentElement;\n      cell.classList.add('pbl-ngrid-column-resize');\n      rootElement.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n      rootElement.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n      toggleNativeDragInteractions(rootElement , false);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._rootElement) {\n      this._rootElement.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n      this._rootElement.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    this._rootElementInitSubscription.unsubscribe();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeSubscriptions();\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDoubleClick(event: MouseEvent): void {\n    this.grid.columnApi.autoSizeColumn(this.column);\n  }\n\n  _pointerDown = (event: MouseEvent | TouchEvent) => {\n    this._initializeDragSequence(this._rootElement, event);\n  }\n\n    /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  private _initializeDragSequence(referenceElement: HTMLElement, event: MouseEvent | TouchEvent) {\n    // Always stop propagation for the event that initializes\n    // the dragging sequence, in order to prevent it from potentially\n    // starting another sequence for a draggable parent somewhere up the DOM tree.\n    event.stopPropagation();\n\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (this._isDragging() || (!this._isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    this._hasStartedDragging = this._hasMoved = false;\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove\n      .pipe(auditTime(0, animationFrameScheduler))\n      .subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n    this._pickupPositionOnPage = this._getPointerPositionOnPage(event);\n    this._dragDropRegistry.startDragging(this, event);\n  }\n\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  private _pointerMove = (event: MouseEvent | TouchEvent) => {\n    const pointerPosition = this._getPointerPositionOnPage(event);\n    const distanceX = pointerPosition.x - this._pickupPositionOnPage.x;\n    const distanceY = pointerPosition.y - this._pickupPositionOnPage.y;\n\n    if (!this._hasStartedDragging) {\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (Math.abs(distanceX) + Math.abs(distanceY) >= this._config.dragStartThreshold) {\n        this._hasStartedDragging = true;\n\n        // It will be a good thing if we turned of the header's resize observer to boost performance\n        // However, because we relay on the total grid minimum width updates to relatively even out the columns it will not work.\n        // Group cells will not cover all of the children, when we enlarge the width of a child in the group.\n        // This is because the max-width of the group is set proportional to the total min-width of the inner grid.\n        // For it to work we need to directly update the width of ALL OF THE GROUPS.\n        // this.column.columnDef.isDragging = true;\n\n        this.column.sizeInfo.updateSize();\n        this._lastWidth = this._initialWidth = this.column.columnDef.netWidth;\n      }\n      return;\n    }\n\n    this._hasMoved = true;\n    event.preventDefault();\n    event.stopPropagation();\n\n    let newWidth = Math.max(0, this._initialWidth + distanceX);\n\n    if (newWidth > this.column.maxWidth) {\n      newWidth = this.column.maxWidth;\n    } else if (distanceX < 0 && newWidth < this.column.minWidth) {\n      newWidth = this.column.minWidth;\n    }\n\n    if (this._lastWidth !== newWidth) {\n      this._lastWidth = newWidth;\n      this.column.updateWidth(`${newWidth}px`);\n      this.grid.resetColumnsWidth();\n      // `this.column.updateWidth` will update the grid width cell only, which will trigger a resize that will update all other cells\n      // `this.grid.resetColumnsWidth()` will re-adjust all other grid width cells, and if their size changes they will trigger the resize event...\n    }\n  }\n\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  private _pointerUp = () => {\n    if (!this._isDragging()) {\n      return;\n    }\n\n    this._removeSubscriptions();\n    this._dragDropRegistry.stopDragging(this);\n\n    if (!this._hasStartedDragging) {\n      return;\n    }\n\n    // this.column.columnDef.isDragging = false;\n    this.grid.columnApi.resizeColumn(this.column, this._lastWidth + 'px');\n  }\n\n  private _getPointerPositionOnPage(event: MouseEvent | TouchEvent): Point {\n    const point = this._isTouchEvent(event) ? event.touches[0] : event;\n\n    return {\n      x: point.pageX - this._scrollPosition.left,\n      y: point.pageY - this._scrollPosition.top\n    };\n  }\n\n  private _isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n    return event.type.startsWith('touch');\n  }\n\n  _isDragging() {\n    return this._dragDropRegistry.isDragging(this);\n  }\n\n  private _getRootElement(): HTMLElement {\n    return this.element.nativeElement;\n  }\n  private _removeSubscriptions() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n  }\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n","import { Directive, TemplateRef } from '@angular/core';\nimport { PblNgridRegistryService, PblNgridMultiTemplateRegistry, PblNgridDataHeaderExtensionRef, PblNgridDataHeaderExtensionContext, PblNgridPluginController } from '@pebula/ngrid';\n\nimport { COL_REORDER_PLUGIN_KEY } from './column-reorder-plugin';\n\n/**\n * Marks the element as the resizer template for cells.\n */\n@Directive({ selector: '[pblNgridCellDraggerRef]' })\nexport class PblNgridCellDraggerRefDirective extends PblNgridMultiTemplateRegistry<PblNgridDataHeaderExtensionContext, 'dataHeaderExtensions'> implements PblNgridDataHeaderExtensionRef {\n  readonly name: 'cellDragger' = 'cellDragger';\n  readonly kind: 'dataHeaderExtensions' = 'dataHeaderExtensions';\n  constructor(tRef: TemplateRef<PblNgridDataHeaderExtensionContext>, registry: PblNgridRegistryService) { super(tRef, registry); }\n\n  shouldRender(context: PblNgridDataHeaderExtensionContext): boolean {\n    // We dont check for `context.col.reorder` because even if a specific column does not \"reorder\" we still need to render the cdk-drag\n    // so the cdk-drop-list will be aware of this item, so if another item does reorder it will be able to move while taking this element into consideration.\n    // I.E: It doesn't reorder but it's part of the playground.\n    //\n    // However, when the plugin does not exists for this table we don't need to render...\n\n    const pluginCtrl = PblNgridPluginController.find(context.grid);\n    return pluginCtrl.hasPlugin(COL_REORDER_PLUGIN_KEY);\n  }\n}\n","import { PblColumn, PblColumnGroup } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/lib/grid/columns/column' {\n  interface PblColumn {\n\n    reorder: boolean;\n    /**\n     * When true, the item can be reordered based on the `reorder` property but\n     * will not move (budge) when other items are reordered.\n     */\n    wontBudge: boolean;\n\n    /**\n     * Checks if the by switching between this column and the provided column the `lockColumns` constraint is triggered.\n     * The lockColumns constraint is set on a group and restrict splitting of groups.\n     * A Column with a locked group will not be allowed to leave the group nor new items are allowed that split the group.\n     *\n     * The process will check both scenarios.\n     */\n    checkGroupLockConstraint(column: PblColumn): boolean;\n  }\n}\n\ndeclare module '@pebula/ngrid/lib/grid/columns/group-column' {\n  interface PblColumnGroup {\n    /**\n     * Lock column in the group, preventing the group from splitting.\n     * Splitting is block actively (column from the group dragged outside) and passively (column outside of the group dragging into the group).\n     */\n    lockColumns?: boolean;\n  }\n}\n\ndeclare module '@pebula/ngrid/lib/grid/columns/types' {\n  interface PblColumnDefinition {\n    reorder?: boolean;\n    /**\n     * When true, the item can be reordered based on the `reorder` property but\n     * will not move (budge) when other items are reordered.\n     */\n    wontBudge?: boolean;\n  }\n  interface PblColumnGroupDefinition {\n    /**\n     * Lock column in the group, preventing the group from splitting.\n     * Splitting is block actively (column from the group dragged outside) and passively (column outside of the group dragging into the group).\n     */\n    lockColumns?: boolean;\n  }\n}\n\nfunction checkGroupLockConstraint(this: PblColumn, column: PblColumn): boolean {\n  for (const id of this.groups) {\n    const g = this.groupStore.find(id);\n    if (g && g.lockColumns && !column.isInGroup(g)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function colReorderExtendGrid(): void {\n  PblColumn.extendProperty('reorder');\n  PblColumn.extendProperty('wontBudge');\n  PblColumnGroup.extendProperty('lockColumns');\n\n  PblColumn.prototype.checkGroupLockConstraint = function (this: PblColumn, column: PblColumn): boolean {\n    return checkGroupLockConstraint.call(this, column) && checkGroupLockConstraint.call(column, this);\n  };\n}\n","// tslint:disable:no-output-rename\n\nimport {\n  Inject,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  QueryList,\n} from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport {\n  DragDrop,\n  CdkDropListGroup,\n  CdkDropList,\n  CdkDrag,\n  CDK_DROP_LIST,\n  DragDropRegistry,\n} from '@angular/cdk/drag-drop';\n\nimport { PblNgridComponent, PblNgridPluginController, PblColumn } from '@pebula/ngrid';\nimport { CdkLazyDropList } from '../core/lazy-drag-drop';\nimport { PblDragRef } from '../core/drag-ref';\nimport { PblDropListRef } from '../core/drop-list-ref';\nimport { PblNgridColumnDragDirective } from './column-reorder-plugin';\nimport { PblDragDrop } from '../core/drag-drop';\n\nlet _uniqueIdCounter = 0;\n\n@Directive({\n  selector: '[pblAggregationContainer]',\n  exportAs: 'pblAggregationContainer',\n  inputs: [\n    'directContainerElement:cdkDropListDirectContainerElement'\n  ],\n  host: { // tslint:disable-line:use-host-property-decorator\n    'class': 'cdk-drop-list',\n    '[id]': 'id',\n  },\n  providers: [\n    { provide: DragDrop, useExisting: PblDragDrop },\n    { provide: CDK_DROP_LIST, useExisting: PblNgridAggregationContainerDirective },\n  ],\n})\nexport class PblNgridAggregationContainerDirective<T = any> extends CdkDropList<T> implements OnDestroy, CdkLazyDropList<T> {\n  id = `pbl-ngrid-column-aggregation-container-${_uniqueIdCounter++}`;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  pending: PblColumn;\n  _draggables: QueryList<CdkDrag>;\n\n  constructor(public grid: PblNgridComponent<T>,\n              pluginCtrl: PblNgridPluginController,\n              element: ElementRef<HTMLElement>,\n              dragDrop: DragDrop,\n              changeDetectorRef: ChangeDetectorRef,\n              @Optional() dir?: Directionality,\n              @Optional() @SkipSelf() group?: CdkDropListGroup<CdkDropList>) {\n    super(element, dragDrop, changeDetectorRef, dir, group);\n    const reorder = pluginCtrl.getPlugin('columnReorder');\n    reorder.connectedTo = this.id;\n\n    this.pblDropListRef.dropped\n      .subscribe( event => {\n        const item = event.item as PblDragRef<PblNgridColumnDragDirective<any>>;\n        this.pending = undefined;\n        this.grid.columnApi.addGroupBy(item.data.column);\n      });\n\n    this.pblDropListRef.entered\n      .subscribe( event => {\n        const item = event.item as PblDragRef<PblNgridColumnDragDirective<any>>;\n        this.pending = item.data.column;\n        item.getPlaceholderElement().style.display = 'none';\n        for (const c of item.data.getCells()) {\n          c.style.display = 'none';\n        }\n      });\n\n    this.pblDropListRef.exited\n      .subscribe( event => {\n        const item = event.item as PblDragRef<PblNgridColumnDragDirective<any>>;\n        this.pending = undefined;\n        item.getPlaceholderElement().style.display = '';\n        for (const c of item.data.getCells()) {\n          c.style.display = '';\n        }\n      });\n  }\n\n    /* CdkLazyDropList start */\n  /**\n   * Selector that will be used to determine the direct container element, starting from\n   * the `cdkDropList` element and going down the DOM. Passing an alternate direct container element\n   * is useful when the `cdkDropList` is not the direct parent (i.e. ancestor but not father)\n   * of the draggable elements.\n   */\n  directContainerElement: string;\n  get pblDropListRef(): PblDropListRef<any> { return this._dropListRef as any; }\n  originalElement: ElementRef<HTMLElement>;\n  _draggablesSet = new Set<CdkDrag>();\n  ngOnInit(): void { CdkLazyDropList.prototype.ngOnInit.call(this); }\n  addDrag(drag: CdkDrag): void { return CdkLazyDropList.prototype.addDrag.call(this, drag); }\n  removeDrag(drag: CdkDrag): boolean { return CdkLazyDropList.prototype.removeDrag.call(this, drag); }\n  beforeStarted(): void { CdkLazyDropList.prototype.beforeStarted.call(this); }\n  /* CdkLazyDropList end */\n\n}\n","import { Directive, TemplateRef } from '@angular/core';\nimport { PblNgridRegistryService, PblNgridMultiTemplateRegistry, PblNgridDataHeaderExtensionRef, PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\n\n/**\n * Marks the element as the resizer template for cells.\n */\n@Directive({ selector: '[pblNgridCellResizerRef]' })\nexport class PblNgridCellResizerRefDirective extends PblNgridMultiTemplateRegistry<PblNgridDataHeaderExtensionContext, 'dataHeaderExtensions'> implements PblNgridDataHeaderExtensionRef {\n  readonly name: 'cellResizer' = 'cellResizer';\n  readonly kind: 'dataHeaderExtensions' = 'dataHeaderExtensions';\n\n  constructor(tRef: TemplateRef<PblNgridDataHeaderExtensionContext>, registry: PblNgridRegistryService) { super(tRef, registry); }\n\n  shouldRender(context: PblNgridDataHeaderExtensionContext): boolean {\n    return !!context.col.resize;\n  }\n}\n","import { PblColumn } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/lib/grid/columns/column' {\n  interface PblColumn {\n    resize: boolean;\n  }\n}\n\n\ndeclare module '@pebula/ngrid/lib/grid/columns/types' {\n  interface PblColumnDefinition {\n    resize?: boolean;\n  }\n}\n\nexport function colResizeExtendGrid(): void {\n  PblColumn.extendProperty('resize');\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'pbl-drag-plugin-default-templates',\n  template:\n`<pbl-ngrid-drag-resize *pblNgridCellResizerRef=\"let ctx\" [context]=\"ctx\"></pbl-ngrid-drag-resize>\n<span *pblNgridCellDraggerRef=\"let ctx\" [pblNgridColumnDrag]=\"ctx\" cdkDragRootElementClass=\"cdk-drag\"></span>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DragPluginDefaultTemplatesComponent {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { PblNgridModule, provideCommon, ngridPlugin } from '@pebula/ngrid';\n\nimport { CdkLazyDropList, CdkLazyDrag, PblDragHandle } from './drag-and-drop/core/lazy-drag-drop';\nimport { PblNgridRowReorderPluginDirective, PblNgridRowDragDirective, ROW_REORDER_PLUGIN_KEY } from './drag-and-drop/row/row-reorder-plugin';\nimport { PblNgridColumnReorderPluginDirective, PblNgridColumnDragDirective, COL_REORDER_PLUGIN_KEY } from './drag-and-drop/column/column-reorder-plugin';\nimport { PblNgridCellDraggerRefDirective } from './drag-and-drop/column/cell-dragger-ref';\nimport { colReorderExtendGrid } from './drag-and-drop/column/extend-grid';\n\nimport { PblNgridAggregationContainerDirective } from './drag-and-drop/column/aggregation-column';\n\nimport { PblNgridDragResizeComponent, COL_RESIZE_PLUGIN_KEY } from './column-resize/column-resize.component';\nimport { PblNgridCellResizerRefDirective } from './column-resize/cell-resizer-ref';\nimport { colResizeExtendGrid } from './column-resize/extend-grid';\n\nimport { DragPluginDefaultTemplatesComponent } from './default-settings.component';\n\nexport function ngridPlugins() {\n  return [\n    ngridPlugin({ id: ROW_REORDER_PLUGIN_KEY }, PblNgridRowReorderPluginDirective),\n    ngridPlugin({ id: COL_REORDER_PLUGIN_KEY, runOnce: colReorderExtendGrid }, PblNgridColumnReorderPluginDirective),\n    ngridPlugin({ id: COL_RESIZE_PLUGIN_KEY, runOnce: colResizeExtendGrid }, PblNgridDragResizeComponent),\n  ]\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PblNgridModule,\n    DragDropModule\n  ],\n  declarations: [\n    DragPluginDefaultTemplatesComponent,\n    CdkLazyDropList, CdkLazyDrag, PblDragHandle,\n    PblNgridRowReorderPluginDirective, PblNgridRowDragDirective,\n    PblNgridColumnReorderPluginDirective, PblNgridColumnDragDirective, PblNgridCellDraggerRefDirective,\n    PblNgridAggregationContainerDirective,\n    PblNgridDragResizeComponent, PblNgridCellResizerRefDirective,\n  ],\n  exports: [\n    DragDropModule,\n    CdkLazyDropList, CdkLazyDrag, PblDragHandle,\n    PblNgridRowReorderPluginDirective, PblNgridRowDragDirective,\n    PblNgridColumnReorderPluginDirective, PblNgridColumnDragDirective, PblNgridCellDraggerRefDirective,\n    PblNgridAggregationContainerDirective,\n    PblNgridDragResizeComponent, PblNgridCellResizerRefDirective,\n  ],\n  // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n  entryComponents: [ DragPluginDefaultTemplatesComponent ]\n})\nexport class PblNgridDragModule {\n\n  static readonly NGRID_PLUGIN = ngridPlugins();\n\n  static withDefaultTemplates(): ModuleWithProviders<PblNgridDragModule> {\n    return {\n      ngModule: PblNgridDragModule,\n      providers: provideCommon( [ { component: DragPluginDefaultTemplatesComponent } ]),\n    };\n  }\n}\n"]}