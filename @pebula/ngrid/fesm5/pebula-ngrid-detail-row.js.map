{"version":3,"file":"pebula-ngrid-detail-row.js","sources":["ng://@pebula/ngrid/detail-row/lib/detail-row/directives.ts","ng://@pebula/ngrid/detail-row/lib/detail-row/detail-row-plugin.ts","ng://@pebula/ngrid/detail-row/lib/detail-row/row.ts","ng://@pebula/ngrid/detail-row/lib/table-detail-row.module.ts"],"sourcesContent":["// tslint:disable:use-host-property-decorator\nimport {\n  Component,\n  Directive,\n  IterableDiffers,\n  OnInit,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { CdkRowDef } from '@angular/cdk/table';\n\nimport { PblNgridRegistryService, PblNgridSingleTemplateRegistry, PblNgridRowContext } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/lib/grid/services/grid-registry.service' {\n  interface PblNgridSingleRegistryMap {\n    detailRowParent?: PblNgridDetailRowParentRefDirective<any>;\n    detailRow?: PblNgridDetailRowDefDirective;\n  }\n}\n\n/**\n * Marks the element as the display element for the detail row itself.\n */\n@Directive({ selector: '[pblNgridDetailRowDef]' })\nexport class PblNgridDetailRowDefDirective extends PblNgridSingleTemplateRegistry<PblNgridRowContext<any>, 'detailRow'> {\n  readonly kind: 'detailRow' = 'detailRow';\n  constructor(tRef: TemplateRef<PblNgridRowContext<any>>, registry: PblNgridRegistryService) { super(tRef, registry); }\n}\n\n@Directive({\n  selector: '[pblNgridDetailRowParentRef]',\n  inputs: ['columns: pblNgridDetailRowParentRef', 'when: pblNgridDetailRowParentRefWhen'],\n})\nexport class PblNgridDetailRowParentRefDirective<T> extends CdkRowDef<T> implements OnInit, OnDestroy {\n\n  constructor(template: TemplateRef<PblNgridRowContext<T>>, _differs: IterableDiffers, protected registry: PblNgridRegistryService) {\n    super(template, _differs);\n  }\n\n  clone(): PblNgridDetailRowParentRefDirective<T> {\n    const clone = Object.create(this);\n    this._columnsDiffer = this.columns = undefined;\n    return clone;\n  }\n\n  ngOnInit(): void {\n    this.registry.setSingle('detailRowParent', this as any);\n  }\n\n  ngOnDestroy(): void {\n    this.registry.setSingle('detailRowParent',  undefined);\n  }\n}\n\n/**\n * Use to set the a default `pblNgridDetailRowParentRef` if the user did not set one.\n * @internal\n */\n@Component({\n  selector: 'pbl-ngrid-default-detail-row-parent',\n  template: `<pbl-ngrid-row *pblNgridDetailRowParentRef=\"let row; gridInstance as gridInstance\" [grid]=\"gridInstance\" [detailRow]=\"row\"></pbl-ngrid-row>`,\n})\nexport class PblNgridDefaultDetailRowParentComponent { }\n","import { Directive, EmbeddedViewRef, EventEmitter, Injector, Input, OnDestroy, Output, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridComponent, PblNgridPluginController, NgridPlugin, PblNgridRowContext } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowComponent } from './row';\nimport { PblNgridDetailRowParentRefDirective, PblNgridDefaultDetailRowParentComponent } from './directives';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    detailRow?: PblNgridDetailRowPluginDirective<any>;\n  }\n}\n\nexport const PLUGIN_KEY: 'detailRow' = 'detailRow';\n\nexport const ROW_WHEN_TRUE = () => true;\nexport const ROW_WHEN_FALSE = () => false;\n\nexport function toggleDetailRow<T = any>(grid: PblNgridComponent<T>, row: T, forceState?: boolean): boolean | void {\n  const controller = PblNgridPluginController.find(grid);\n  if (controller) {\n    const plugin = controller.getPlugin(PLUGIN_KEY);\n    if (plugin) {\n      return plugin.toggleDetailRow(row, forceState);\n    }\n  }\n}\n\nexport interface PblDetailsRowToggleEvent<T = any> {\n  row: T;\n  expended: boolean;\n  toggle(): void;\n}\n\n@NgridPlugin({ id: PLUGIN_KEY })\n@Directive({ selector: 'pbl-ngrid[detailRow]', exportAs: 'pblNgridDetailRow' })\n@UnRx()\nexport class PblNgridDetailRowPluginDirective<T> implements OnDestroy {\n  /**\n   * Detail row control (none / all rows / selective rows)\n   *\n   * A detail row is an additional row added below a row rendered with the context of the row above it.\n   *\n   * You can enable/disable detail row for the entire grid by setting `detailRow` to true/false respectively.\n   * To control detail row per row, provide a predicate.\n   */\n  @Input() get detailRow(): ( (index: number, rowData: T) => boolean ) | boolean { return this._detailRow; }\n  set detailRow(value: ( (index: number, rowData: T) => boolean ) | boolean ) {\n    if (this._detailRow !== value) {\n      const grid = this.grid;\n\n      if (typeof value === 'function') {\n        this._isSimpleRow = (index: number, rowData: T) => !(value as any)(index, rowData);\n        this._isDetailRow = value;\n      } else {\n        value = coerceBooleanProperty(value);\n        this._isDetailRow = value ? ROW_WHEN_TRUE : ROW_WHEN_FALSE;\n        this._isSimpleRow = value ? ROW_WHEN_FALSE : ROW_WHEN_TRUE;\n      }\n      this._detailRow = value;\n\n      if (grid.isInit) {\n        this.updateTable();\n      }\n    }\n  }\n\n  @Input() set singleDetailRow(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._forceSingle !== value) {\n      this._forceSingle = value;\n      if (value && this._openedRow && this._openedRow.expended) {\n        this._detailRowRows.forEach( r => {\n          if (r.row !== this._openedRow.row) {\n            r.toggle(false);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * A list of columns that will not trigger a detail row toggle when clicked.\n   */\n  @Input() excludeToggleFrom: string[];\n\n  /**\n   * Set the behavior when the row's context is changed while the detail row is opened (another row is displayed in place of the current row).\n   *\n   * - ignore: don't do anything, leave as is (for manual intervention)\n   * - close: close the detail row\n   * - render: re-render the row with the new context\n   *\n   * The default behavior is `render`\n   *\n   * This scenario will pop-up when using pagination and the user move between pages or change the page size.\n   * It might also happen when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * The `ignore` phase, when used, will not trigger an update, leaving the detail row opened and showing data from the previous row.\n   * The `ignore` is intended for use with `toggledRowContextChange`, which will emit when the row context has changed, this will allow the developer to\n   * toggle the row (mimic `close`) or update the context manually. For example, if toggling open the detail row invokes a \"fetch\" operation that retrieves data for the detail row\n   * this will allow updates on context change.\n   *\n   * > Note that `toggledRowContextChange` fires regardless of the value set in `whenContextChange`\n   */\n  @Input() whenContextChange: 'ignore' | 'close' | 'render' = 'render';\n\n  /**\n   * Emits whenever a detail row instance is toggled on/off\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggleChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n  /**\n   * Emits whenever the row context has changed while the row is toggled open.\n   * This scenario is unique and will occur only when a detail row is opened AND the parent row has changed.\n   *\n   * For example, when using pagination and the user navigates to the next/previous set or when the rows per page size is changed.\n   * It might also occur when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggledRowContextChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n\n  private _openedRow?: PblDetailsRowToggleEvent<T>;\n  private _forceSingle: boolean;\n  private _isSimpleRow: (index: number, rowData: T) => boolean = ROW_WHEN_TRUE;\n  private _isDetailRow: (index: number, rowData: T) => boolean = ROW_WHEN_FALSE;\n  private _detailRowRows = new Map<any, PblNgridDetailRowComponent>();\n  private _detailRow: ( (index: number, rowData: T) => boolean ) | boolean;\n  private _detailRowDef: PblNgridDetailRowParentRefDirective<T>;\n  private _defaultParentRef: ComponentRef<PblNgridDefaultDetailRowParentComponent>;\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n\n  constructor(private grid: PblNgridComponent<any>, pluginCtrl: PblNgridPluginController<T>, private injector: Injector) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    let subscription = pluginCtrl.events.subscribe( event => {\n      if (event.kind === 'onInit') {\n        subscription.unsubscribe();\n        subscription = undefined;\n\n        // Depends on target-events plugin\n        // if it's not set, create it.\n        if (!pluginCtrl.hasPlugin('targetEvents')) {\n          pluginCtrl.createPlugin('targetEvents');\n        }\n\n        grid.registry.changes\n          .subscribe( changes => {\n            for (const c of changes) {\n              switch (c.type) {\n                case 'detailRowParent':\n                  if (c.op === 'remove') {\n                    grid._cdkTable.removeRowDef(c.value);\n                    this._detailRowDef = undefined;\n                  }\n                  this.setupDetailRowParent();\n                  // grid._cdkTable.syncRows('data');\n                  break;\n              }\n            }\n          });\n\n        // if we start with an initial value, then update the grid cause we didn't do that\n        // when it was set (we cant cause we're not init)\n        // otherwise just setup the parent.\n        if (this._detailRow) {\n          this.updateTable();\n        } else {\n          this.setupDetailRowParent();\n        }\n      }\n    });\n  }\n\n  addDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.set(detailRow.row, detailRow);\n  }\n\n  removeDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.delete(detailRow.row);\n  }\n\n  toggleDetailRow(row: any, forceState?: boolean): boolean | void {\n    const detailRow = this._detailRowRows.get(row);\n    if (detailRow) {\n      detailRow.toggle(forceState);\n      return detailRow.expended;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._defaultParentRef) {\n      this._defaultParentRef.destroy();\n    }\n    this._removePlugin(this.grid);\n  }\n\n  /** @internal */\n  detailRowToggled(event: PblDetailsRowToggleEvent<T>): void {\n    // logic for closing previous row\n    const isSelf = this._openedRow && this._openedRow.row === event.row;\n    if (event.expended) {\n      if (this._forceSingle && this._openedRow && this._openedRow.expended && !isSelf) {\n        this._openedRow.toggle();\n      }\n      this._openedRow = event;\n    } else if (isSelf) {\n      this._openedRow = undefined;\n    }\n    this.toggleChange.emit(event);\n  }\n\n  private setupDetailRowParent(): void {\n    const grid = this.grid;\n    const cdkTable = grid._cdkTable;\n    if (this._detailRowDef) {\n      cdkTable.removeRowDef(this._detailRowDef);\n      this._detailRowDef = undefined;\n    }\n    if (this.detailRow) {\n      let detailRow = grid.registry.getSingle('detailRowParent');\n      if (detailRow) {\n        this._detailRowDef = detailRow = detailRow.clone();\n        Object.defineProperty(detailRow, 'columns', { enumerable: true,  get: () => grid.columnApi.visibleColumnIds });\n        Object.defineProperty(detailRow, 'when', { enumerable: true,  get: () => this._isDetailRow });\n        detailRow.ngOnChanges({ columns: { isFirstChange: () => true, firstChange: true, currentValue: detailRow.columns, previousValue: null }});\n      } else if (!this._defaultParentRef) {\n        // TODO: move to module? set in root registry? put elsewhere to avoid grid sync (see event of registry change)...\n        this._defaultParentRef = this.injector.get(ComponentFactoryResolver)\n          .resolveComponentFactory(PblNgridDefaultDetailRowParentComponent)\n          .create(this.injector);\n        this._defaultParentRef.changeDetectorRef.detectChanges();\n        return;\n      }\n    }\n    this.resetTableRowDefs();\n  }\n\n  private resetTableRowDefs(): void {\n    const grid = this.grid;\n    if (this._detailRowDef) {\n      this._detailRow === false\n        ? grid._cdkTable.removeRowDef(this._detailRowDef)\n        : grid._cdkTable.addRowDef(this._detailRowDef)\n      ;\n    }\n  }\n\n  /**\n   * Update the grid with detail row infor.\n   * Instead of calling for a change detection cycle we can assign the new predicates directly to the cdkRowDef instances.\n   */\n  private updateTable(): void {\n    this.grid._tableRowDef.when = this._isSimpleRow;\n    this.setupDetailRowParent();\n    // Once we changed the `when` predicate on the `CdkRowDef` we must:\n    //   1. Update the row cache (property `rowDefs`) to reflect the new change\n    this.grid._cdkTable.updateRowDefCache();\n\n    //   2. re-render all rows.\n    // The logic for re-rendering all rows is handled in `CdkTable._forceRenderDataRows()` which is a private method.\n    // This is a workaround, assigning to `multiTemplateDataRows` will invoke the setter which\n    // also calls `CdkTable._forceRenderDataRows()`\n    // TODO: This is risky, the setter logic might change.\n    // for example, if material will chack for change in `multiTemplateDataRows` setter from previous value...\n    this.grid._cdkTable.multiTemplateDataRows = !!this._detailRow;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Inject,\n  ElementRef,\n  OnInit,\n  OnDestroy, Optional,\n  ViewEncapsulation,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CDK_ROW_TEMPLATE, CdkRow } from '@angular/cdk/table';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridPluginController, PblNgridRowComponent, PblNgridExtensionApi, EXT_API_TOKEN } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowPluginDirective, PblDetailsRowToggleEvent, PLUGIN_KEY } from './detail-row-plugin';\n\n@Component({\n  selector: 'pbl-ngrid-row[detailRow]',\n  exportAs: 'pblNgridDetailRow',\n  host: { // tslint:disable-line:use-host-property-decorator\n    class: 'pbl-ngrid-row pbl-row-detail-parent',\n    role: 'row',\n    '[attr.tabindex]': 'grid?.rowFocus',\n    '(keydown)': 'handleKeydown($event)'\n  },\n  template: CDK_ROW_TEMPLATE,\n  styles: [ `.pbl-row-detail-parent { position: relative; cursor: pointer; }` ],\n  providers: [\n    { provide: CdkRow, useExisting: PblNgridDetailRowComponent }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n@UnRx()\nexport class PblNgridDetailRowComponent extends PblNgridRowComponent implements OnInit, OnDestroy {\n\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input('detailRow') set row(value: any) { this.updateRow(); }\n\n  private get _element(): HTMLElement { return this.el.nativeElement; }\n  private opened = false;\n  private plugin: PblNgridDetailRowPluginDirective<any>;\n\n  constructor(@Optional() @Inject(EXT_API_TOKEN) extApi: PblNgridExtensionApi<any>,\n              el: ElementRef<HTMLElement>,\n              private vcRef: ViewContainerRef) {\n    super(extApi, el);\n  }\n\n  ngOnInit(): void {\n    const controller = PblNgridPluginController.find(this.extApi.grid);\n    this.plugin = controller.getPlugin(PLUGIN_KEY); // TODO: THROW IF NO PLUGIN...\n    this.plugin.addDetailRow(this);\n    const tradeEvents = controller.getPlugin('targetEvents');\n    tradeEvents.cellClick\n      .pipe(UnRx(this))\n      .subscribe( event => {\n        if (event.type === 'data' && event.row === this.context.$implicit) {\n          const { excludeToggleFrom } = this.plugin;\n          if (!excludeToggleFrom || !excludeToggleFrom.some( c => event.column.id === c )) {\n            this.toggle();\n          }\n        }\n      });\n\n    tradeEvents.rowClick\n      .pipe(UnRx(this))\n      .subscribe( event => {\n        if (!event.root && event.type === 'data' && event.row === this.context.$implicit) {\n          this.toggle();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.plugin.removeDetailRow(this);\n  }\n\n  updateRow(): void {\n    const prevIdentity = this.context && this.context.$implicit;\n    super.updateRow();\n    if (this.opened) {\n      const currIdentity = this.context && this.context.$implicit;\n      if (currIdentity !== prevIdentity && currIdentity) {\n        switch (this.plugin.whenContextChange) {\n          case 'render':\n              this.render();\n            break;\n          case 'close':\n            this.toggle(false);\n            break;\n        }\n        this.plugin.toggledRowContextChange.next(this.createEvent());\n      }\n    }\n  }\n\n  toggle(forceState?: boolean): void {\n    if (this.opened !== forceState) {\n      if ( this.opened ) {\n        this.vcRef.clear();\n        this._element.classList.remove('pbl-row-detail-opened');\n      } else {\n        this.render();\n      }\n      this.opened = this.vcRef.length > 0;\n\n      if (this.opened) {\n        this._element.classList.add('pbl-row-detail-opened');\n      }\n\n      this.plugin.detailRowToggled(this.createEvent());\n    }\n  }\n\n  /**\n   * @internal\n   */\n  handleKeydown(event: KeyboardEvent): void {\n    if ( event.target === this._element ) {\n      const keyCode = event.keyCode;\n      const isToggleKey = keyCode === ENTER || keyCode === SPACE;\n      if ( isToggleKey ) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.toggle();\n      }\n    }\n  }\n\n  private createEvent(): PblDetailsRowToggleEvent<any> {\n    const event = Object.create(this);\n    Object.defineProperty(event, 'row', { value: this.context.$implicit });\n    return event;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.context.$implicit) {\n      const detailRowDef = this.context.grid.registry.getSingle('detailRow');\n      if ( detailRowDef ) {\n        this.vcRef.createEmbeddedView(detailRowDef.tRef, this.context);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridModule } from '@pebula/ngrid';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { PblNgridDetailRowParentRefDirective, PblNgridDetailRowDefDirective, PblNgridDefaultDetailRowParentComponent } from './detail-row/directives';\nimport { PblNgridDetailRowPluginDirective } from './detail-row/detail-row-plugin';\nimport { PblNgridDetailRowComponent } from './detail-row/row';\n\nconst DETAIL_ROW = [\n  PblNgridDetailRowPluginDirective,\n  PblNgridDetailRowComponent,\n  PblNgridDetailRowParentRefDirective,\n  PblNgridDetailRowDefDirective,\n];\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ DETAIL_ROW, PblNgridDefaultDetailRowParentComponent ],\n  exports: [ DETAIL_ROW ],\n  entryComponents: [ PblNgridDetailRowComponent, PblNgridDefaultDetailRowParentComponent ]\n})\nexport class PblNgridDetailRowModule { }\n"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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"}