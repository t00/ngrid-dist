{"version":3,"file":"pebula-ngrid-sticky.js","sources":["ng://@pebula/ngrid/sticky/lib/sticky/sticky-plugin.ts","ng://@pebula/ngrid/sticky/lib/sticky.module.ts"],"sourcesContent":["import { filter } from 'rxjs/operators';\nimport { Directive, Input, IterableDiffers, IterableDiffer, IterableChangeRecord, OnDestroy } from '@angular/core';\n\nimport { PblNgridComponent, PblNgridPluginController, TablePlugin } from '@pebula/ngrid';\n\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    sticky?: PblNgridStickyPluginDirective;\n  }\n}\n\nexport const PLUGIN_KEY: 'sticky' = 'sticky';\n\nexport function setStickyRow(table: PblNgridComponent<any>, type: 'header' | 'footer', bulk: Array<['table' | number, boolean]>): void;\nexport function setStickyRow(table: PblNgridComponent<any>, type: 'header' | 'footer', value: 'table' | number, state: boolean): void;\nexport function setStickyRow(table: PblNgridComponent<any>, type: 'header' | 'footer', valueOrBulk: Array<['table' | number, boolean]> | 'table' | number, state?: boolean): void {\n  const isHeader = type === 'header';\n  const queryList = isHeader ? table._headerRowDefs : table._footerRowDefs;\n  const bulk: Array<['table' | number, boolean]> = Array.isArray(valueOrBulk) ? valueOrBulk : [ [valueOrBulk, state] ];\n\n  const addOneIfMainExists = (isHeader && table.showHeader) || (!isHeader && table.showFooter) ? 1 : 0;\n\n  let changed: boolean;\n  for (const [value, state] of bulk) {\n    // the index from the user is 0 based or the table header/footer row.\n    // we store them both, so we need to convert... our first is always the table header/footer and then we have the same order as the user's.\n    let idx = value === 'table' ? 0 : value + addOneIfMainExists;\n    if (!isHeader) {\n      // sticky-styler stickRows() methods will reverse the order of footer columns\n      // so we actually need to set another row to make the row we want sticky.\n      // we could reverse the collection, but choosing the opposite side is better.\n      // think [0, 1, 2, 3, 4] and we want 1. sticky-styler will reverse to [4, 3, 2, 1, 0] so doing nothing will stick 3.\n      // the opposite is length MINUS 1 MINUS index which is 5 - 1 - 1 which is 3, in the revered array its the row 1 which is what we wanted.\n      idx = (queryList.length - 1) - idx;\n    }\n\n    const rowDef = queryList.toArray()[idx];\n    if (rowDef && rowDef.sticky !== state) {\n      rowDef.sticky = state;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    if (isHeader) {\n      table._cdkTable.updateStickyHeaderRowStyles();\n    } else {\n      table._cdkTable.updateStickyFooterRowStyles();\n    }\n  }\n}\n\nexport function setStickyColumns(table: PblNgridComponent<any>, type: 'start' | 'end', bulk: Array<[string | number, boolean]>): void;\nexport function setStickyColumns(table: PblNgridComponent<any>, type: 'start' | 'end', value: string  | number, state: boolean): void;\nexport function setStickyColumns(table: PblNgridComponent<any>, type: 'start' | 'end', valueOrBulk: Array<[string  | number, boolean]> | string  | number, state?: boolean): void {\n  const bulk: Array<[string | number, boolean]> = Array.isArray(valueOrBulk) ? valueOrBulk : [ [valueOrBulk, state] ];\n  let changed: boolean;\n  for (let [columnId, state] of bulk) {\n    if (typeof columnId === 'string') {\n      columnId = table.columnApi.visibleColumns.findIndex( c => c.orgProp === columnId );\n    }\n    const c = table.columnApi.visibleColumns[columnId];\n    if (c) {\n      changed = true;\n      c.pin = state ? type : undefined;\n      if (type === 'end') {\n        c.columnDef.stickyEnd = state;\n        c.columnDef.sticky = false;\n      } else {\n        c.columnDef.sticky = state;\n        c.columnDef.stickyEnd = false;\n      }\n    }\n  }\n  if (changed) {\n    table._cdkTable.updateStickyColumnStyles();\n  }\n}\n\n@TablePlugin({ id: PLUGIN_KEY })\n@Directive({ selector: 'pbl-ngrid[stickyColumnStart], pbl-ngrid[stickyColumnEnd], pbl-ngrid[stickyHeader], pbl-ngrid[stickyFooter]' })\nexport class PblNgridStickyPluginDirective implements OnDestroy {\n  /**\n   * Set the header rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `table` - Literal string `table` that will set the table's main header row.\n   *   - number  - The index of the row, for multi-header row. The index refers to the order you defined the header/headerGroup rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyColumnStart(value: Array<string | number>) {\n    if (!this._startDiffer) {\n      this._startDiffer = this._differs.find([]).create();\n    }\n    this.applyColumnDiff('start', value, this._startDiffer);\n  }\n\n  /**\n   * Set the footer rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `table` - Literal string `table` that will set the table's main footer row.\n   *   - number  - The index of the row, for multi-footer row. The index refers to the order you defined the footer rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyColumnEnd(value: Array<string | number>) {\n    if (!this._endDiffer) {\n      this._endDiffer = this._differs.find([]).create();\n    }\n    this.applyColumnDiff('end', value, this._endDiffer);\n  }\n\n    /**\n   * Set the header rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `table` - Literal string `table` that will set the table's main header row.\n   *   - number  - The index of the row, for multi-header row. The index refers to the order you defined the header/headerGroup rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyHeader(value: Array<'table' | number>) {\n    if (!this._headerDiffer) {\n      this._headerDiffer = this._differs.find([]).create();\n    }\n    this.applyRowDiff('header', value, this._headerDiffer);\n  }\n\n  /**\n   * Set the footer rows you want to apply sticky positioning to.\n   * Valid values are:\n   *   - `table` - Literal string `table` that will set the table's main footer row.\n   *   - number  - The index of the row, for multi-footer row. The index refers to the order you defined the footer rows (base 0);\n   *\n   * For performance considerations only new values will trigger a change (i.e. the array should be treated as immutable).\n   * Manipulating the array will not trigger a change (the sticky state will not change) unless sending a copy of it (replacing it, e.g. Array.slice())\n   */\n  @Input() set stickyFooter(value: Array<'table' | number>) {\n    if (!this._footerDiffer) {\n      this._footerDiffer = this._differs.find([]).create();\n    }\n    this.applyRowDiff('footer', value, this._footerDiffer);\n  }\n\n  private _startDiffer: IterableDiffer<string | number>;\n  private _endDiffer: IterableDiffer<string | number>;\n  private _headerDiffer: IterableDiffer<'table' | number>;\n  private _footerDiffer: IterableDiffer<'table' | number>;\n\n  private _columnCache: { start: Array<string | number>; end: Array<string | number>; } = { start: [], end: [] };\n  private _removePlugin: (table: PblNgridComponent<any>) => void;\n\n  constructor (protected readonly table: PblNgridComponent<any>,\n               protected readonly _differs: IterableDiffers,\n               protected readonly pluginCtrl: PblNgridPluginController) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    pluginCtrl.events\n      .pipe(filter( e => e.kind === 'onResizeRow'))\n      .subscribe( () => {\n        this.table._cdkTable.updateStickyHeaderRowStyles();\n        this.table._cdkTable.updateStickyColumnStyles();\n        this.table._cdkTable.updateStickyFooterRowStyles();\n      });\n\n      pluginCtrl.events\n        .pipe(filter ( e => e.kind === 'onInvalidateHeaders' ))\n        .subscribe( () => {\n          if (this._startDiffer && this.table.isInit) {\n            this._startDiffer.diff([]);\n            this.applyColumnDiff('start', this._columnCache.start, this._startDiffer)\n          }\n\n          if (this._endDiffer && this.table.isInit) {\n            this._endDiffer.diff([]);\n            this.applyColumnDiff('end', this._columnCache.end, this._endDiffer)\n          }\n        });\n  }\n\n  ngOnDestroy(): void {\n    this._removePlugin(this.table);\n  }\n\n  protected applyColumnDiff(type: 'start' | 'end', value: Array<string | number>, differ: IterableDiffer<string | number>): void {\n    if (!this.table.isInit) {\n      const unsub = this.pluginCtrl.events.subscribe( event => {\n        if (event.kind === 'onInit') {\n          unsub.unsubscribe();\n          this.applyColumnDiff(type, value, differ);\n        }\n      });\n      return;\n    }\n\n    this._columnCache[type] = value || [];\n\n    const changes = differ.diff(value || []);\n    const bulk: Array<[string | number, boolean]> = [];\n    changes.forEachOperation((record: IterableChangeRecord<string | number>, prevIndex: number, currentIndex: number) => {\n      if (record.previousIndex == null) {\n        bulk.push([record.item, true]);\n      } else if (currentIndex == null) {\n        bulk.push([record.item, false]);\n      }\n    });\n    if (bulk.length > 0) {\n      setStickyColumns(this.table, type, bulk);\n    }\n  }\n\n  protected applyRowDiff(type: 'header' | 'footer', value: Array<'table' | number>, differ: IterableDiffer<'table' | number>): void {\n    if (!this.table.isInit) {\n      const unsub = this.pluginCtrl.events.subscribe( event => {\n        if (event.kind === 'onInit') {\n          unsub.unsubscribe();\n          this.applyRowDiff(type, value, differ);\n        }\n      });\n      return;\n    }\n\n    const changes = differ.diff(value || []);\n    const bulk: Array<['table' | number, boolean]> = [];\n    changes.forEachOperation((record: IterableChangeRecord<'table' | number>, prevIndex: number, currentIndex: number) => {\n      if (record.previousIndex == null) {\n        bulk.push([record.item, true]);\n      } else if (currentIndex == null) {\n        bulk.push([record.item, false]);\n      }\n    });\n    if (bulk.length > 0) {\n      setStickyRow(this.table, type, bulk);\n    }\n  }\n}\n","import { filter, first } from 'rxjs/operators';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridModule, PblNgridPluginController, PblNgridConfigService } from '@pebula/ngrid';\nimport { PblNgridStickyPluginDirective, setStickyRow, setStickyColumns } from './sticky/sticky-plugin';\n\ndeclare module '@pebula/ngrid/lib/table/services/config' {\n  interface PblNgridConfig {\n    stickyPlugin?: {\n      headers?: Array<'table' | number>;\n      footers?: Array<'table' | number>;\n      columnStart?: Array<string | number>;\n      columnEnd?: Array<string | number>;\n    }\n  }\n}\n\nconst MAPPER = <T>(v: T): [T, boolean] => [v, true];\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule ],\n  declarations: [ PblNgridStickyPluginDirective ],\n  exports: [ PblNgridStickyPluginDirective ],\n})\nexport class PblNgridStickyModule {\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridStickyModule,\n              configService: PblNgridConfigService) {\n    if (parentModule) {\n      return;\n    }\n\n    PblNgridPluginController.created\n      .subscribe( event => {\n        const { table, controller } = event;\n        if (controller && !controller.hasPlugin('sticky')) {\n          controller.events\n            .pipe( filter( e => e.kind === 'onInit' ), first() )\n            .subscribe( event => {\n              const stickyPluginConfig = configService.get('stickyPlugin');\n              if (stickyPluginConfig) {\n                if (stickyPluginConfig.headers) {\n                  setStickyRow(table, 'header', stickyPluginConfig.headers.map(MAPPER));\n                }\n                if (stickyPluginConfig.footers) {\n                  setStickyRow(table, 'footer', stickyPluginConfig.footers.map(MAPPER));\n                }\n                if (stickyPluginConfig.columnStart) {\n                  setStickyColumns(table, 'start', stickyPluginConfig.columnStart.map(MAPPER));\n                }\n                if (stickyPluginConfig.columnEnd) {\n                  setStickyColumns(table, 'end', stickyPluginConfig.columnEnd.map(MAPPER));\n                }\n              }\n            });\n        }\n      });\n  }\n}\n"],"names":["tslib_1.__values"],"mappings":"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"}